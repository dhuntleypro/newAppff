import React, { ReactNode } from "react";
import { ProductModelProps } from "@/models/ProductModelProps";
interface CartContextType {
    carts: Partial<ProductModelProps>[];
    addToCart: (item: Partial<ProductModelProps>) => Promise<void>;
    decreaseFromCart: (item: Partial<ProductModelProps>) => void;
    deleteItemFromCart: (item: Partial<ProductModelProps>) => void;
    totalSum: number;
    totalTax: number;
    totalShipping: number;
    grandTotal: number;
    quantity: number;
    clearData: () => void;
}
export declare const CartContext: React.Context<CartContextType | undefined>;
export declare const useCart: () => CartContextType;
interface CartProviderProps {
    children: ReactNode;
    storage: {
        getItem: (key: string) => Promise<string | null>;
        setItem: (key: string, value: string) => Promise<void>;
        removeItem: (key: string) => Promise<void>;
    };
    storageKey: string;
}
export declare const CartProvider: React.FC<CartProviderProps>;
export {};
