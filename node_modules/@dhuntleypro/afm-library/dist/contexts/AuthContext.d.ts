import React from "react";
import { UserProps } from "../models/UserProps";
interface AuthState {
    user: UserProps | null;
    token: string | null;
    authenticated: boolean;
}
interface AuthContextType {
    authState: AuthState;
    onRegister: (storeID: string, user: UserProps) => Promise<any>;
    onLogin: (storeID: string, email: string, password: string) => Promise<any>;
    onLogout: () => Promise<void>;
    updateSingleUserItem: (updateKey: keyof UserProps, updateValue: any) => Promise<void>;
    addToFavorites: (itemId: string) => Promise<void>;
    removeFromFavorites: (itemId: string) => Promise<void>;
    isFavorite: (itemId: string) => boolean;
    deleteUser: (email: string) => Promise<void>;
}
export declare const TOKEN_KEY = "your_token_key_here";
export declare const AuthContext: React.Context<AuthContextType | undefined>;
export declare const useAuth: () => AuthContextType;
export declare const AuthProvider: ({ children }: {
    children: React.ReactNode;
}) => import("react/jsx-runtime").JSX.Element | null;
export {};
