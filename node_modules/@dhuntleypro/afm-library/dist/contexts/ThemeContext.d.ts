import React, { ReactNode } from 'react';
type ThemeMode = 'light' | 'dark' | 'system';
export interface StoreTheme {
    light: {
        pageBackground: string;
        pageText: string;
        buttonBackground: string;
        buttonText: string;
        buttonShadow: string;
        tint: string;
        tabIconDefault: string;
        tabIconSelected: string;
        cardBackground: string;
        cardText: string;
        cardSecondaryText: string;
        cardPrice: string;
        cardBorder: string;
        background: string;
        title: string;
        subtitle: string;
        border: string;
        card: string;
        primary: string;
        secondary: string;
    };
    dark: {
        pageBackground: string;
        pageText: string;
        buttonBackground: string;
        buttonText: string;
        buttonShadow: string;
        tint: string;
        tabIconDefault: string;
        tabIconSelected: string;
        cardBackground: string;
        cardText: string;
        cardSecondaryText: string;
        cardPrice: string;
        cardBorder: string;
        background: string;
        title: string;
        subtitle: string;
        border: string;
        card: string;
        primary: string;
        secondary: string;
    };
}
interface ThemeContextProps {
    theme: ThemeMode;
    setTheme: (mode: ThemeMode) => void;
    isDarkMode: boolean;
    colors: StoreTheme['light'] | StoreTheme['dark'];
}
interface ThemeProviderProps {
    children: ReactNode;
    storeTheme: StoreTheme;
    storage: any;
    storageKey: string;
}
export declare const ThemeContext: React.Context<ThemeContextProps | undefined>;
export declare const useTheme: () => ThemeContextProps;
export declare const ThemeProvider: ({ children, storeTheme, storage, storageKey }: ThemeProviderProps) => import("react/jsx-runtime").JSX.Element;
export {};
