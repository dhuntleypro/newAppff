import { UserProps } from "../models/UserProps";
export declare const authApi: {
    get: <T = any>(endpoint: string, options?: Omit<RequestInit, "method"> & {
        params?: Record<string, string | number> | undefined;
    }) => Promise<T>;
    post: <T_1 = any>(endpoint: string, body: any, options?: Omit<RequestInit, "body" | "method"> & {
        params?: Record<string, string | number> | undefined;
    }) => Promise<T_1>;
    patch: <T_2 = any>(endpoint: string, body: any, options?: Omit<RequestInit, "body" | "method"> & {
        params?: Record<string, string | number> | undefined;
    }) => Promise<T_2>;
    put: <T_3 = any>(endpoint: string, body: any, options?: Omit<RequestInit, "body" | "method"> & {
        params?: Record<string, string | number> | undefined;
    }) => Promise<T_3>;
    delete: <T_4 = any>(endpoint: string, options?: Omit<RequestInit, "method"> & {
        params?: Record<string, string | number> | undefined;
    }) => Promise<T_4>;
};
export declare const verify: (user: any) => Promise<any>;
export declare const login: (user: UserProps) => Promise<any>;
export declare const getUsersApi: () => Promise<any>;
export declare const getClientUsersApi: (storeID: string, email: string) => Promise<any>;
export declare const updateUserApi: (userEmail: string, tableName: string, updateKey: string, updateValue: any) => Promise<any>;
export declare const deleteUserApi: ({ email }: {
    email: string;
}) => Promise<any>;
