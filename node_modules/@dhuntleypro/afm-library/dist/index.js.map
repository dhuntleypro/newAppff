{"version":3,"file":"index.js","sources":["../src/components/buttons/MyButton.tsx","../src/contexts/CartContext.tsx","../src/utils/theme.tsx","../src/hooks/convertToCurrency.ts","../src/utils/api.tsx","../src/utils/constants.tsx","../src/utils/createFetchClient.tsx","../src/contexts/AuthContext.tsx","../src/api/productsApi.tsx","../src/contexts/ClientProductContext.tsx","../src/components/card/ProductCardView.tsx","../src/components/card/OrderCrudCard.tsx","../src/components/card/ProductCrudCard.tsx","../src/components/card/ProductCardV2.tsx","../src/components/banner/BannerVOne.tsx","../src/components/textfield/TextFieldVOne.tsx","../src/components/delete/DeleteSectionView.tsx","../src/components/divider/Divider.tsx","../src/components/products/ProductListItem.tsx","../src/components/views/UserLoginTextFields.tsx","../src/hooks/generateUUID.tsx","../src/components/views/UserRegisterTextFields.tsx","../src/api/storeApi.tsx","../src/contexts/ClientStoreContext.tsx","../src/components/pages/register/RegisterComponentTwo.tsx","../src/components/pages/login/LoginComponentTwo.tsx","../src/model-sample-data/sample-order.tsx","../src/model-sample-data/sample-product.tsx","../src/layouts/CoreLayout.tsx","../src/api/collectionsApi.tsx","../src/contexts/CollectionContext.tsx","../src/api/ordersApi.tsx","../src/contexts/OrderContext.tsx","../src/layouts/RootLayout.tsx","../src/hooks/useClientOnlyValue.ts","../src/layouts/TabLayout.tsx","../src/layouts/AuthLayout.tsx","../src/api/mankindProductApi.tsx","../src/contexts/MankindProductContext.tsx","../src/api/mankindStoreApi.tsx","../src/contexts/MankindStoreContext.tsx","../src/contexts/ThemeContext.tsx","../src/api/authorization.tsx","../src/api/couponApi.tsx","../src/api/inboxApi.tsx","../src/api/paymentApi.tsx","../src/utils/pages.tsx","../src/utils/Routes.tsx","../src/utils/storage.tsx","../src/hooks/formatPhoneNumber.ts","../src/hooks/ExternalLink.tsx","../src/hooks/stripeConverter.tsx","../src/components/ExternalLink.tsx","../src/components/Themed.tsx","../src/components/StyledText.tsx","../src/components/EditScreenInfo.tsx","../src/components/pages/collections/CollectionPageVTwo.tsx","../src/components/pages/settings/SettingsPage.tsx","../src/components/pages/login/LoginComponentOne.tsx","../src/components/pages/welcome/WelcomePageTwo.tsx","../src/components/pages/client-order/ClientOrderCard.tsx","../src/components/other/general/Styles.tsx","../src/components/other/cart/CartCard.tsx","../src/components/pages/cart/PaymentPayScreen.tsx","../src/components/pages/cart/CartPageVOne.tsx","../src/components/buttons/GlitterButtom.tsx","../src/components/pages/product-details/ProductDetailsPageVThree.tsx","../src/components/other/cards/other/ProductRow.tsx","../src/components/pages/home/TopSectionHeader.tsx","../src/components/pages/home/Carousel.tsx","../src/components/pages/home/Headings.tsx","../src/components/search/SearchBarVOne.tsx","../src/components/home/HomeDesignOne.tsx","../src/components/home/HomeDesignTwo.tsx","../src/components/products/ProductSearchScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Text, StyleSheet, ViewStyle, TextStyle } from 'react-native';\nimport {  MyButtonProps } from '../interfaces/MyButtonProps';\n\n\n\nexport const MyButton: React.FC<MyButtonProps> = ({ onPress, title, buttonStyle, textStyle }) => {\n  return (\n    <TouchableOpacity style={[styles.button, buttonStyle]} onPress={onPress}>\n      <Text style={[styles.text, textStyle]}>{title}</Text>\n    </TouchableOpacity>\n  );\n};\n\nexport default MyButton;\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#FF6F61',\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    color: '#FFF',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFocusEffect } from \"@react-navigation/native\";\n\n// Define the interface for cart items\ninterface CartItem {\n  id: string;\n  price: number; // Add price property\n  quantity: number\n  // Add any other properties as needed\n}\n\n// Define the context type\ninterface CartContextType {\n  carts: CartItem[];\n  addToCart: (item: CartItem) => void;  \n  decreaseFromCart: (item: CartItem) => void;\n  totalSum: number;\n  totalTax:  number;\n  totalShipping :  number;\n  grandTotal:  number;\n  quantity: number;\n  \n  deleteItemFromCart: (item: CartItem) => void;\n  clearData: (item: CartItem) => void;\n}\n\n// Create the context with initial value\nexport const CartContext = createContext<CartContextType>({\n  carts: [],\n  addToCart: () => {}, // Placeholder function\n  decreaseFromCart: () => {},\n  totalSum: 0, // Initial total sum\n  totalTax: 0, \n  totalShipping : 0,\n  grandTotal: 0,\n  deleteItemFromCart:  () => {},\n  quantity: 0,\n  clearData:  () => {},\n});\n\n// Define the CartProvider component\nexport const CartProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  // Initialize state for carts and totalSum\n  const [carts, setCarts] = useState<CartItem[]>([]);\n  const [totalSum, setTotalSum] = useState(0);\n  // const [totalTax, setTotalTax] = useState(0);\n  const [totalShipping, setTotalShipping] = useState(10);\n  // const [grandTotal, setGrandTotal] = useState(0);\n  const [quantity, setQuantity] = useState(0);\n\n  const totalTax = (totalSum  + totalShipping ) / ( 8.875 )\n  const grandTotal = totalTax + totalSum\n\n  useEffect(() => {\n    loadCartItems(); // Load cart items on component mount\n\n    // if (quantity <= 0    ){ // || carts.length <= 0\n    //   setQuantity(0)\n    // }\n  }, []); // Empty dependency array ensures it only runs once on mount\n\n \n  // Function to load cart items from AsyncStorage\n  const loadCartItems = async () => {\n    try {\n      const storedCarts = await AsyncStorage.getItem(\"carts\");\n      if (storedCarts) {\n        const parsedCarts: CartItem[] = JSON.parse(storedCarts);\n        setCarts(parsedCarts);\n        calculateTotalSum(parsedCarts); // Calculate total sum\n        calculateGrandTotal(parsedCarts); // Calculate grand total\n        // calculateTax(parsedCarts);\n      \n      }\n    } catch (error) {\n      console.error(\"Error loading cart items:\", error);\n    }\n  };\n\n  // Function to add an item to the cart\n  const addToCart = async (item: CartItem) => {\n    try {\n      const itemExistIndex = carts.findIndex((cart) => cart.id === item.id);\n\n      if (itemExistIndex !== -1) {\n        // Item already exists in the cart, update its quantity\n        const updatedCarts = [...carts];\n        updatedCarts[itemExistIndex] = {\n          ...updatedCarts[itemExistIndex],\n          quantity: updatedCarts[itemExistIndex].quantity + 1 // Increment quantity\n        };\n\n        await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n        setCarts(updatedCarts);\n\n        calculateTotalSum(updatedCarts); // Calculate total sum\n        calculateGrandTotal(updatedCarts); // Calculate grand total\n        // calculateTax(updatedCarts);\n\n\n      // Refetch payment intent (TEST)\n      // const paymentData = {\n      //   amount: stripeConverter(props.amount), // Example value, replace with your actual data\n      //   currency: \"USD\", // Example value, replace with your actual data\n      //   shipping_fee: stripeConverter(props.shippingAmount), // Example value, replace with your actual data\n      //   // (FIX) - USE STORE.STRIPE\n      //   stripe_id: \"acct_1NVCh3JEHBX7gOQA\", // Example value, replace with your actual data\n      //   app_name: CONSTANTS.appName // Example value, replace with your actual data\n      // };\n      \n      // const response = await createPaymentIntent(paymentData);\n      // console.log(response)\n \n\n\n\n\n  // };\n\n\n\n\n\n\n\n\n\n      } else {\n        // Item does not exist in the cart, add it as a new item\n        const newCartItem = { ...item, quantity: 1, price: item.price }; // Set quantity and price\n        const newCartItems = [...carts, newCartItem];\n        await AsyncStorage.setItem(\"carts\", JSON.stringify(newCartItems));\n        setCarts(newCartItems);\n\n        calculateTotalSum(newCartItems); // Calculate total sum\n        calculateGrandTotal(newCartItems); // Calculate grand total\n        calculateShipping(newCartItems); // Calculate shipping\n        // calculateTax(newCartItems);\n      }\n\n      // Update Quantity\n      setQuantity(quantity + 1);\n\n      // if (quantity <=0) {\n      //   setQuantity(0)\n      //   }\n\n    } catch (error) {\n      console.error(\"Error adding item to cart:\", error);\n    }\n  };\n\n\n    // // Function to add an item to the cart\n    // const decreaseFromCart = async (item: CartItem) => {\n    //   try {\n    //     const itemExistIndex = carts.findIndex((cart) => cart.id === item.id);\n  \n    //     if (itemExistIndex !== -1) {\n    //       // Item already exists in the cart, update its quantity\n    //       const updatedCarts = [...carts];\n    //       updatedCarts[itemExistIndex] = {\n    //         ...updatedCarts[itemExistIndex],\n    //         quantity: updatedCarts[itemExistIndex].quantity - 1 // Increment quantity\n    //       };\n  \n    //       await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n    //       setCarts(updatedCarts);\n  \n    //       calculateTotalSum(updatedCarts); // Calculate total sum\n    //       calculateGrandTotal(updatedCarts); // Calculate grand total\n    //       // calculateTax(updatedCarts);\n    //     }\n    //     // Update Quantity\n    //    //setQuantity(quantity - 1);\n    //   } catch (error) {\n    //     console.error(\"Error adding item to cart:\", error);\n    //   }\n    // };\n   // Function to add an item to the cart\n  //  const decreaseFromCart = async (item: CartItem) => {\n  //   try {\n  //     const itemExistIndex = carts.findIndex((cart) => cart.id === item.id);\n  \n  //     if (itemExistIndex !== -1) {\n  //       // Item already exists in the cart, update its quantity\n  //       const updatedCarts = [...carts];\n  //       if (updatedCarts[itemExistIndex].quantity > 1) {\n  //         // Decrement quantity only if it's greater than 1\n  //         updatedCarts[itemExistIndex] = {\n  //           ...updatedCarts[itemExistIndex],\n  //           quantity: updatedCarts[itemExistIndex].quantity - 1\n  //         };\n  //       }\n  \n  //       await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n  //       setCarts(updatedCarts);\n  \n  //       calculateTotalSum(updatedCarts); // Calculate total sum\n  //       calculateGrandTotal(updatedCarts); // Calculate grand total\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error decreasing item from cart:\", error);\n  //   }\n  // };\n  \n  const decreaseFromCart = async (item: CartItem) => {\n    try {\n\n     \n      const itemExistIndex = carts.findIndex((cart) => cart.id === item.id);\n  \n      if (itemExistIndex !== -1) {\n        // Item already exists in the cart, update its quantity\n        const updatedCarts = [...carts];\n        // if (updatedCarts[itemExistIndex].quantity > 1) {\n        //   // Decrement quantity only if it's greater than 1\n          updatedCarts[itemExistIndex] = {\n            ...updatedCarts[itemExistIndex],\n            quantity: updatedCarts[itemExistIndex].quantity - 1\n          };\n        // }\n        setQuantity(quantity - 1)\n  \n        await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n        setCarts(updatedCarts);\n  \n        calculateTotalSum(updatedCarts); // Calculate total sum\n        calculateGrandTotal(updatedCarts); // Calculate grand total\n      }\n      // if (quantity <=0) {\n      // setQuantity(0)\n      // }\n\n    } catch (error) {\n      console.error(\"Error decreasing item from cart:\", error);\n    }\n  };\n  \n// Function to delete an item from the cart\nconst deleteItemFromCart = async (item: CartItem) => {\n  try {\n    // Filter out the item from the carts array\n    const updatedCarts = carts.filter((cart) => cart.id !== item.id);\n\n    // Update AsyncStorage and state with the updated carts array\n    await AsyncStorage.setItem(\"carts\", JSON.stringify(updatedCarts));\n    setCarts(updatedCarts);\n\n    // Recalculate total sum\n    calculateTotalSum(updatedCarts);\n    calculateGrandTotal(updatedCarts);\n    calculateShipping(updatedCarts);\n    // calculateTax(updatedCarts);\n\n    await AsyncStorage.removeItem(\"carts\");\n\n    setQuantity(quantity - item.quantity);\n    if (quantity <=0) {\n      setQuantity(0)\n      }\n    console.log(\"Item removed\");\n\n\n  } catch (error) {\n    console.error(\"Error deleting item from cart:\", error);\n  }\n};\n  // Function to clear all data from the cart\n  const clearData = async () => {\n    try {\n      setQuantity(0);\n      await AsyncStorage.removeItem(\"carts\");\n      setCarts([]);\n      setTotalSum(0);\n      // setTotalTax(0);\n      setTotalShipping(10);\n      // setGrandTotal(0);\n      setQuantity(0)\n    } catch (error) {\n      console.error(\"Error clearing data:\", error);\n    }\n  };\n\n  // Function to calculate the total sum of cart items\n  const calculateTotalSum = (carts: CartItem[]) => {\n    const total = carts.reduce((sum, item) => sum + item.price * item.quantity , 0);\n    setTotalSum(total);\n  };\n\n  // Function to calculate the total sum of cart items\n  const calculateGrandTotal = (carts: CartItem[]) => {\n    const grandTotal = carts.reduce((sum, item) => sum + totalSum + totalTax + totalShipping , 0);\n    // setGrandTotal(grandTotal);\n  };\n\n  // Function to calculate the total sum of cart items\n  // const calculateTax = (carts: CartItem[]) => {\n  //   const totalTax = carts.reduce((sum, item) => sum + item.price, 0);\n  //   setTotalSum(totalTax);\n  // };\n\n  // const calculateTax = (carts: CartItem[]) => {\n  //   // const totalTax = carts.reduce((sum, item) => sum + item.price, 0);\n  //   const totalTax = (totalSum  + totalShipping ) / ( 8.875 * 100 )\n  //   setTotalTax(totalTax);\n  // };\n\n  // Function to calculate the total sum of cart items\n  const calculateShipping = (carts: CartItem[]) => {\n    // const totalShipping = carts.reduce((sum, item) => sum + item.price , 0);\n    // setTotalSum(totalShipping);\n  };\n\n\n  // Create the value object to be passed to the context provider\n  const value: CartContextType = {\n    carts,\n    addToCart,\n    decreaseFromCart,\n    quantity,\n    totalSum,\n    totalTax,\n    totalShipping,\n    grandTotal,\n    deleteItemFromCart,\n    clearData\n  };\n\n  // Render the context provider with children\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\n","import { Dimensions } from \"react-native\";\nconst { height , width } = Dimensions.get('window')\n\nconst tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\n\nconst COLORS = {\n  light: {\n    text: '#000000',\n    background: '#FFFFFF',\n    tint: '#0504aa', // Royal blue\n    tabIconDefault: '#CCCCCC',\n    tabIconSelected: '#0504aa',\n    cardBackground: '#FFFFFF',\n    cardText: '#000000',\n    cardSecondaryText: '#83829A',  // Gray\n    cardPrice: '#000000',\n    cardBorder: '#E0E0E0',\n  },\n  dark: {\n    text: '#FFFFFF',\n    background: '#000000',\n    tint: '#FFFFFF',\n    tabIconDefault: '#CCCCCC',\n    tabIconSelected: '#FFFFFF',\n    cardBackground: '#1C1C1E',  // Darker shade for cards in dark mode\n    cardText: '#FFFFFF',\n    cardSecondaryText: '#B0B0B0',  // Lighter gray\n    cardPrice: '#FFFFFF',\n    cardBorder: '#444444',  // Darker border for dark mode\n  },\n  primary: \"#3f5a36\",\n  secondary: \"#DDF0FF\",\n  tertiary: \"#FF7754\",\n  darkGray: '#333333',\n  green: '#8BC34A',\n  forestGreen: '#3f5a36',\n  lightGray: \"#F5F5F5\",\n  gray: \"#83829A\",\n  gray2: \"#C1C0C8\",\n  gray3: \"#d3d3d3\",\n  offwhite: \"#F3F4F8\",\n  white: \"#FFFFFF\",\n  black: \"#000000\",\n  blue: \"#0504aa\",  // Royal blue\n  red: \"#E81E4D\",\n  orange: \"#FF5733\",\n  lightWhite: \"#FAFAFC\",\n  backgroundLight: \"#F0F0F3\",\n  backgroundMedium: \"#B9B9B9\",\n  backgroundDark: \"#77777\",\n};\n\n\n\n\nconst SIZES = {\n    xSmall: 10,\n    small: 12,\n    medium: 16,\n    large: 20,\n    xLarge: 24,\n    xxLarge: 44,\n    height,\n    width\n}\n\nconst SHADOWS = {\n    small: {\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 2\n    },\n    medium: {\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 5.84,\n        elevation: 5\n    }\n}\n\nexport { COLORS, SIZES, SHADOWS }","const CURRENCY_FORMATTER = new Intl.NumberFormat(undefined, {\n    currency: 'USD',\n    style: 'currency'\n});\n\nexport function convertToCurrency(number: number) {\n    return CURRENCY_FORMATTER.format(number);\n}\n\nexport default convertToCurrency;","export const VERSION = 0.01;\n\nexport const STORE_TYPE = {\n  ecom: 'ecom',\n  blog: 'blog',\n  subscription: 'subscription',\n  appointment: 'appointment',\n};\n\n// AWS \n\nexport const API_ID = \"yiiuqhh3a3\"\nexport const BASE_URL =  `https://${API_ID}.execute-api.us-east-1.amazonaws.com/prod`\n\n\nexport const AWS_BASE_IMAGE = `https://${process.env.VITE_S3_ASSET_BUCKET_NAME}.s3.amazonaws.com`;\nexport const AWS_HOLDER_IMAGE = `https://appsformankind-assets.s3.amazonaws.com/Products/appoint/Flowers.png`\nexport const AWS_BASE_URL = `https://yiiuqhh3a3.execute-api.us-east-1.amazonaws.com/prod`;\n\nexport const AWS_BASE_URL_2 = `https://${process.env.VITE_API_ID_2}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod`;\n\n\nexport const AWS_VERIFY = `https://${process.env.VITE_API_ID}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod/verify`;\n\nexport const AWS_LOGIN_URL = `https://${process.env.VITE_API_ID}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod/login`;\n\n\nexport const AWS_ORDERS_URL = `https://${process.env.VITE_API_ID}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod/login`;\n\nexport const AWS_SUBSCRIBER_URL = `https://${process.env.VITE_API_ID}.execute-api.${\n  process.env.VITE_REGION\n}.amazonaws.com/prod/subscriber`;\n\n","\n\n\n\nexport const CONSTANTS = {\n    appName: \"\",\n    holderImageWelcome: 'https://appsformankind-assets.s3.amazonaws.com/Collections/Furniture/Furniture_1.jpg', \n    holderImageProductCard: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/boil-sea-moss.jpg', \n    holderImageCollectionCard: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/gel.jpg', \n    holderImageOrderCard: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/Irish_Sea_Moss.jpeg', \n    holderUserImage: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/moss.jpg', \n    \n    holderCarouselImageOne: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/rock.jpg', \n    holderCarouselImageTwo: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/seaweed.jpg', \n    holderCarouselImageThree:'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/waterfall.jpg', \n    holderImage: 'https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/seamoss.jpg', \n    \n    mankind_store_id: \"DF6598F7\",\n    store_id: \"DF6598F7\", // \"P5V8A9ZE\",  \n    merchant_id: `merchant.com.dhuntleyinc.DevelopingAppsForMankind`,\n    publishableKeyLive: \"pk_live_51NVCh3JEHBX7gOQA7dW8kmXYPiToufrHpDzRZQ1vhxtUoNXrYXPWtMpELdWetWJhm6Wohk8PXc2ZF1UGfaBOFJl100GZWU6atY\",\n    publishableKeyTest: \"pk_test_51NVCh3JEHBX7gOQAjIjvMGNaHPmbWJov3iFEoLLOUS8oKf9wXowSES3piwS8AB57ml3ejDE1ZNf2tGyzMj7D0GlE007Ms2N4me\"\n         \n}\n\n","\n// Axios alternitive\n\nexport function createFetchClient(\n  baseURL: string,\n  defaultParams: Record<string, string | number>,\n  defaultHeaders: Record<string, string>\n) {\n  const fetchClient = async <T = any>(\n    endpoint: string,\n    options: RequestInit & { params?: Record<string, string | number> } = {}\n  ): Promise<T> => {\n    const url = new URL(endpoint, baseURL);\n\n    // Add default parameters to the URL\n    const params = new URLSearchParams(defaultParams as any);\n    if (options.params) {\n      Object.entries(options.params).forEach(([key, value]) => {\n        params.append(key, value.toString());\n      });\n    }\n    url.search = params.toString();\n\n    // Merge default headers with any provided headers\n    const headers = new Headers({\n      ...defaultHeaders,\n      ...options.headers,\n    });\n\n    // Perform the fetch request\n    const response = await fetch(url.toString(), {\n      ...options,\n      headers,\n    });\n\n    // Check for HTTP errors\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(`HTTP error! Status: ${response.status}, ${JSON.stringify(errorData)}`);\n    }\n\n    return response.json();\n  };\n\n  return {\n    get: <T = any>(endpoint: string, options: Omit<RequestInit, 'method'> & { params?: Record<string, string | number> } = {}) =>\n      fetchClient<T>(endpoint, { ...options, method: 'GET' }),\n\n    post: <T = any>(endpoint: string, body: any, options: Omit<RequestInit, 'method' | 'body'> & { params?: Record<string, string | number> } = {}) =>\n      fetchClient<T>(endpoint, { ...options, method: 'POST', body: JSON.stringify(body) }),\n\n    put: <T = any>(endpoint: string, body: any, options: Omit<RequestInit, 'method' | 'body'> & { params?: Record<string, string | number> } = {}) =>\n      fetchClient<T>(endpoint, { ...options, method: 'PUT', body: JSON.stringify(body) }),\n\n    delete: <T = any>(endpoint: string, options: Omit<RequestInit, 'method'> & { params?: Record<string, string | number> } = {}) =>\n      fetchClient<T>(endpoint, { ...options, method: 'DELETE' }),\n  };\n}\n\n  \n  export default createFetchClient;\n  ","import React, { createContext, useContext, useEffect, useState, useCallback } from \"react\";\nimport * as SecureStore from 'expo-secure-store';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport uuid from 'react-native-uuid';\nimport { BASE_URL } from \"../utils/api\";\nimport { CONSTANTS } from \"../utils/constants\";\nimport { UserProps } from \"../models/UserProps\";\nimport createFetchClient from \"@/utils/createFetchClient\";\n\ninterface AuthState {\n  user: UserProps | null;\n  token: string | null;\n  authenticated: boolean;\n}\n\ninterface AuthContextType {\n  authState: AuthState;\n  onRegister: (user: UserProps) => Promise<any>;\n  onLogin: (email: string, password: string) => Promise<any>;\n  onLogout: () => Promise<void>;\n  updateUserProfile: (updatedUser: Partial<UserProps>) => Promise<void>;\n  addToFavorites: (itemId: string) => Promise<void>;\n  removeFromFavorites: (itemId: string) => Promise<void>;\n  isFavorite: (itemId: string) => boolean;\n}\n\nexport const TOKEN_KEY = 'your_token_key_here';\nconst USER_KEY = 'your_user_key_here';\nconst AUTHENTICATED_KEY = 'authenticated_key_here';\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\n// Create the fetch client instance\nconst authApi = createFetchClient(\n  BASE_URL,\n  {\n    tableName: 'prof-website-user-table',\n    showFilteredItems: 'true',\n  },\n  {\n    'Content-Type': 'application/json',\n  }\n);\n\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [authState, setAuthState] = useState<AuthState>({\n    user: null,\n    token: null,\n    authenticated: false,\n  });\n\n  useEffect(() => {\n    const loadUserData = async () => {\n      try {\n        const token = await SecureStore.getItemAsync(TOKEN_KEY);\n        const userString = await SecureStore.getItemAsync(USER_KEY);\n        const authenticated = await SecureStore.getItemAsync(AUTHENTICATED_KEY);\n\n        if (token && userString && authenticated === 'true') {\n          const user = JSON.parse(userString);\n          console.log(\"Token and user data loaded:\", { token, user });\n\n          setAuthState({\n            user,\n            token,\n            authenticated: true,\n          });\n        } else {\n          setAuthState({\n            user: null,\n            token: null,\n            authenticated: false,\n          });\n        }\n      } catch (error) {\n        console.error(\"Error loading user data:\", error);\n        setAuthState({\n          user: null,\n          token: null,\n          authenticated: false,\n        });\n      }\n    };\n\n    loadUserData();\n  }, []);\n\n  const onRegister = useCallback(async (userData: UserProps): Promise<any> => {\n    userData.id = uuid.v4().toString();\n\n    try {\n      const result = await authApi.post(\n        '/register',\n        userData,\n        {\n          params: { store_id: CONSTANTS.store_id },\n        }\n      );\n      return result;\n    } catch (error: any) {\n      console.error(\"Registration error:\", error.data);\n      throw new Error(error.response?.data?.msg || \"Registration failed. Please try again.\");\n    }\n  }, []);\n\n  const onLogin = useCallback(async (email: string, password: string): Promise<any> => {\n    try {\n      const result = await authApi.post(\n        '/login',\n        { email, password },\n        {\n          params: { store_id: CONSTANTS.store_id },\n        }\n      );\n\n      const { user, token } = result;\n      await SecureStore.setItemAsync(TOKEN_KEY, token);\n      await SecureStore.setItemAsync(USER_KEY, JSON.stringify(user));\n      await SecureStore.setItemAsync(AUTHENTICATED_KEY, 'true');\n\n      setAuthState({\n        user,\n        token,\n        authenticated: true,\n      });\n\n      return result;\n    } catch (error: any) {\n      console.error(\"Login error:\", error);\n      throw new Error(error.response?.data?.msg || \"Login failed. Please try again.\");\n    }\n  }, []);\n\n  const onLogout = useCallback(async (): Promise<void> => {\n    try {\n      await SecureStore.deleteItemAsync(TOKEN_KEY);\n      await SecureStore.deleteItemAsync(USER_KEY);\n      await SecureStore.deleteItemAsync(AUTHENTICATED_KEY);\n\n      setAuthState({\n        user: null,\n        token: null,\n        authenticated: false,\n      });\n\n      await AsyncStorage.removeItem(\"carts\");\n      console.log(\"User logged out successfully.\");\n    } catch (error) {\n      console.error(\"Error logging out:\", error);\n      throw new Error(\"Logout failed. Please try again.\");\n    }\n  }, []);\n\n  const updateUserProfile = useCallback(async (updatedUser: Partial<UserProps>) => {\n    try {\n      if (!authState.user) throw new Error(\"No user to update\");\n\n      const result = await authApi.put(`/users/${authState.user.id}`, updatedUser);\n\n      const updatedUserData = { ...(authState.user as UserProps), ...updatedUser };\n      await SecureStore.setItemAsync(USER_KEY, JSON.stringify(updatedUserData));\n\n      setAuthState({\n        ...authState,\n        user: updatedUserData,\n      });\n\n      console.log(\"User profile updated successfully:\", updatedUserData);\n    } catch (error: any) {\n      console.error(\"Failed to update user profile:\", error);\n      throw new Error(error.response?.data?.msg || \"Failed to update user profile.\");\n    }\n  }, [authState.user, authState.token]);\n\n  const addToFavorites = useCallback(async (itemId: string) => {\n    try {\n      if (!authState.user) throw new Error(\"No user to update\");\n\n      const updatedFavorites = [...(authState.user.favoriteItems || []), itemId];\n      await updateUserProfile({ favoriteItems: updatedFavorites });\n    } catch (error) {\n      console.error(\"Failed to add to favorites:\", error);\n      throw new Error(\"Failed to add to favorites.\");\n    }\n  }, [authState.user, updateUserProfile]);\n\n  const removeFromFavorites = useCallback(async (itemId: string) => {\n    try {\n      if (!authState.user) throw new Error(\"No user to update\");\n\n      const updatedFavorites = (authState.user.favoriteItems || []).filter(fav => fav !== itemId);\n      await updateUserProfile({ favoriteItems: updatedFavorites });\n    } catch (error) {\n      console.error(\"Failed to remove from favorites:\", error);\n      throw new Error(\"Failed to remove from favorites.\");\n    }\n  }, [authState.user, updateUserProfile]);\n\n  const isFavorite = useCallback((itemId: string): boolean => {\n    return authState.user?.favoriteItems?.includes(itemId) || false;\n  }, [authState.user]);\n\n  return (\n    <AuthContext.Provider\n      value={{ \n        authState, \n        onRegister, \n        onLogin, \n        onLogout, \n        updateUserProfile, \n        addToFavorites, \n        removeFromFavorites, \n        isFavorite \n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n","import { ProductModelProps } from '../models/ProductModelProps';\nimport { TOKEN_KEY } from '../contexts/AuthContext';\nimport { createFetchClient } from '../utils/createFetchClient';\nimport { BASE_URL } from '@/utils/api';\n\n// Setup the  instance for product API\nconst productsApi = createFetchClient(\n  BASE_URL,\n  {\n    tableName: 'prof-website-product-table',\n    showFilteredItems: 'true',\n  },\n  {\n    'Content-Type': 'application/json',\n  }\n);\n\n\n// GET ALL \nexport async function getProductsApi(storeID: string, email: string) {\n  try {\n    const response = await productsApi.get('/products', {\n      params: {\n        store_id: storeID,\n        email: email,\n      },\n      headers: {\n        Authorization: TOKEN_KEY,\n        'Content-Type': 'application/json',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error;\n  }\n}\n\n\n// GET SINGLE ITEM\nexport async function getProductApi(id: any) {\n  try {\n    const response = await productsApi.get(`/product`, {\n      params: { id },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n}\n\n\n// POST - Create / easy update\nexport const postProductApi = async (product: ProductModelProps, storeID: string, email: string, token: string) => {\n  return await productsApi.post(`/product`, product, {\n    params: { \n      store_id: storeID,\n      email: email,\n    },\n    headers: { \n      Authorization: token,\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\n\n// UPDATE\nexport const updateProductApi = async (product: ProductModelProps) => {\n  return await productsApi.put(`/product?id=${product.id}`, product);\n};\n\n// DELETE\nexport const deleteProductApi = async (id: any) => {\n  return await productsApi.delete(`/product`, {\n    params: { id },\n  });\n};\n\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\nimport { ProductModelProps } from \"../models/ProductModelProps\";\n// import { getProducts, postProduct, deleteProduct } from \"../api/productsApi\";\nimport { useAuth } from \"./AuthContext\";\nimport { Alert } from \"react-native\";\nimport { router } from \"expo-router\";\n// import MyAlert from \"../components/interfaces/MyAlert\";\nimport { CONSTANTS } from \"../utils/constants\";\nimport { deleteProductApi, getProductsApi, postProductApi } from \"@/api/productsApi\";\n\ninterface ProductContextProps {\n  products: ProductModelProps[];\n  addClientProduct: (product: ProductModelProps) => Promise<void>;\n  removeClientProduct: (productId: string) => Promise<void>;\n  updateClientProduct: (product: ProductModelProps) => Promise<void>;\n  getClientProducts: () => void;\n  selectedProduct: ProductModelProps | null;\n  selectProduct: (product: ProductModelProps) => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const ClientProductContext = createContext<ProductContextProps | undefined>(undefined);\n\nexport const useClientProduct = () => {\n  const context = useContext(ClientProductContext);\n  if (!context) {\n    throw new Error(\"useClientProduct must be used within an ClientProductProvider\");\n  }\n  return context;\n}\n\nexport const ClientProductProvider = ({ children }: { children: ReactNode }) => {\n  const { authState } = useAuth();\n  const [products, setProducts] = useState<ProductModelProps[]>([]);\n  const [selectedProduct, setSelectedProduct] = useState<ProductModelProps | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // if (authState?.token) {\n    console.log(\"Getting store products...\")\n      getClientProducts(); // Initial load of products\n    // }\n  }, []);\n\n  const addClientProduct = async (product: ProductModelProps) => {\n    if (!authState?.user) return;\n\n    const storeID = authState.user.store_owner_id || '';\n    const email = authState.user.email || '';\n    const token = authState?.token || \"\"\n\n    setIsLoading(true);\n    try {\n      await postProductApi(product, storeID, email, token );\n      setProducts((prevProducts) => [...prevProducts, product]);\n      console.log(\"product added\", product );\n\n      // change fix\n      router.push('/')\n\n    } catch (error: any) {\n      console.error(\"Failed to add product:\", error.response?.data );\n      \n\n      // <MyAlert\n      // title=\"Product not Created\"\n      // message=\"You are missing information. Please update your store.\"\n      // onCancelPress={() => console.log(\"Cancel Pressed\")}\n      // onUpdatePress={() => router.push('/store')}\n      // />   \n      setError(error.response?.data || \"Failed to add product. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const removeClientProduct = async (productId: string) => {\n    setIsLoading(true);\n    try {\n      await deleteProductApi({ id: productId });\n      setProducts((prevProducts) => prevProducts.filter(product => product.id !== productId));\n    } catch (error: any) {\n      console.error(\"Failed to remove product:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to remove product. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateClientProduct = async (product: ProductModelProps) => {\n    setIsLoading(true);\n    try {\n      await updateClientProduct(product);\n      setProducts((prevProducts) => prevProducts.map(o => o.id === product.id ? product : o));\n    } catch (error: any) {\n      console.error(\"Failed to update product:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to update product. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getClientProducts = async () => {\n    // if (!authState?.user) return;\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const email = '';\n      const store_owner_id = CONSTANTS.store_id // authState.user.store_owner_id || '';\n\n      const response = await getProductsApi(store_owner_id, email);\n      const fetchedProducts = response.data;\n      setProducts(fetchedProducts);\n      console.log(\"Products Fetched !!\")\n    } catch (error: any) {\n      console.error(\"Failed to fetch products:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to fetch products. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectProduct = (product: ProductModelProps) => {\n    setSelectedProduct(product);\n  };\n\n  return (\n    <ClientProductContext.Provider \n      value={{ \n        products, \n        addClientProduct, \n        removeClientProduct, \n        updateClientProduct, \n        getClientProducts, \n        selectedProduct, \n        selectProduct, \n        isLoading, \n        error \n      }}\n    >\n      {children}\n    </ClientProductContext.Provider>\n  );\n};\n\n","import React, { FC, useContext } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image, Dimensions } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { CartContext } from '@/contexts/CartContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { CONSTANTS } from '@/utils/constants';\nimport { Link } from 'expo-router';\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\n// import { useClientProduct } from '@/contexts/ClientProductContext';\n\nconst { width } = Dimensions.get('window');\n\nexport const ProductCardView: FC<{ product: ProductModelProps }> = ({ product }) => {\n  const navigation = useNavigation();\n  const { addToCart } = useContext(CartContext);\n  const { selectProduct } = useClientProduct();\n\n  const handleProductPress = () => {\n    selectProduct(product);\n  };\n\n  return (\n    <View>\n     <Link \n      href={`/products/${product.id}` as never}  \n      asChild\n     >\n        <TouchableOpacity onPress={handleProductPress}>\n          <View style={styles.container}>\n            {/* Image */}\n            <View style={styles.imageContainer}>\n              <Image \n                style={styles.image} \n                source={{ uri: product.images[0]}} \n              />\n            </View>\n\n            {/* Details */}\n            <View style={styles.details}>\n              <Text style={styles.title} numberOfLines={2}>{product.name}</Text>\n              <Text style={styles.supplier} numberOfLines={1}>{product.color_code}</Text>\n              <Text style={styles.price}>{convertToCurrency(product.price)}</Text>\n              {product.item_type === \"subscription\" && (\n                <Text style={{ fontSize: 10 }}>/per month</Text>\n              )}\n            </View>\n\n            {/* Button */}\n            <TouchableOpacity style={styles.addBtn} onPress={() => addToCart(product)}>\n              <Ionicons \n                name={product.item_type === \"subscription\" ? \"arrow-forward-circle-outline\" : 'add-circle'} \n                size={35} \n                color={COLORS.primary} \n              />\n            </TouchableOpacity>\n          </View>\n        </TouchableOpacity>\n      </Link>\n    </View>\n  );\n};\n\nexport default ProductCardView;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 162,\n    height: 240,\n    marginEnd: 22,\n    borderRadius: SIZES.medium,\n    backgroundColor: COLORS.secondary,\n    borderWidth: 2,\n    borderColor: 'black',\n  },\n  imageContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: SIZES.medium,\n    overflow: \"hidden\",\n    marginTop: SIZES.small / 2,\n  },\n  image: {\n    width: 142,\n    height: 142,\n    borderRadius: SIZES.small,\n    resizeMode: 'cover',\n    shadowOpacity: 400,\n    shadowColor: 'black',\n  },\n  details: {\n    padding: SIZES.small,\n  },\n  title: {\n    fontFamily: \"bold\",\n    fontSize: SIZES.small,\n    marginBottom: 2,\n    height: 35,\n  },\n  supplier: {\n    fontFamily: \"regular\",\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  price: {\n    fontFamily: \"bold\",\n    fontSize: SIZES.medium,\n  },\n  addBtn: {\n    position: \"absolute\",\n    bottom: SIZES.xSmall,\n    right: SIZES.xSmall,\n  }\n});\n","import { StyleSheet, Text, View , Image, TouchableOpacity} from 'react-native'\nimport React, { FC } from 'react'\n// import { OrderModelProps } from '../../models/OrderModelProps';\nimport { useNavigation } from '@react-navigation/native';\nimport { COLORS, SHADOWS, SIZES } from '@/utils/theme';\nimport convertToCurrency from '@/hooks/convertToCurrency';;\nimport { CONSTANTS } from '@/utils/constants';\nimport { OrderModelProps } from '@/models/OrderModelProps';\n// import { OrderModelProps } from '@/app/models/OrderModelProps';\n\nconst OrderCrudCard: FC<OrderModelProps> = (item) => {\n    const navigation = useNavigation();\n    \n    return (\n    <View>\n        \n        {/* @ts-ignore */}\n        <TouchableOpacity style={styles.container} onPress={() => navigation.navigate(\"EditOrder\" , { item })}>\n\n            <View style={styles.image}>\n                <Image source={{uri: CONSTANTS.holderImageOrderCard }} style={styles.orderImg} />\n            </View>\n            <View style={styles.textContainer}>\n                <Text style={styles.orderTitle}>{item.title}</Text>\n                <Text style={styles.supplier}>{convertToCurrency(item.total)}</Text>\n            </View>\n        </TouchableOpacity>\n    </View>\n  )\n}\n\nexport default OrderCrudCard\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: SIZES.small,\n        flexDirection: \"row\",\n        padding: SIZES.medium,\n        borderRadius: SIZES.small,\n        backgroundColor: \"#fff\",\n        ...SHADOWS.medium,\n        shadowColor: COLORS.lightWhite,\n        // height: 120\n    },\n    image: {\n        width: 70,\n        backgroundColor: COLORS.secondary,\n        borderRadius: SIZES.medium,\n        justifyContent: \"center\",\n        alignContent: \"center\"\n    },\n    orderImg: {\n        width: '100%',\n        height: 65,\n        borderRadius: SIZES.small,\n        resizeMode: \"cover\"\n    },\n    textContainer: {\n        flex: 1,\n        marginHorizontal: SIZES.medium\n    },\n    orderTitle: {\n        fontSize: SIZES.medium,\n        fontFamily: \"bold\",\n        color: COLORS.primary\n\n    },\n    supplier: {\n        fontSize: SIZES.small + 2,\n        fontFamily: \"bold\",\n        color: COLORS.gray,\n        marginTop: 3\n\n    }\n})","import { StyleSheet, Text, View , Image, TouchableOpacity} from 'react-native'\nimport React, { FC } from 'react'\n// import { ProductModelProps } from '../../models/ProductModelProps';\nimport { useNavigation } from '@react-navigation/native';\n// import { ProductModelProps } from '../../../models/ProductModelProps';\n// import convertToCurrency from '../../../hook/convertToCurrency';\nimport { COLORS, SHADOWS, SIZES } from '@/utils/theme';\nimport { CONSTANTS } from '@/utils/constants';\nimport { Link } from 'expo-router';\n// import { ProductModelProps } from '@/app/models/ProductModelProps';\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { ProductModelProps } from '@/models/ProductModelProps';\n// import { COLORS, SHADOWS, SIZES } from '@/utils/theme';\n// import convertToCurrency from '@/hooks/convertToCurrency';;\n\nexport const ProductCrudCard: FC<ProductModelProps> = (item) => {\n    const navigation = useNavigation();\n    \n    return (\n    <View>\n        \n        {/* @ts-ignore */}\n        <Link href={\"productEdit/\"}>\n        <TouchableOpacity style={styles.container} onPress={() => {}}>\n\n            <View style={styles.image}>\n                <Image source={{uri: item.image ? item.image : CONSTANTS.holderImageProductCard}} style={styles.productImg} />\n            </View>\n            <View style={styles.textContainer}>\n                <Text style={styles.productTitle}>{item.name}</Text>\n                <Text style={styles.supplier}>{convertToCurrency(item.price)}</Text>\n            </View>\n        </TouchableOpacity>\n        </Link>\n    </View>\n  )\n}\n\nexport default ProductCrudCard\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: SIZES.small,\n        flexDirection: \"row\",\n        padding: SIZES.medium,\n        borderRadius: SIZES.small,\n        backgroundColor: \"#fff\",\n        ...SHADOWS.medium,\n        shadowColor: COLORS.lightWhite,\n        // height: 120\n    },\n    image: {\n        width: 70,\n        backgroundColor: COLORS.secondary,\n        borderRadius: SIZES.medium,\n        justifyContent: \"center\",\n        alignContent: \"center\"\n    },\n    productImg: {\n        width: '100%',\n        height: 65,\n        borderRadius: SIZES.small,\n        resizeMode: \"cover\"\n    },\n    textContainer: {\n        flex: 1,\n        marginHorizontal: SIZES.medium\n    },\n    productTitle: {\n        fontSize: SIZES.medium,\n        fontFamily: \"bold\",\n        color: COLORS.primary\n\n    },\n    supplier: {\n        fontSize: SIZES.small + 2,\n        fontFamily: \"bold\",\n        color: COLORS.gray,\n        marginTop: 3\n\n    }\n})","import React, { FC, useContext } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\n// import { COLORS, SIZES } from '@/utils/theme';\nimport { Ionicons } from '@expo/vector-icons';\n// import { useNavigation } from '@react-navigation/native';\n// import { ProductModelProps } from '../../../models/ProductModelProps';\nimport { CartContext } from '@/contexts/CartContext';\n// import convertToCurrency from '../../../hook/convertToCurrency';\nimport { COLORS, SIZES } from '@/utils/theme';\n// import { Constants } from '@stripe/stripe-react-native';\nimport { CONSTANTS } from '@/utils/constants';\nimport { Link } from 'expo-router';\n// import { ProductModelProps } from '@/app/models/ProductModelProps';\n// import convertToCurrency from '@/hooks/convertToCurrency';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\n// import { ProductModelProps } from '../../models/ProductModelProps';\n// import convertToCurrency from '@/hooks/convertToCurrency';;\n// import { CartContext } from '../../contexts/CartContext';\n\n export const ProductCardV2: FC<ProductModelProps> = (item) => {\n  // const navigation = useNavigation();\n  const { addToCart} = useContext(CartContext)\n  const { products, selectedProduct, selectProduct, isLoading, error } = useClientProduct();\n\n  const handleProductSelect = (product: ProductModelProps) => {\n    selectProduct(product);\n  };\n\n\n  return ( \n    <View>\n      {/* @ts-ignore */}\n      <Link href={`/products/${selectedProduct?.id}`} asChild>\n      <TouchableOpacity onPress={() => handleProductSelect(item)}>\n    {/* <TouchableOpacity onPress={() => navigation.navigate(\"ProductDetails\", { item } as never)}> */}\n\n    {/* <TouchableOpacity onPressIn={() => navigation.navigate(\"ProductDetails\" as never)} >  */}\n\n      <View style={styles.container}>\n        {/* Image */}\n        <View style={styles.imageContainer}>\n          <Image style={styles.image} source={{ uri: item.image ? item.image : CONSTANTS.holderImageProductCard }} />\n        </View>\n\n        {/* Details */}\n        <View style={styles.details}>\n          <Text style={styles.title} numberOfLines={2}>{item.name}</Text>\n          <Text style={styles.supplier} numberOfLines={1}>{item.color_code}</Text>\n          <Text style={styles.price}>{convertToCurrency(item.price)}</Text>\n        </View>\n\n        {/* Button */}\n        <TouchableOpacity style={styles.addBtn} onPress={() => {addToCart(item)}}>\n          <Ionicons name='add-circle' size={35} color={COLORS.primary} />\n        </TouchableOpacity>\n      </View>\n    </TouchableOpacity>\n    </Link>\n   \n    </View>\n  );\n};\n\nexport default ProductCardV2;\n\n\n// export default ProductCardView; \n\nconst styles = StyleSheet.create({\n    container: {\n        width: 182,\n        height: 240,\n        marginEnd: 22,\n        borderRadius: SIZES.medium,\n        backgroundColor: COLORS.secondary,\n        // remove\n    },\n    imageContainer: {\n        flex: 1,\n        width: 170,\n        marginLeft: SIZES.small/2,\n        marginTop: SIZES.small/2,\n        borderRadius: SIZES.small,\n        overflow: \"hidden\"\n    },\n    image: {\n        aspectRatio: 1,\n        resizeMode: 'cover'\n    },\n    details: {\n        padding: SIZES.small,\n        \n \n    },\n    title: {\n        fontFamily: \"bold\",\n        fontSize: SIZES.small ,\n        marginBottom: 2,\n        height: 35\n\n    },\n    supplier: {\n        fontFamily: \"regular\",\n        fontSize: SIZES.small,\n        color: COLORS.gray\n\n    },\n    price: {\n        fontFamily: \"bold\",\n        fontSize: SIZES.medium,\n       \n    },\n    addBtn: {\n        position:\"absolute\",\n        bottom: SIZES.xSmall,\n        right: SIZES.xSmall,\n        \n\n\n    }\n\n})\n\n","import { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React from 'react'\n// import { COLORS } from '@/utils/theme'\nimport { Ionicons } from '@expo/vector-icons';\nimport { router } from 'expo-router';\nimport { COLORS } from '@/utils/theme';\n\n{/* Banner Section */}\n\nexport const BannerVOne = () => {\n  return (\n    <View style={styles.container}>\n        <View style={styles.bannerSection}>\n          <Text style={styles.bannerTitle}>Customize Your Experience</Text>\n          <Text style={styles.bannerSubtitle}>\n          Manage your preferences, update account settings, and explore options to tailor your experience to your needs, even things like dark mode.\n          </Text>\n          <TouchableOpacity style={{ flexDirection: 'row',}} onPress={() => router.push('/appearance' as never)}>\n          <Text style={styles.editPreferences}>Dark Mode</Text>\n          <Ionicons name=\"arrow-forward\" size={15} color=\"white\" style={styles.arrow} />\n          </TouchableOpacity>\n        </View>\n        </View>\n  )\n}\n\nexport default BannerVOne\n\nconst styles = StyleSheet.create({\n    container: {\n        // padding:16\n    },\n    bannerSection: {\n      backgroundColor: '#1C1C1E',\n      borderRadius: 15,\n      padding: 20,\n      marginBottom: 20,\n    },\n    bannerTitle: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      color: '#FFFFFF',\n      marginBottom: 10,\n    },\n  \n    bannerSubtitle: {\n      fontSize: 14,\n      color: COLORS.gray3,\n      marginBottom: 20,\n    },\n  \n    editPreferences: {\n      fontSize: 14,\n      color: COLORS.white,\n      fontWeight: 'bold',\n    },\n    \n    arrow : {\n      marginLeft: 10,\n      marginTop: 3,\n    },\n  });\n","import React, { useState } from 'react';\nimport { StyleSheet, Text, TextInput, View, TouchableOpacity } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface TextFieldVOneProps {\n  label: string;\n  value: string;\n  secureTextEntry?: boolean;\n  editable?: boolean;\n}\n\nconst TextFieldVOne: React.FC<TextFieldVOneProps> = ({\n  label,\n  value,\n  secureTextEntry = false,\n  editable = false,\n}) => {\n  const [isPasswordVisible, setIsPasswordVisible] = useState(!secureTextEntry);\n\n  const togglePasswordVisibility = () => {\n    setIsPasswordVisible((prev) => !prev);\n  };\n\n\nconst styles = StyleSheet.create({\n    content: {\n      // padding: 20,\n    },\n    label: {\n      fontSize: 16,\n      marginBottom: 10,\n    },\n    passwordContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    },\n    input: {\n      width: '80%', // Restricting the TextInput to 80% of the container's width\n      borderWidth: 1,\n      borderColor: '#ddd',\n      padding: 10,\n      marginBottom: 20,\n      borderRadius: 5,\n      backgroundColor: editable ? '#fff' : '#f5f5f5',\n    },\n    iconContainer: {\n      paddingLeft: 10, // Adding space between the TextInput and the icon\n    },\n  });\n  return (\n    <View style={styles.content}>\n      <Text style={styles.label}>{label}</Text>\n      <View style={styles.passwordContainer}>\n        <TextInput\n          value={isPasswordVisible ? value : '*********'}\n          secureTextEntry={!isPasswordVisible}\n          style={styles.input}\n          editable={editable}\n        />\n        {secureTextEntry && (\n          <TouchableOpacity onPress={togglePasswordVisibility} style={styles.iconContainer}>\n            <Ionicons\n              name={isPasswordVisible ? 'eye-outline' : 'eye-off-outline'}\n              size={20}\n              color=\"#A0A0A0\"\n            />\n          </TouchableOpacity>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default TextFieldVOne;\n\n","import { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React from 'react'\n\nconst DeleteSectionView = () => {\n  return (\n    <View style={styles.deleteContainer}>\n    <Text style={styles.deleteLabel}>Delete account</Text>\n    <Text style={styles.deleteDescription}>\n      Your account will be permanently removed from the application. All your data will be lost.\n    </Text>\n    <TouchableOpacity style={styles.deleteButton}>\n      <Text style={styles.deleteButtonText}>Delete account</Text>\n    </TouchableOpacity>\n  </View>\n  )\n}\n\nexport default DeleteSectionView\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n    },\n    header: {\n      fontSize: 24,\n      fontWeight: 'bold',\n      marginBottom: 20,\n      textAlign: 'center',\n    },\n    \n    deleteContainer: {\n      marginTop: 20,\n    },\n    deleteLabel: {\n      fontSize: 18,\n      color: 'red',\n      fontWeight: 'bold',\n      marginBottom: 10,\n    },\n    deleteDescription: {\n      fontSize: 14,\n      color: '#555',\n      marginBottom: 10,\n    },\n    deleteButton: {\n      backgroundColor: 'red',\n      padding: 10,\n      borderRadius: 5,\n    },\n    deleteButtonText: {\n      color: '#fff',\n      textAlign: 'center',\n      fontWeight: 'bold',\n    },\n  });\n  \n  ","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst Divider = () => {\n  return (\n    <View style={styles.divider}/>\n  )\n}\n\nexport default Divider\n\nconst styles = StyleSheet.create({\n\n    divider: {\n        height: 1,\n        backgroundColor:  '#EAEAEA',\n        marginTop: 10,\n        marginBottom: 10\n    }\n})","import { StyleSheet, Text, View , Image, TouchableOpacity, Pressable} from 'react-native'\nimport React, { FC } from 'react'\nimport { ProductModelProps } from '../../models/ProductModelProps';\nimport convertToCurrency from '../../hooks/convertToCurrency';;\nimport { CONSTANTS } from '../../utils/constants';\nimport { COLORS, SHADOWS, SIZES } from '../../utils/theme';\nimport { Link, router } from 'expo-router';\n// import { CONSTANTS } from '@/utils/constants'; \n// import { COLORS, SHADOWS, SIZES } from '@/utils/theme';\n// \n\nconst ProductListItem: FC<ProductModelProps> = (item) => {\n    // const navigation = useNavigation();\n  return (\n    <View>\n        <Link href={`products/${item.id}` as never} asChild>\n        {/* <Link href={`products/${item.id}`} asChild> */}\n\n        {/* @ts-ignore */}\n      \n        {/* <TouchableOpacity style={styles.container} onPress={() => navigation.navigate(\"ProductDetails\" , { item })}> */}\n        <Pressable style={styles.container} >\n            <View style={styles.image}>\n                <Image source={{uri: item.image  ? item.image : CONSTANTS.holderImageProductCard}} style={styles.productImg} />\n            </View>\n            <View style={styles.textContainer}>\n                <Text style={styles.productTitle}>{item.name}</Text>\n                <Text style={styles.supplier}>{item.color_code}</Text>\n                <Text style={styles.supplier}>{convertToCurrency(item.price)}</Text>\n            </View>\n        </Pressable>\n     </Link>\n    </View>\n  )\n}\n\nexport default ProductListItem\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: SIZES.small,\n        flexDirection: \"row\",\n        padding: SIZES.medium,\n        borderRadius: SIZES.small,\n        backgroundColor: \"#fff\",\n        ...SHADOWS.medium,\n        shadowColor: COLORS.lightWhite,\n        // height: 120\n    },\n    image: {\n        width: 70,\n        backgroundColor: COLORS.secondary,\n        borderRadius: SIZES.medium,\n        justifyContent: \"center\",\n        alignContent: \"center\"\n    },\n    productImg: {\n        width: '100%',\n        height: 65,\n        borderRadius: SIZES.small,\n        resizeMode: \"cover\"\n    },\n    textContainer: {\n        flex: 1,\n        marginHorizontal: SIZES.medium\n    },\n    productTitle: {\n        fontSize: SIZES.medium,\n        fontFamily: \"bold\",\n        color: COLORS.primary\n\n    },\n    supplier: {\n        fontSize: SIZES.small + 2,\n        fontFamily: \"bold\",\n        color: COLORS.gray,\n        marginTop: 3\n\n    }\n})","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  Dimensions,\n  StyleSheet,\n  Alert,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\"; // Import Ionicons from Expo\nimport { COLORS } from \"@/utils/theme\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { router } from \"expo-router\";\n\nconst { width } = Dimensions.get(\"window\");\n\n\nconst UserLoginTextFields = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n\n  const [activeTabIsLogin, setActiveTabIsLogin] = useState(true);\n  const { onLogin, onRegister, onLogout, authState } = useAuth();\n  // const { data: store } = useFetchObject<StoreModelProps>(() => getStore(CONSTANTS.store_id))\n\n  const showAlert = (message: string) =>\n    Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n\n  const loginAction = async () => {\n    try {\n      const result = await onLogin!(email, password);\n      if (result.error) {\n        showAlert(result.msg);\n      } else {\n        console.log(\"Login successful\");\n        try {\n          router.replace(\"/home\" as never);\n        } catch (navError) {\n          console.error(\"Navigation error:\", navError);\n        }\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      showAlert(\"Login failed. Please try again.\");\n    }\n  };\n    \n  return (\n    <View>\n          <View style={styles.inputContainer}>\n            <Ionicons name=\"mail-outline\" size={20} color={COLORS.darkGray} />\n            <TextInput\n              placeholder=\"Enter your email\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setEmail}\n              value={email}\n              style={styles.input}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              autoComplete=\"email\"\n              secureTextEntry={false} // Ensure this is set to false\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Ionicons\n              name=\"lock-closed-outline\"\n              size={20}\n              color={COLORS.darkGray}\n            />\n            <TextInput\n              placeholder=\"Enter your password\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setPassword}\n              value={password}\n              style={styles.input}\n              secureTextEntry={!showPassword} // Ensure this is set to false\n            />\n            <Ionicons name=\"eye-outline\" size={20} color={COLORS.darkGray} />\n          </View>\n\n          <TouchableOpacity>\n            <Text style={styles.forgotPasswordText}>Forgot Password?</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.loginButton} onPress={loginAction}>\n            <Text style={styles.loginButtonText}>Login</Text>\n          </TouchableOpacity>\n        </View>\n  )\n}\n\nexport default UserLoginTextFields\n\n\nconst styles = StyleSheet.create({\n    container: {\n      paddingHorizontal: 20,\n      paddingTop: 20,\n      backgroundColor: COLORS.white,\n      alignItems: \"center\",\n    },\n    logo: {\n      width: 80,\n      height: 80,\n      marginTop: 50,\n      borderRadius: 13,\n    },\n    appName: {\n      fontSize: 24,\n      fontWeight: \"bold\",\n      color: COLORS.primary,\n      marginTop: 10,\n    },\n    welcomeText: {\n      fontSize: 20,\n      fontWeight: \"bold\",\n      color: COLORS.darkGray,\n      marginTop: 20,\n    },\n    descriptionText: {\n      fontSize: 14,\n      color: COLORS.darkGray,\n      textAlign: \"center\",\n      marginVertical: 10,\n    },\n    tabContainer: {\n      flexDirection: \"row\",\n      marginVertical: 20,\n    },\n    tab: {\n      flex: 1,\n      paddingBottom: 5,\n      alignItems: \"center\",\n    },\n    activeTab: {\n      borderBottomWidth: 2,\n      borderBottomColor: COLORS.primary,\n    },\n    tabText: {\n      fontSize: 16,\n      color: COLORS.darkGray,\n    },\n    activeTabText: {\n      color: COLORS.primary,\n    },\n    inputContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      backgroundColor: COLORS.lightGray,\n      padding: 15,\n      borderRadius: 5,\n      marginVertical: 10,\n      width: width - 40,\n    },\n    input: {\n      flex: 1,\n      marginLeft: 10,\n      color: COLORS.darkGray,\n    },\n    forgotPasswordText: {\n      alignSelf: \"flex-end\",\n      color: COLORS.primary,\n      marginTop: 10,\n      marginBottom: 20,\n    },\n    loginButton: {\n      backgroundColor: COLORS.primary,\n      padding: 15,\n      borderRadius: 5,\n      width: width - 40,\n      alignItems: \"center\",\n    },\n    signupButton: {\n      backgroundColor: COLORS.primary,\n      padding: 15,\n      borderRadius: 5,\n      width: width - 40,\n      alignItems: \"center\",\n      marginTop: 20,\n    },\n    loginButtonText: {\n      fontSize: 18,\n      color: COLORS.white,\n      fontWeight: \"bold\",\n    },\n    termsText: {\n      fontSize: 12,\n      color: COLORS.darkGray,\n      textAlign: \"left\",\n      marginLeft: 10,\n      marginRight: 20,\n    },\n    checkboxContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginVertical: 10,\n    },\n    passwordCriteria: {\n      color: COLORS.darkGray,\n      fontSize: 14,\n      marginTop: 5,\n      flexDirection: \"row\",\n      alignItems: \"center\",\n    },\n  });\n  \n","// import { v4 as uuidv4 } from 'uuid';\n// const uuid = uuidv4(); // Generate the UUID\n\n// generateUUID.ts\nexport const generateUUID = (idLength: number): string => {\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  for (let i = 0; i < idLength; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Image,\n  Dimensions,\n  Alert,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\"; // Import Ionicons from Expo\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { UserProps } from \"@/models/UserProps\";\nimport { generateUUID } from \"@/hooks/generateUUID\";\nimport { router } from \"expo-router\";\nimport { COLORS } from \"@/utils/theme\";\n\n\nconst { width } = Dimensions.get(\"window\");\nconst UserRegisterTextFields = () => {\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  \n    const [activeTabIsLogin, setActiveTabIsLogin] = useState(false);\n    // const { data: store } = useFetchObject<StoreModelProps>(() =>\n    //   getStore(CONSTANTS.store_id)\n    // );\n    const { onLogin, onRegister, onLogout, authState } = useAuth();\n\n\n  const showAlert = (message: string) =>\n    Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n  const loginAction = async () => {\n    try {\n      const result = await onLogin!(email, password);\n      if (result.error) {\n        showAlert(result.msg);\n      } else {\n        console.log(\"Login successful\");\n        try {\n          router.replace(\"/(tabs)\");\n        } catch (navError) {\n          console.error(\"Navigation error:\", navError);\n        }\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      showAlert(\"Login failed. Please try again.\");\n    }\n  };\n\n  const registerAction = async () => {\n    const user: UserProps = {\n      id: generateUUID(8),\n      name,\n      email,\n      password,\n      store_ids: [],\n      store_owner_id: \"\",\n      onboardingQ1: \"\",\n      onboardingQ2: \"\",\n      onboardingQ3: \"\",\n      onboardingQ4: \"\",\n      orders: [],\n      favoriteItems: [],\n      cart: [],\n      affiliate_link: \"\",\n      active: false,\n      role: \"\",\n      birthday: \"\",\n      todo_completed: false,\n      tableName: \"\",\n      username: \"\",\n      phone_number: \"\",\n      gender: \"\",\n      profile_image: \"\",\n      address_city: \"\",\n      address_state: \"\",\n      location_history: [],\n      current_notification: \"\",\n      notifications: [],\n      payment_due: 0,\n      payment_due_date: \"\",\n      payment_due_day: \"\",\n      payment_monthly_amount: 0,\n      device_id: \"\",\n      device_os_version: \"\",\n      device_model: \"\",\n      device_ip_address: \"\",\n      device_battery_level: \"\",\n      device_battery_statue: \"\",\n      device_network_connectio_type: \"\",\n      loyalty_date: \"\",\n      payment_history_total: 0,\n      subscription_id: \"\",\n      paid_subscriber: false,\n      newsletter_subscriber: false,\n      notification_subscriber: false,\n      left_review: false,\n      review_stars: [],\n      reviews: [],\n      testimonials: [],\n      notify_arn: \"\",\n      owner_notify_arn: \"\",\n    };\n\n    try {\n      const result = await onRegister!(user);\n      if (result.error) {\n        showAlert(result);\n        return;\n      } else {\n        console.log(\"Registration successful\");\n        loginAction();\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      showAlert(\"Registration failed. Please try again.\");\n    }\n  };\n\n  return (\n    <View>\n          <View style={styles.inputContainer}>\n            <Ionicons name=\"person-outline\" size={20} color={COLORS.darkGray} />\n            <TextInput\n              placeholder=\"Your name\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setName}\n              value={name}\n              style={styles.input}\n              secureTextEntry={false} // Ensure this is set to false\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Ionicons name=\"mail-outline\" size={20} color={COLORS.darkGray} />\n            <TextInput\n              placeholder=\"Enter your email\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setEmail}\n              value={email}\n              style={styles.input}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              autoComplete=\"email\"\n              secureTextEntry={false} // Ensure this is set to false\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Ionicons\n              name=\"lock-closed-outline\"\n              size={20}\n              color={COLORS.darkGray}\n            />\n            <TextInput\n              placeholder=\"Enter your password\"\n              //placeholderTextColor={COLORS.darkGray}\n              onChangeText={setPassword}\n              value={password}\n              style={styles.input}\n              secureTextEntry={!showPassword}\n            />\n            <TouchableOpacity\n              onPress={() => setShowPassword((prevState) => !prevState)}\n            >\n              <Ionicons\n                name={showPassword ? \"eye-off-outline\" : \"eye-outline\"}\n                size={20}\n                color={COLORS.darkGray}\n              />\n            </TouchableOpacity>\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Ionicons\n              name=\"lock-closed-outline\"\n              size={20}\n              color={COLORS.darkGray}\n            />\n            <TextInput\n              placeholder=\"Confirm your password\"\n              onChangeText={setConfirmedPassword}\n              value={confirmedpassword}\n              style={styles.input}\n              secureTextEntry={!showConfirmPassword} // Ensure this is set to false\n            />\n\n            <TouchableOpacity\n              onPress={() => setShowConfirmPassword((prevState) => !prevState)}\n            >\n              <Ionicons\n                name={showPassword ? \"eye-off-outline\" : \"eye-outline\"}\n                size={20}\n                color={COLORS.darkGray}\n              />\n            </TouchableOpacity>\n          </View>\n\n          <Text style={styles.passwordCriteria}>\n            <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n            At least 8 characters\n          </Text>\n          <Text style={styles.passwordCriteria}>\n            <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n            At least 1 number\n          </Text>\n          <Text style={styles.passwordCriteria}>\n            <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n            Both upper and lower case letters\n          </Text>\n\n          <TouchableOpacity\n            style={styles.signupButton}\n            onPress={registerAction}\n          >\n            <Text style={styles.loginButtonText}>Sign Up</Text>\n          </TouchableOpacity>\n        </View>\n  )\n}\n\nexport default UserRegisterTextFields\n\n\nconst styles = StyleSheet.create({\n    container: {\n      paddingHorizontal: 20,\n      paddingTop: 20,\n      backgroundColor: COLORS.white,\n      alignItems: \"center\",\n    },\n    logo: {\n      width: 80,\n      height: 80,\n      marginTop: 50,\n      borderRadius: 13,\n    },\n    appName: {\n      fontSize: 24,\n      fontWeight: \"bold\",\n      color: COLORS.primary,\n      marginTop: 10,\n    },\n    welcomeText: {\n      fontSize: 20,\n      fontWeight: \"bold\",\n      color: COLORS.darkGray,\n      marginTop: 20,\n    },\n    descriptionText: {\n      fontSize: 14,\n      color: COLORS.darkGray,\n      textAlign: \"center\",\n      marginVertical: 10,\n    },\n    tabContainer: {\n      flexDirection: \"row\",\n      marginVertical: 20,\n    },\n    tab: {\n      flex: 1,\n      paddingBottom: 5,\n      alignItems: \"center\",\n    },\n    activeTab: {\n      borderBottomWidth: 2,\n      borderBottomColor: COLORS.primary,\n    },\n    tabText: {\n      fontSize: 16,\n      color: COLORS.darkGray,\n    },\n    activeTabText: {\n      color: COLORS.primary,\n    },\n    inputContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      backgroundColor: COLORS.lightGray,\n      padding: 15,\n      borderRadius: 5,\n      marginVertical: 10,\n      width: width - 40,\n    },\n    input: {\n      flex: 1,\n      marginLeft: 10,\n      color: COLORS.darkGray,\n    },\n    forgotPasswordText: {\n      alignSelf: \"flex-end\",\n      color: COLORS.primary,\n      marginTop: 10,\n      marginBottom: 20,\n    },\n    loginButton: {\n      backgroundColor: COLORS.primary,\n      padding: 15,\n      borderRadius: 5,\n      width: width - 40,\n      alignItems: \"center\",\n    },\n    signupButton: {\n      backgroundColor: COLORS.primary,\n      padding: 15,\n      borderRadius: 5,\n      width: width - 40,\n      alignItems: \"center\",\n      marginTop: 20,\n    },\n    loginButtonText: {\n      fontSize: 18,\n      color: COLORS.white,\n      fontWeight: \"bold\",\n    },\n    termsText: {\n      fontSize: 12,\n      color: COLORS.darkGray,\n      textAlign: \"left\",\n      marginLeft: 10,\n      marginRight: 20,\n    },\n    checkboxContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginVertical: 10,\n    },\n    passwordCriteria: {\n      color: COLORS.darkGray,\n      fontSize: 14,\n      marginTop: 5,\n      flexDirection: \"row\",\n      alignItems: \"center\",\n    },\n  });\n  ","import { StoreModelProps } from '../models/StoreModelProps';\nimport { TOKEN_KEY } from '../contexts/AuthContext';\nimport { createFetchClient } from '../utils/createFetchClient';\nimport { BASE_URL } from '@/utils/api';\n\n// Setup\nconst storesApi = createFetchClient(\n  BASE_URL,\n  {\n    tableName: 'prof-website-store-table',\n    showFilteredItems: 'true',\n  },\n  {\n    'Content-Type': 'application/json',\n  }\n);\n\n\n// GET ALL \nexport async function getStoresApi(storeID: string, email: string) {\n  try {\n    const response = await storesApi.get('/stores', {\n      params: {\n        store_id: storeID,\n        email: email,\n      },\n      headers: {\n        Authorization: TOKEN_KEY,\n        'Content-Type': 'application/json',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching stores:', error);\n    throw error;\n  }\n}\n\n\n// GET SINGLE ITEM\nexport async function getStoreApi(id: any) {\n  try {\n    const response = await storesApi.get(`/store`, {\n      params: { id },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching store:', error);\n    throw error;\n  }\n}\n\n\n// POST - Create / easy update\nexport const postStoreApi = async (store: StoreModelProps, storeID: string, email: string, token: string) => {\n  return await storesApi.post(`/store`, store, {\n    params: { \n      store_id: storeID,\n      email: email,\n    },\n    headers: { \n      Authorization: token,\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\n\n// UPDATE\nexport const updateStoreApi = async (store: StoreModelProps) => {\n  return await storesApi.put(`/store?id=${store.id}`, store);\n};\n\n// DELETE\nexport const deleteStoreApi = async (id: any) => {\n  return await storesApi.delete(`/store`, {\n    params: { id },\n  });\n};\n\n\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from 'react';\nimport { getStoreApi } from '@/api/storeApi';\nimport { StoreModelProps } from '@/models/StoreModelProps';\nimport { CONSTANTS } from '@/utils/constants';\n\n// error make sure to use client / mankind / customer ... store etc/\n\n\ninterface ClientStoreContextProps {\n  store: StoreModelProps | null;\n  getClientStore: () => void;\n  addStore: (store: StoreModelProps) => void;\n  removeStore: () => void;\n  selectedStore: StoreModelProps | null;\n  selectStore: (store: StoreModelProps) => void;\n  error: string | null;\n}\n\nconst ClientStoreContext = createContext<ClientStoreContextProps | undefined>(undefined);\n\nexport const useClientStore = (): ClientStoreContextProps => {\n  const context = useContext(ClientStoreContext);\n  if (!context) {\n    throw new Error('useClientStore must be used within a ClientStoreProvider');\n  }\n  return context;\n};\n\nexport const ClientStoreProvider = ({ children }: { children: ReactNode }) => {\n  const [store, setStore] = useState<StoreModelProps | null>(null);\n  const [selectedStore, setSelectedStore] = useState<StoreModelProps | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const addStore = (newStore: StoreModelProps) => setStore(newStore);\n\n  const removeStore = () => setStore(null);\n\n  const selectStore = (store: StoreModelProps) => setSelectedStore(store);\n\n  const getClientStore = async () => {\n    try {\n      const store_owner_id = CONSTANTS.store_id;\n      const response = await getStoreApi(store_owner_id);\n      setStore(response);\n    } catch (error: any) {\n      setError(error.message || \"Failed to fetch store. Please try again later.\");\n    }\n  };\n\n  useEffect(() => {\n    getClientStore();\n  }, []);\n\n  return (\n    <ClientStoreContext.Provider\n      value={{\n        store,\n        getClientStore,\n        addStore,\n        removeStore,\n        selectedStore,\n        selectStore,\n        error,\n      }}\n    >\n      {children}\n    </ClientStoreContext.Provider>\n  );\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { createContext, useContext, useState, ReactNode, useEffect } from 'react';\n// import { getClientStoreApi } from '@/api/storeApi';\n// import { StoreModelProps } from '@/models/StoreModelProps';\n// import { CONSTANTS } from '@/utils/constants';\n\n// interface ClientStoreContextProps {\n//   store: StoreModelProps | null;\n//   getClientStore: (store_owner_id?: string) => Promise<void>; // Returns a void promise since it's setting state\n//   addStore: (store: StoreModelProps) => void;\n//   removeStore: () => void;\n//   selectedStore: StoreModelProps | null;\n//   selectStore: (store: StoreModelProps) => void;\n//   error: string | null;\n// }\n\n// const ClientStoreContext = createContext<ClientStoreContextProps | undefined>(undefined);\n\n// export const useClientStore = () => {\n//   const context = useContext(ClientStoreContext);\n//   if (!context) {\n//     throw new Error('useClientStore must be used within a ClientStoreProvider');\n//   }\n//   return context;\n// };\n\n// export const ClientStoreProvider = ({ children }: { children: ReactNode }) => {\n//   const [store, setStore] = useState<StoreModelProps | null>(null);\n//   const [selectedStore, setSelectedStore] = useState<StoreModelProps | null>(null);\n//   const [error, setError] = useState<string | null>(null);\n\n//   // Fetch the store data when the provider mounts\n//   useEffect(() => {\n//     fetchStore();\n//   }, []);\n\n//   const fetchStore = async (store_owner_id: string = CONSTANTS.store_id) => {\n//     try {\n//       const response = await getClientStoreApi(store_owner_id);\n//       if (response) {\n//         setStore(response);\n//       } else {\n//         throw new Error('No store data returned');\n//       }\n//     } catch (error: any) {\n//       console.error(\"Failed to fetch client store:\", error.message || \"An unknown error occurred\");\n//       setError(error.message || \"Failed to fetch store. Please try again later.\");\n//     }\n//   };\n\n//   const addStore = (newStore: StoreModelProps) => setStore(newStore);\n\n//   const removeStore = () => setStore(null);\n\n//   const selectStore = (store: StoreModelProps) => setSelectedStore(store);\n\n//   const getClientStore = async (store_owner_id: string = CONSTANTS.store_id) => {\n//     await fetchStore(store_owner_id); // Re-use fetchStore logic\n//   };\n\n//   return (\n//     <ClientStoreContext.Provider\n//       value={{\n//         store,\n//         getClientStore,\n//         addStore,\n//         removeStore,\n//         selectedStore,\n//         selectStore,\n//         error,\n//       }}\n//     >\n//       {children}\n//     </ClientStoreContext.Provider>\n//   );\n// };\n\n// // export { ClientStoreProvider, useClientStore };\n\n\n\n\n\n// import { getClientStoreApi } from '@/api/storeApi';\n// import { StoreModelProps } from '@/models/StoreModelProps';\n// import { CONSTANTS } from '@/utils/constants';\n// import React, { createContext, useContext, useState, ReactNode } from 'react';\n\n// // Interface defining the structure of the context's value\n// interface ClientStoreContextProps {\n//   store: StoreModelProps | null;\n//   getClientStore: () => Promise<void>;\n//   addStore: (store: StoreModelProps) => void;\n//   removeStore: () => void;\n//   selectedStore: StoreModelProps | null;\n//   selectStore: (store: StoreModelProps) => void;\n//   error: string | null; // Include error state in the context\n// }\n\n// const ClientStoreContext = createContext<ClientStoreContextProps | undefined>(undefined);\n\n// const ClientStoreProvider = ({ children }: { children: ReactNode }) => {\n//   const [store, setStore] = useState<StoreModelProps | null>(null);\n//   const [selectedStore, setSelectedStore] = useState<StoreModelProps | null>(null);\n//   const [error, setError] = useState<string | null>(null); // Error state\n\n//   const addStore = (newStore: StoreModelProps) => {\n//     setStore(newStore);\n//     console.log(\"Store added:\", newStore);\n//   };\n\n//   const removeStore = () => {\n//     setStore(null);\n//     console.log(\"Store removed\");\n//   };\n\n//   const selectStore = (store: StoreModelProps) => {\n//     setSelectedStore(store);\n//     console.log(\"Store selected:\", store);\n//   };\n\n//   const getClientStore = async () => {\n//     console.log(\"getClientStore called\");\n//     try {\n//       const store_owner_id = CONSTANTS.store_id; // Replace this with your actual logic\n//       console.log(\"Fetching store for owner ID:\", store_owner_id);\n\n//       const response = await getClientStoreApi(store_owner_id);\n//       console.log(\"API Response:\", response);\n\n//       if (response) {\n//         setStore(response);\n//         console.log(\"Store set successfully:\", response);\n//       } else {\n//         throw new Error('No store data returned');\n//       }\n//     } catch (error: any) {\n//       console.error(\"Failed to fetch client store:\", error.message || \"An unknown error occurred\");\n//       setError(error.message || \"Failed to fetch store. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <ClientStoreContext.Provider\n//       value={{\n//         store,\n//         getClientStore,\n//         addStore,\n//         removeStore,\n//         selectedStore,\n//         selectStore,\n//         error, // Expose error state to the context\n//       }}\n//     >\n//       {children}\n//     </ClientStoreContext.Provider>\n//   );\n// };\n\n// const useClientStore = () => {\n//   const context = useContext(ClientStoreContext);\n//   if (!context) {\n//     throw new Error('useClientStore must be used within a ClientStoreProvider');\n//   }\n//   return context;\n// };\n\n// export { ClientStoreProvider, useClientStore };\n\n\n\n\n\n\n\n\n\n\n// import { StoreModelProps } from '@/models/StoreModelProps';\n// import React, { createContext, useContext, useState, ReactNode } from 'react';\n\n// // Interface defining the structure of the context's value\n// interface ClientStoreContextProps {\n//   store: StoreModelProps | null;\n//   addStore: (store: StoreModelProps) => void;\n//   removeStore: () => void;\n//   selectedStore: StoreModelProps | null;\n//   selectStore: (store: StoreModelProps) => void;\n// }\n\n// const ClientStoreContext = createContext<ClientStoreContextProps | undefined>(undefined);\n\n// const ClientStoreProvider = ({ children }: { children: ReactNode }) => {\n//   const [store, setStore] = useState<StoreModelProps | null>(null);\n//   const [selectedStore, setSelectedStore] = useState<StoreModelProps | null>(null);\n\n//   const addStore = (newStore: StoreModelProps) => setStore(newStore);\n\n//   const removeStore = () => setStore(null);\n\n//   const selectStore = (store: StoreModelProps) => setSelectedStore(store);\n\n  \n//   return (\n//     <ClientStoreContext.Provider value={{ store, addStore, removeStore, selectedStore, selectStore }}>\n//       {children}\n//     </ClientStoreContext.Provider>\n//   );\n// };\n\n// const useClientStore = () => {\n//   const context = useContext(ClientStoreContext);\n//   if (!context) {\n//     throw new Error('useClientStore must be used within a ClientStoreProvider');\n//   }\n//   return context;\n// };\n\n// export { ClientStoreProvider, useClientStore };\n\n\n\n\n// import { getClientStoreApi } from '@/api/storeApi';\n// import { StoreModelProps } from '@/models/StoreModelProps';\n// import { CONSTANTS } from '@/utils/constants';\n// import React, { createContext, useContext, useState, ReactNode } from 'react';\n\n// // Interface defining the structure of the context's value\n// interface ClientStoreContextProps {\n//   store: StoreModelProps | null;\n//   getClientStore: () => void;\n//   addStore: (store: StoreModelProps) => void;\n//   removeStore: () => void;\n//   selectedStore: StoreModelProps | null;\n//   selectStore: (store: StoreModelProps) => void;\n//   isLoading: boolean;\n//   error: string | null;\n// }\n\n// const ClientStoreContext = createContext<ClientStoreContextProps | undefined>(undefined);\n\n// const ClientStoreProvider = ({ children }: { children: ReactNode }) => {\n//   const [store, setStore] = useState<StoreModelProps | null>(null);\n//   const [selectedStore, setSelectedStore] = useState<StoreModelProps | null>(null);\n//   const [isLoading, setIsLoading] = useState<boolean>(false);\n//   const [error, setError] = useState<string | null>(null);\n\n//   const addStore = (newStore: StoreModelProps) => setStore(newStore);\n\n//   const removeStore = () => setStore(null);\n\n//   const selectStore = (store: StoreModelProps) => setSelectedStore(store);\n\n//   const getClientStore = async () => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const store_owner_id = CONSTANTS.store_id; // Adjust this based on your logic\n//       const response = await getClientStoreApi(store_owner_id);\n//       setStore(response);\n//     } catch (error: any) {\n//       console.error(\"Failed to fetch client store:\", error.response?.data?.message || error.message);\n//       setError(error.response?.data?.message || \"Failed to fetch store. Please try again later.\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <ClientStoreContext.Provider \n//       value={{ \n//         store, \n//         addStore, \n//         removeStore, \n//         getClientStore, \n//         selectedStore, \n//         selectStore, \n//         isLoading, \n//         error \n//       }}\n//     >\n//       {children}\n//     </ClientStoreContext.Provider>\n//   );\n// };\n\n// const useClientStore = () => {\n//   const context = useContext(ClientStoreContext);\n//   if (!context) {\n//     throw new Error('useClientStore must be used within a ClientStoreProvider');\n//   }\n//   return context;\n// };\n\n// export { ClientStoreProvider, useClientStore };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\n// import { StoreModelProps } from \"../models/StoreModelProps\";\n// import { getClientStoreApi } from \"../api/storeApi\"; // Replace with your actual API function\n// import { CONSTANTS } from \"../utils/constants\"; // Replace with your actual constants\n\n// // Interface defining the structure of the context's value\n// interface ClientStoreContextProps {\n//   store: StoreModelProps | null;\n//   addStore: (store: StoreModelProps) => void;\n//   removeStore: () => void;\n//   getClientStore: () => void;\n//   selectedStore: StoreModelProps | null;\n//   selectStore: (store: StoreModelProps) => void;\n//   isLoading: boolean;\n//   error: string | null;\n// }\n\n// // Create the context with an undefined initial value\n// const ClientStoreContext = createContext<ClientStoreContextProps | undefined>(undefined);\n\n// // Custom hook for easy context access\n// export const useClientStore = (): ClientStoreContextProps => {\n//   const context = useContext(ClientStoreContext);\n//   if (!context) {\n//     throw new Error(\"useClientStore must be used within a ClientStoreProvider\");\n//   }\n//   return context;\n// };\n\n// // Provider component\n// export const ClientStoreProvider = ({ children }: { children: ReactNode }) => {\n//   const [store, setStore] = useState<StoreModelProps | null>(null);\n//   const [selectedStore, setSelectedStore] = useState<StoreModelProps | null>(null);\n//   const [isLoading, setIsLoading] = useState<boolean>(false);\n//   const [error, setError] = useState<string | null>(null);\n\n//   // Fetch the store when the component mounts\n//   useEffect(() => {\n//     getClientStore();\n//   }, []);\n\n//   const addStore = (newStore: StoreModelProps) => {\n//     setStore(newStore);\n//   };\n\n//   const removeStore = () => {\n//     setStore(null);\n//   };\n\n//   const getClientStore = async () => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const store_owner_id = CONSTANTS.store_id; // Adjust this based on your logic\n//       const response = await getClientStoreApi(store_owner_id);\n//       setStore(response);\n//     } catch (error: any) {\n//       console.error(\"Failed to fetch client store:\", error.response?.data?.message || error.message);\n//       setError(error.response?.data?.message || \"Failed to fetch store. Please try again later.\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const selectStore = (store: StoreModelProps) => {\n//     setSelectedStore(store);\n//   };\n\n//   return (\n//     <ClientStoreContext.Provider \n//       value={{ \n//         store, \n//         addStore, \n//         removeStore, \n//         getClientStore, \n//         selectedStore, \n//         selectStore, \n//         isLoading, \n//         error \n//       }}\n//     >\n//       {children}\n//     </ClientStoreContext.Provider>\n//   );\n// };\n\n// export default ClientStoreProvider;\n\n\n\n\n\n\n\n\n\n\n// import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\n// import { StoreModelProps } from \"../models/StoreModelProps\"; // Ensure the model is correct\n// import { getClientStoreApi } from \"../api/storeApi\"; // Replace with your actual API function\n// import { CONSTANTS } from \"../utils/constants\"; // Replace with your actual constants\n\n// // Interface defining the structure of the context's value\n// interface ClientStoreContextProps {\n//   store: StoreModelProps | null;\n//   addStore: (store: StoreModelProps) => void;\n//   removeStore: () => void;\n//   getClientStore: (store_owner_id: string) => void;\n//   selectedStore: StoreModelProps | null;\n//   selectStore: (store: StoreModelProps) => void;\n//   isLoading: boolean;\n//   error: string | null;\n// }\n\n// // Create the context with an undefined initial value\n// const ClientStoreContext = createContext<ClientStoreContextProps | undefined>(undefined);\n\n// // Custom hook for easy context access\n// export const useClientStore = (): ClientStoreContextProps => {\n//   const context = useContext(ClientStoreContext);\n//   if (!context) {\n//     throw new Error(\"useClientStore must be used within a ClientStoreProvider\");\n//   }\n//   return context;\n// };\n\n// // Provider component\n// export const ClientStoreProvider = ({ children }: { children: ReactNode }) => {\n//   const [store, setStore] = useState<StoreModelProps | null>(null);\n//   const [selectedStore, setSelectedStore] = useState<StoreModelProps | null>(null);\n//   const [isLoading, setIsLoading] = useState<boolean>(false);\n//   const [error, setError] = useState<string | null>(null);\n\n//   // Fetch the store when the component mounts, only if authenticated\n//   // useEffect(() => {\n//   //   if (clientStore?.token) { \n//   //     getClientStore();\n//   //   }\n//   // }, [clientStore?.token]);\n\n//   const addStore = (newStore: StoreModelProps) => {\n//     setStore(newStore);\n//   };\n\n//   const removeStore = () => {\n//     setStore(null);\n//   };\n\n//   const getClientStore = async (store_owner_id: string) => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const response = await getClientStoreApi(store_owner_id); // clientStore?.user?.store_owner_id\n//       setStore(response);\n//     } catch (error: any) {\n//       console.error(\"Failed to fetch client store:\", error.response?.data?.message || error.message);\n//       setError(error.response?.data?.message || \"Failed to fetch store. Please try again later.\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const selectStore = (store: StoreModelProps) => {\n//     setSelectedStore(store);\n//   };\n\n//   return (\n//     <ClientStoreContext.Provider \n//       value={{ \n//         store, \n//         addStore, \n//         removeStore, \n//         getClientStore, \n//         selectedStore, \n//         selectStore, \n//         isLoading, \n//         error \n//       }}\n//     >\n//       {children}\n//     </ClientStoreContext.Provider>\n//   );\n// };\n\n// export default ClientStoreProvider;\n\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Image,\n  Dimensions,\n  Alert,\n} from \"react-native\";\nimport { COLORS } from \"@/utils/theme\";\nimport UserLoginTextFields from \"@/components/views/UserLoginTextFields\";\nimport UserRegisterTextFields from \"@/components/views/UserRegisterTextFields\";\nimport { useClientStore } from \"@/contexts/ClientStoreContext\";\n\nconst { width } = Dimensions.get(\"window\");\n\nconst RegisterComponentTwo = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const [activeTabIsLogin, setActiveTabIsLogin] = useState(false);\n  // const { data: store } = useFetchObject<StoreModelProps>(() =>\n  //   getStore(CONSTANTS.store_id)\n  // );\n\n  const { store } = useClientStore()\n\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={{\n          uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/logo.png\",\n        }}\n        style={styles.logo}\n      />\n      <Text style={styles.welcomeText}>\n        Welcome to {store?.store_name ?? \"\"}\n      </Text>\n      <Text style={styles.descriptionText}>\n        Sign up or login below to manage your project, task, and productivity\n      </Text>\n\n      <View style={styles.tabContainer}>\n        <TouchableOpacity\n          style={[styles.tab, activeTabIsLogin && styles.activeTab]}\n          onPress={() => setActiveTabIsLogin(true)}\n        >\n          <Text\n            style={[styles.tabText, activeTabIsLogin && styles.activeTabText]}\n          >\n            Login\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.tab, !activeTabIsLogin && styles.activeTab]}\n          onPress={() => setActiveTabIsLogin(false)}\n        >\n          <Text\n            style={[styles.tabText, !activeTabIsLogin && styles.activeTabText]}\n          >\n            Sign Up\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {activeTabIsLogin ? (\n       <UserLoginTextFields />\n      ) : (\n       <UserRegisterTextFields />\n      )}\n    </View>\n  );\n};\n\nexport default RegisterComponentTwo;\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n    backgroundColor: COLORS.white,\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    marginTop: 50,\n    borderRadius: 13,\n  },\n  appName: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: COLORS.primary,\n    marginTop: 10,\n  },\n  welcomeText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: COLORS.darkGray,\n    marginTop: 20,\n  },\n  descriptionText: {\n    fontSize: 14,\n    color: COLORS.darkGray,\n    textAlign: \"center\",\n    marginVertical: 10,\n  },\n  tabContainer: {\n    flexDirection: \"row\",\n    marginVertical: 20,\n  },\n  tab: {\n    flex: 1,\n    paddingBottom: 5,\n    alignItems: \"center\",\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n    borderBottomColor: COLORS.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    color: COLORS.darkGray,\n  },\n  activeTabText: {\n    color: COLORS.primary,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.lightGray,\n    padding: 15,\n    borderRadius: 5,\n    marginVertical: 10,\n    width: width - 40,\n  },\n  input: {\n    flex: 1,\n    marginLeft: 10,\n    color: COLORS.darkGray,\n  },\n  forgotPasswordText: {\n    alignSelf: \"flex-end\",\n    color: COLORS.primary,\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  loginButton: {\n    backgroundColor: COLORS.primary,\n    padding: 15,\n    borderRadius: 5,\n    width: width - 40,\n    alignItems: \"center\",\n  },\n  signupButton: {\n    backgroundColor: COLORS.primary,\n    padding: 15,\n    borderRadius: 5,\n    width: width - 40,\n    alignItems: \"center\",\n    marginTop: 20,\n  },\n  loginButtonText: {\n    fontSize: 18,\n    color: COLORS.white,\n    fontWeight: \"bold\",\n  },\n  termsText: {\n    fontSize: 12,\n    color: COLORS.darkGray,\n    textAlign: \"left\",\n    marginLeft: 10,\n    marginRight: 20,\n  },\n  checkboxContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 10,\n  },\n  passwordCriteria: {\n    color: COLORS.darkGray,\n    fontSize: 14,\n    marginTop: 5,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n});\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Image,\n  Dimensions,\n  Alert,\n} from \"react-native\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { UserProps } from \"@/models/UserProps\";\nimport { generateUUID } from \"@/hooks/generateUUID\";\nimport { router } from \"expo-router\";\nimport { COLORS } from \"@/utils/theme\";\nimport UserLoginTextFields from \"@/components/views/UserLoginTextFields\";\nimport UserRegisterTextFields from \"@/components/views/UserRegisterTextFields\";\nimport { useClientStore } from \"@/contexts/ClientStoreContext\";\n\nconst { width } = Dimensions.get(\"window\");\n\nconst LoginComponentTwo = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const [activeTabIsLogin, setActiveTabIsLogin] = useState(true);\n  const { onLogin, onRegister, onLogout, authState } = useAuth();\n  // const { data: store } = useFetchObject<StoreModelProps>(() =>\n  //   getStore(CONSTANTS.store_id)\n  // );\n\n  const { store } = useClientStore()\n\n\n  const showAlert = (message: string) =>\n    Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n  const loginAction = async () => {\n    try {\n      const result = await onLogin!(email, password);\n      if (result.error) {\n        showAlert(result.msg);\n      } else {\n        console.log(\"Login successful\");\n        try {\n          router.replace(\"/home\" as never);\n        } catch (navError) {\n          console.error(\"Navigation error:\", navError);\n        }\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      showAlert(\"Login failed. Please try again.\");\n    }\n  };\n\n  const registerAction = async () => {\n    const user: UserProps = {\n      id: generateUUID(8),\n      name,\n      email,\n      password,\n      store_ids: [],\n      store_owner_id: \"\",\n      onboardingQ1: \"\",\n      onboardingQ2: \"\",\n      onboardingQ3: \"\",\n      onboardingQ4: \"\",\n      orders: [],\n      favoriteItems: [],\n      cart: [],\n      affiliate_link: \"\",\n      active: false,\n      role: \"\",\n      birthday: \"\",\n      todo_completed: false,\n      tableName: \"\",\n      username: \"\",\n      phone_number: \"\",\n      gender: \"\",\n      profile_image: \"\",\n      address_city: \"\",\n      address_state: \"\",\n      location_history: [],\n      current_notification: \"\",\n      notifications: [],\n      payment_due: 0,\n      payment_due_date: \"\",\n      payment_due_day: \"\",\n      payment_monthly_amount: 0,\n      device_id: \"\",\n      device_os_version: \"\",\n      device_model: \"\",\n      device_ip_address: \"\",\n      device_battery_level: \"\",\n      device_battery_statue: \"\",\n      device_network_connectio_type: \"\",\n      loyalty_date: \"\",\n      payment_history_total: 0,\n      subscription_id: \"\",\n      paid_subscriber: false,\n      newsletter_subscriber: false,\n      notification_subscriber: false,\n      left_review: false,\n      review_stars: [],\n      reviews: [],\n      testimonials: [],\n      notify_arn: \"\",\n      owner_notify_arn: \"\",\n    };\n\n    try {\n      const result = await onRegister!(user);\n      if (result.error) {\n        showAlert(result);\n        return;\n      } else {\n        console.log(\"Registration successful\");\n        loginAction();\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      showAlert(\"Registration failed. Please try again.\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={{\n          uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/logo.png\",\n        }}\n        style={styles.logo}\n      />\n      <Text style={styles.welcomeText}>\n        Welcome to {store?.store_name ?? \"\"}\n      </Text>\n      <Text style={styles.descriptionText}>\n        Sign up or login below to manage your project, task, and productivity\n      </Text>\n\n      <View style={styles.tabContainer}>\n        <TouchableOpacity\n          style={[styles.tab, activeTabIsLogin && styles.activeTab]}\n          onPress={() => setActiveTabIsLogin(true)}\n        >\n          <Text\n            style={[styles.tabText, activeTabIsLogin && styles.activeTabText]}\n          >\n            Login\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.tab, !activeTabIsLogin && styles.activeTab]}\n          onPress={() => setActiveTabIsLogin(false)}\n        >\n          <Text\n            style={[styles.tabText, !activeTabIsLogin && styles.activeTabText]}\n          >\n            Sign Up\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {activeTabIsLogin ? (\n       <UserLoginTextFields />\n      ) : (\n        <UserRegisterTextFields /> \n      )}\n    </View>\n  );\n};\n\nexport default LoginComponentTwo;\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n    backgroundColor: COLORS.white,\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    marginTop: 50,\n    borderRadius: 13,\n  },\n  appName: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: COLORS.primary,\n    marginTop: 10,\n  },\n  welcomeText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: COLORS.darkGray,\n    marginTop: 20,\n  },\n  descriptionText: {\n    fontSize: 14,\n    color: COLORS.darkGray,\n    textAlign: \"center\",\n    marginVertical: 10,\n  },\n  tabContainer: {\n    flexDirection: \"row\",\n    marginVertical: 20,\n  },\n  tab: {\n    flex: 1,\n    paddingBottom: 5,\n    alignItems: \"center\",\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n    borderBottomColor: COLORS.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    color: COLORS.darkGray,\n  },\n  activeTabText: {\n    color: COLORS.primary,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.lightGray,\n    padding: 15,\n    borderRadius: 5,\n    marginVertical: 10,\n    width: width - 40,\n  },\n  input: {\n    flex: 1,\n    marginLeft: 10,\n    color: COLORS.darkGray,\n  },\n  forgotPasswordText: {\n    alignSelf: \"flex-end\",\n    color: COLORS.primary,\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  loginButton: {\n    backgroundColor: COLORS.primary,\n    padding: 15,\n    borderRadius: 5,\n    width: width - 40,\n    alignItems: \"center\",\n  },\n  signupButton: {\n    backgroundColor: COLORS.primary,\n    padding: 15,\n    borderRadius: 5,\n    width: width - 40,\n    alignItems: \"center\",\n    marginTop: 20,\n  },\n  loginButtonText: {\n    fontSize: 18,\n    color: COLORS.white,\n    fontWeight: \"bold\",\n  },\n  termsText: {\n    fontSize: 12,\n    color: COLORS.darkGray,\n    textAlign: \"left\",\n    marginLeft: 10,\n    marginRight: 20,\n  },\n  checkboxContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 10,\n  },\n  passwordCriteria: {\n    color: COLORS.darkGray,\n    fontSize: 14,\n    marginTop: 5,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n});\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from \"react\";\n// import {\n//   View,\n//   Text,\n//   TextInput,\n//   TouchableOpacity,\n//   StyleSheet,\n//   Image,\n//   Dimensions,\n//   Alert,\n// } from \"react-native\";\n// import { Ionicons } from \"@expo/vector-icons\"; // Import Ionicons from Expo\n// import { useAuth } from \"@/contexts/AuthContext\";\n// import { UserProps } from \"@/models/UserProps\";\n// import { generateUUID } from \"@/hooks/generateUUID\";\n// import { router } from \"expo-router\";\n// import { COLORS } from \"@/utils/theme\";\n// import { CONSTANTS } from \"@/utils/constants\";\n// import useFetchObject from \"@/hooks/useFetchObject\";\n// import { StoreModelProps } from \"@/models/StoreModelProps\";\n// import { getStore } from \"@/api/storeApi\";\n\n// const { width } = Dimensions.get(\"window\");\n\n// const LoginComponentTwo = () => {\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmedpassword, setConfirmedPassword] = useState(\"\");\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n//   const [activeTabIsLogin, setActiveTabIsLogin] = useState(true);\n//   const { onLogin, onRegister, onLogout, authState } = useAuth();\n//   const { data: store } = useFetchObject<StoreModelProps>(() =>\n//     getStore(CONSTANTS.store_id)\n//   );\n\n//   const showAlert = (message: string) =>\n//     Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n//   const loginAction = async () => {\n//     try {\n//       const result = await onLogin!(email, password);\n//       if (result.error) {\n//         showAlert(result.msg);\n//       } else {\n//         console.log(\"Login successful\");\n//         try {\n//           router.replace(\"/home\");\n//         } catch (navError) {\n//           console.error(\"Navigation error:\", navError);\n//         }\n//       }\n//     } catch (error) {\n//       console.error(\"Login error:\", error);\n//       showAlert(\"Login failed. Please try again.\");\n//     }\n//   };\n\n//   const registerAction = async () => {\n//     const user: UserProps = {\n//       id: generateUUID(8),\n//       name,\n//       email,\n//       password,\n//       store_ids: [],\n//       store_owner_id: \"\",\n//       onboardingQ1: \"\",\n//       onboardingQ2: \"\",\n//       onboardingQ3: \"\",\n//       onboardingQ4: \"\",\n//       orders: [],\n//       favoriteItems: [],\n//       cart: [],\n//       affiliate_link: \"\",\n//       active: false,\n//       role: \"\",\n//       birthday: \"\",\n//       todo_completed: false,\n//       tableName: \"\",\n//       username: \"\",\n//       phone_number: \"\",\n//       gender: \"\",\n//       profile_image: \"\",\n//       address_city: \"\",\n//       address_state: \"\",\n//       location_history: [],\n//       current_notification: \"\",\n//       notifications: [],\n//       payment_due: 0,\n//       payment_due_date: \"\",\n//       payment_due_day: \"\",\n//       payment_monthly_amount: 0,\n//       device_id: \"\",\n//       device_os_version: \"\",\n//       device_model: \"\",\n//       device_ip_address: \"\",\n//       device_battery_level: \"\",\n//       device_battery_statue: \"\",\n//       device_network_connectio_type: \"\",\n//       loyalty_date: \"\",\n//       payment_history_total: 0,\n//       subscription_id: \"\",\n//       paid_subscriber: false,\n//       newsletter_subscriber: false,\n//       notification_subscriber: false,\n//       left_review: false,\n//       review_stars: [],\n//       reviews: [],\n//       testimonials: [],\n//       notify_arn: \"\",\n//       owner_notify_arn: \"\",\n//     };\n\n//     try {\n//       const result = await onRegister!(user);\n//       if (result.error) {\n//         showAlert(result);\n//         return;\n//       } else {\n//         console.log(\"Registration successful\");\n//         loginAction();\n//       }\n//     } catch (error) {\n//       console.error(\"Registration error:\", error);\n//       showAlert(\"Registration failed. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <View style={styles.container}>\n//       <Image\n//         source={{\n//           uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Apps_For_Mankind/logo.png\",\n//         }}\n//         style={styles.logo}\n//       />\n//       <Text style={styles.welcomeText}>\n//         Welcome to {store?.store_name ?? \"\"}\n//       </Text>\n//       <Text style={styles.descriptionText}>\n//         Sign up or login below to manage your project, task, and productivity\n//       </Text>\n\n//       <View style={styles.tabContainer}>\n//         <TouchableOpacity\n//           style={[styles.tab, activeTabIsLogin && styles.activeTab]}\n//           onPress={() => setActiveTabIsLogin(true)}\n//         >\n//           <Text\n//             style={[styles.tabText, activeTabIsLogin && styles.activeTabText]}\n//           >\n//             Login\n//           </Text>\n//         </TouchableOpacity>\n//         <TouchableOpacity\n//           style={[styles.tab, !activeTabIsLogin && styles.activeTab]}\n//           onPress={() => setActiveTabIsLogin(false)}\n//         >\n//           <Text\n//             style={[styles.tabText, !activeTabIsLogin && styles.activeTabText]}\n//           >\n//             Sign Up\n//           </Text>\n//         </TouchableOpacity>\n//       </View>\n\n//       {activeTabIsLogin ? (\n//         <View>\n//           <View style={styles.inputContainer}>\n//             <Ionicons name=\"mail-outline\" size={20} color={COLORS.darkGray} />\n//             <TextInput\n//               placeholder=\"Enter your email\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setEmail}\n//               value={email}\n//               style={styles.input}\n//               keyboardType=\"email-address\"\n//               autoCapitalize=\"none\"\n//               autoComplete=\"email\"\n//               secureTextEntry={false} // Ensure this is set to false\n//             />\n//           </View>\n\n//           <View style={styles.inputContainer}>\n//             <Ionicons\n//               name=\"lock-closed-outline\"\n//               size={20}\n//               color={COLORS.darkGray}\n//             />\n//             <TextInput\n//               placeholder=\"Enter your password\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setPassword}\n//               value={password}\n//               style={styles.input}\n//               secureTextEntry={!showPassword} // Ensure this is set to false\n//             />\n//             <Ionicons name=\"eye-outline\" size={20} color={COLORS.darkGray} />\n//           </View>\n\n//           <TouchableOpacity>\n//             <Text style={styles.forgotPasswordText}>Forgot Password?</Text>\n//           </TouchableOpacity>\n\n//           <TouchableOpacity style={styles.loginButton} onPress={loginAction}>\n//             <Text style={styles.loginButtonText}>Login</Text>\n//           </TouchableOpacity>\n//         </View>\n//       ) : (\n//         <View>\n//           <View style={styles.inputContainer}>\n//             <Ionicons name=\"person-outline\" size={20} color={COLORS.darkGray} />\n//             <TextInput\n//               placeholder=\"Your name\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setName}\n//               value={name}\n//               style={styles.input}\n//               secureTextEntry={false} // Ensure this is set to false\n//             />\n//           </View>\n\n//           <View style={styles.inputContainer}>\n//             <Ionicons name=\"mail-outline\" size={20} color={COLORS.darkGray} />\n//             <TextInput\n//               placeholder=\"Enter your email\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setEmail}\n//               value={email}\n//               style={styles.input}\n//               keyboardType=\"email-address\"\n//               autoCapitalize=\"none\"\n//               autoComplete=\"email\"\n//               secureTextEntry={false} // Ensure this is set to false\n//             />\n//           </View>\n\n//           <View style={styles.inputContainer}>\n//             <Ionicons\n//               name=\"lock-closed-outline\"\n//               size={20}\n//               color={COLORS.darkGray}\n//             />\n//             <TextInput\n//               placeholder=\"Enter your password\"\n//               //placeholderTextColor={COLORS.darkGray}\n//               onChangeText={setPassword}\n//               value={password}\n//               style={styles.input}\n//               secureTextEntry={!showPassword}\n//             />\n//             <TouchableOpacity\n//               onPress={() => setShowPassword((prevState) => !prevState)}\n//             >\n//               <Ionicons\n//                 name={showPassword ? \"eye-off-outline\" : \"eye-outline\"}\n//                 size={20}\n//                 color={COLORS.darkGray}\n//               />\n//             </TouchableOpacity>\n//           </View>\n\n//           <View style={styles.inputContainer}>\n//             <Ionicons\n//               name=\"lock-closed-outline\"\n//               size={20}\n//               color={COLORS.darkGray}\n//             />\n//             <TextInput\n//               placeholder=\"Confirm your password\"\n//               onChangeText={setConfirmedPassword}\n//               value={confirmedpassword}\n//               style={styles.input}\n//               secureTextEntry={!showConfirmPassword} // Ensure this is set to false\n//             />\n\n//             <TouchableOpacity\n//               onPress={() => setShowConfirmPassword((prevState) => !prevState)}\n//             >\n//               <Ionicons\n//                 name={showPassword ? \"eye-off-outline\" : \"eye-outline\"}\n//                 size={20}\n//                 color={COLORS.darkGray}\n//               />\n//             </TouchableOpacity>\n//           </View>\n\n//           <Text style={styles.passwordCriteria}>\n//             <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n//             At least 8 characters\n//           </Text>\n//           <Text style={styles.passwordCriteria}>\n//             <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n//             At least 1 number\n//           </Text>\n//           <Text style={styles.passwordCriteria}>\n//             <Ionicons name=\"checkmark-outline\" size={16} color={COLORS.green} />{\" \"}\n//             Both upper and lower case letters\n//           </Text>\n\n//           <TouchableOpacity\n//             style={styles.signupButton}\n//             onPress={registerAction}\n//           >\n//             <Text style={styles.loginButtonText}>Sign Up</Text>\n//           </TouchableOpacity>\n//         </View>\n//       )}\n//     </View>\n//   );\n// };\n\n// export default LoginComponentTwo;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     paddingHorizontal: 20,\n//     paddingTop: 20,\n//     backgroundColor: COLORS.white,\n//     alignItems: \"center\",\n//   },\n//   logo: {\n//     width: 80,\n//     height: 80,\n//     marginTop: 50,\n//     borderRadius: 13,\n//   },\n//   appName: {\n//     fontSize: 24,\n//     fontWeight: \"bold\",\n//     color: COLORS.primary,\n//     marginTop: 10,\n//   },\n//   welcomeText: {\n//     fontSize: 20,\n//     fontWeight: \"bold\",\n//     color: COLORS.darkGray,\n//     marginTop: 20,\n//   },\n//   descriptionText: {\n//     fontSize: 14,\n//     color: COLORS.darkGray,\n//     textAlign: \"center\",\n//     marginVertical: 10,\n//   },\n//   tabContainer: {\n//     flexDirection: \"row\",\n//     marginVertical: 20,\n//   },\n//   tab: {\n//     flex: 1,\n//     paddingBottom: 5,\n//     alignItems: \"center\",\n//   },\n//   activeTab: {\n//     borderBottomWidth: 2,\n//     borderBottomColor: COLORS.primary,\n//   },\n//   tabText: {\n//     fontSize: 16,\n//     color: COLORS.darkGray,\n//   },\n//   activeTabText: {\n//     color: COLORS.primary,\n//   },\n//   inputContainer: {\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//     backgroundColor: COLORS.lightGray,\n//     padding: 15,\n//     borderRadius: 5,\n//     marginVertical: 10,\n//     width: width - 40,\n//   },\n//   input: {\n//     flex: 1,\n//     marginLeft: 10,\n//     color: COLORS.darkGray,\n//   },\n//   forgotPasswordText: {\n//     alignSelf: \"flex-end\",\n//     color: COLORS.primary,\n//     marginTop: 10,\n//     marginBottom: 20,\n//   },\n//   loginButton: {\n//     backgroundColor: COLORS.primary,\n//     padding: 15,\n//     borderRadius: 5,\n//     width: width - 40,\n//     alignItems: \"center\",\n//   },\n//   signupButton: {\n//     backgroundColor: COLORS.primary,\n//     padding: 15,\n//     borderRadius: 5,\n//     width: width - 40,\n//     alignItems: \"center\",\n//     marginTop: 20,\n//   },\n//   loginButtonText: {\n//     fontSize: 18,\n//     color: COLORS.white,\n//     fontWeight: \"bold\",\n//   },\n//   termsText: {\n//     fontSize: 12,\n//     color: COLORS.darkGray,\n//     textAlign: \"left\",\n//     marginLeft: 10,\n//     marginRight: 20,\n//   },\n//   checkboxContainer: {\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//     marginVertical: 10,\n//   },\n//   passwordCriteria: {\n//     color: COLORS.darkGray,\n//     fontSize: 14,\n//     marginTop: 5,\n//     flexDirection: \"row\",\n//     alignItems: \"center\",\n//   },\n// });\n","import { FullAddress, OrderHistory, OrderItem, OrderModelProps, Parcel } from \"@/models/OrderModelProps\";\nimport { ProductModelProps } from \"@/models/ProductModelProps\";\n\n\nexport const SAMPLE_ORDER_ITEMS: OrderItem[] = [\n  {\n    id: \"item123\",\n    quantity: 2,\n    sku: \"SKU12345\",\n    title: \"Sample Product 1\",\n    color: \"Red\",\n    productId: \"prod123\",\n    size: \"Medium\",\n    image: \"https://example.com/sample-product-1.jpg\",\n    total_price: 399.98,\n    length: \"10\",\n    width: \"5\",\n    height: \"3\",\n    weight: \"1.2\",\n    weight_unit: \"kg\",\n    distance_unit: \"cm\",\n    description: \"This is a sample product item for a larger order.\",\n    net_weight: \"1.1\",\n    value_amount: 200.00,\n    value_currency: \"USD\",\n    origin_country: \"USA\",\n    eccn_ear99: \"EAR99\",\n  },\n  {\n    id: \"item124\",\n    quantity: 1,\n    sku: \"SKU54321\",\n    title: \"Advanced Gadget\",\n    color: \"Silver\",\n    productId: \"prod124\",\n    size: \"Large\",\n    image: \"https://example.com/advanced-gadget.jpg\",\n    total_price: 299.99,\n    length: \"15\",\n    width: \"8\",\n    height: \"5\",\n    weight: \"2.0\",\n    weight_unit: \"kg\",\n    distance_unit: \"cm\",\n    description: \"An advanced gadget with cutting-edge technology.\",\n    net_weight: \"1.9\",\n    value_amount: 299.99,\n    value_currency: \"USD\",\n    origin_country: \"China\",\n    eccn_ear99: \"EAR99\",\n  },\n  {\n    id: \"item125\",\n    quantity: 3,\n    sku: \"SKU67890\",\n    title: \"Basic Accessory\",\n    color: \"Black\",\n    productId: \"prod125\",\n    size: \"One Size\",\n    image: \"https://example.com/basic-accessory.jpg\",\n    total_price: 89.97,\n    length: \"7\",\n    width: \"4\",\n    height: \"2\",\n    weight: \"0.5\",\n    weight_unit: \"kg\",\n    distance_unit: \"cm\",\n    description: \"A basic accessory to complement your gadgets.\",\n    net_weight: \"0.45\",\n    value_amount: 29.99,\n    value_currency: \"USD\",\n    origin_country: \"Germany\",\n    eccn_ear99: \"EAR99\",\n  },\n];\n\n\nexport const SAMPLE_ORDER_HISTORY: OrderHistory = {\n  id: \"history_12345\",\n  title: \"Order History for Order #12345\",\n  orderPlaced: true,\n  orderEmailSent: true,\n  orderPaymentReceived: true,\n  inventoryCheck: \"Inventory checked and verified\",\n  orderProcessed: true,\n  orderPackaged: true,\n  orderShippingLabelGenerated: true,\n  orderShipped: true,\n  shippedDate: \"2024-08-18T10:00:00Z\",\n  trackingNumber: \"TRACK123456789\",\n  deliveryConfirmed: false,\n  orderDeliveryDate: \"\",\n  orderReturned: false,\n  orderReturnLabelGenerated: false,\n  status: \"Shipped\",\n  note: \"Shipment is on its way to the customer.\",\n};\n\nexport const SAMPLE_FULL_ADDRESS: FullAddress = {\n  name: \"John Doe\",\n  streetOne: \"123 Main St\",\n  streetTwo: \"Apt 4B\",\n  city: \"New York\",\n  state: \"NY\",\n  zip: \"10001\",\n  country: \"USA\",\n  phone: \"+1 555-555-5555\",\n  email: \"johndoe@example.com\",\n  is_residential: true,\n};\n\nexport const SAMPLE_PARCEL: Parcel = {\n  length: \"10\",\n  width: \"5\",\n  height: \"8\",\n  distance_unit: \"in\", // Assuming inches for the distance unit\n  weight: \"2.5\",\n  mass_unit: \"lb\", // Assuming pounds for the mass unit\n  value_amount: 100, // Assuming a value of 100 currency units\n  metadata: \"Sample parcel metadata\",\n  test: false,\n};\n\nexport const SAMPLE_ORDER: OrderModelProps = {\n  id: \"order_12345\",\n  stripe_id: \"stripe_12345\",\n  store_id: \"store_123\",\n  index: 1,\n  order_status: \"Processing\",\n  items: SAMPLE_ORDER_ITEMS,\n  userId: \"user_123\",\n  order_history: [SAMPLE_ORDER_HISTORY],\n  total: 50.0,\n  net_total: 45.0,\n  courier: \"UPS\",\n  shipping_label: \"http://example.com/shipping-label.pdf\",\n  return_label: \"http://example.com/return-label.pdf\",\n  from_address: SAMPLE_FULL_ADDRESS,\n  to_address: SAMPLE_FULL_ADDRESS,\n  parcel: SAMPLE_PARCEL,\n  title: \"Order #12345\",\n  type: \"Standard\",\n  coupon_code: \"DISCOUNT10\",\n  referred_by: \"user_456\",\n  statement_descriptor: \"Sample Order\",\n  note: \"Please handle with care.\",\n  budget: \"50.0\",\n  order_placed_date: \"2024-08-17T08:00:00Z\",\n  order_started_date: \"2024-08-18T08:00:00Z\",\n  order_created_date: \"2024-08-17T08:00:00Z\",\n  order_completed_date: \"2024-08-19T08:00:00Z\",\n  tax: 5.0,\n  stripe_fee: 2.5,\n  afm_fee: 1.5,\n  shipping_cost: 10.0,\n  discount_amount: 5.0,\n};","import { ProductModelProps } from \"@/models/ProductModelProps\";\n\n\nexport  const SAMPLE_PRODUCT: ProductModelProps[] = [\n    {\n      id: \"prod123\",\n      name: \"Sample Product\",\n      price: 199.99,\n      store_id: \"store456\",\n      index: 1,\n      createdOn: \"2024-08-16T12:00:00.000Z\",\n      active: true,\n      image: \"https://example.com/sample-product.jpg\",\n      on_sale: true,\n      sale_price: 149.99,\n      slug: \"sample-product\",\n      quantity: 100,\n      description: \"This is a sample product description that highlights key features and benefits of the product.\",\n      icon_name: \"sample-icon\",\n      category: \"Electronics\",\n      images: [\n        \"https://example.com/sample-product-1.jpg\",\n        \"https://example.com/sample-product-2.jpg\",\n      ],\n      included: [\"Charging cable\", \"User manual\"],\n      materials: [\"Plastic\", \"Metal\"],\n      tags: [\"electronics\", \"gadget\", \"sale\"],\n      brand: \"SampleBrand\",\n      views: 1234,\n      likes: 150,\n      isLiked: true,\n      gender: \"Unisex\",\n      color: \"Black\",\n      color_code: \"#000000\",\n      condition: \"New\",\n      features: [\"Feature 1\", \"Feature 2\", \"Feature 3\"],\n      sku: \"SKU12345\",\n      variant_type: true,\n      variant_selected: {},\n      variants: [\n        {\n          id: \"variant1\",\n          title: \"Sample Variant 1\",\n          image: \"https://example.com/sample-variant1.jpg\",\n          color_code: \"#FF0000\",\n          price: 199.99,\n          sale_price: 149.99,\n          description: \"This is a description for the first variant.\",\n          features: [\"Feature A\", \"Feature B\"],\n          inventory: 50,\n          value_price: 149.99,\n          product_id: \"prod123\",\n          variantInfo: [\n            {\n              title: \"Size\",\n              description: \"Size description\",\n              price: 149.99,\n              sale_price: 129.99,\n              inventory: 20,\n            },\n          ],\n        },\n        {\n          id: \"variant2\",\n          title: \"Sample Variant 2\",\n          image: \"https://example.com/sample-variant2.jpg\",\n          color_code: \"#00FF00\",\n          price: 209.99,\n          sale_price: 169.99,\n          description: \"This is a description for the second variant.\",\n          features: [\"Feature X\", \"Feature Y\"],\n          inventory: 30,\n          value_price: 169.99,\n          product_id: \"prod123\",\n          variantInfo: [\n            {\n              title: \"Color\",\n              description: \"Color description\",\n              price: 169.99,\n              sale_price: 149.99,\n              inventory: 15,\n            },\n          ],\n        },\n      ],\n      last_updated: \"2024-08-16T15:00:00.000Z\",\n      item_type: \"physical\",\n      ingredients: [],\n      inventory: 100,\n      reviews: [\n        {\n          userName: \"John Doe\",\n          title: \"Great product!\",\n          comment: \"I really enjoyed using this product. Highly recommend it!\",\n        },\n        {\n          userName: \"Jane Smith\",\n          title: \"Good value for money\",\n          comment: \"This product offers great value for the price.\",\n        },\n      ],\n      rating: [5, 4, 4, 5],\n      size: \"Medium\",\n      sizes: [\"Small\", \"Medium\", \"Large\"],\n      weight: 1.5,\n      year_made: 2023,\n    }\n  \n  ]\n    \n ","import { StyleSheet } from \"react-native\";\nimport React, { useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Stack } from \"expo-router\";\n// import { useMankindProduct } from \"@/contexts/MankindProductContext\";\n\nexport const CoreLayout = () => {\n  const { authState } = useAuth();\n\n  if (authState.authenticated) {\n    return (\n      <Stack\n        screenOptions={{\n          headerShown: false, // Hide headers globally\n        }}\n      >\n        <Stack.Screen name=\"(tabs)\" options={{}} />\n        <Stack.Screen name=\"modal\" options={{ presentation: \"modal\" }} />\n        <Stack.Screen name=\"privacy-policy\" options={{ presentation: \"modal\" }} />\n        <Stack.Screen name=\"terms-of-use\" options={{ presentation: \"modal\" }} />\n        <Stack.Screen name=\"cookies-policy\" options={{ presentation: \"modal\" }} />\n      </Stack>\n    );\n  } else {\n    return (\n      <Stack\n        screenOptions={{\n          headerShown: false, // Hide headers globally\n        }}\n      >\n        <Stack.Screen\n          name=\"(auth)\"\n          options={{\n            presentation: \"fullScreenModal\", // Full-screen modal presentation\n          }}\n        />\n       \n      </Stack>\n    );\n  }\n};\n\nexport default CoreLayout;\n\nconst styles = StyleSheet.create({});\n","import { CollectionModelProps } from '../models/CollectionModelProps';\nimport { TOKEN_KEY } from '../contexts/AuthContext';\nimport { createFetchClient } from '../utils/createFetchClient';\nimport { BASE_URL } from '@/utils/api';\n\n// Setup the axios instance for collection API\nconst collectionsApi = createFetchClient(\n  BASE_URL,\n  {\n    tableName: 'prof-website-collection-table',\n    showFilteredItems: 'true',\n  },\n  {\n    'Content-Type': 'application/json',\n  }\n);\n\n\n// GET ALL \nexport async function getCollectionsApi(storeID: string, email: string) {\n  try {\n    const response = await collectionsApi.get('/collections', {\n      params: {\n        store_id: storeID,\n        email: email,\n      },\n      headers: {\n        Authorization: TOKEN_KEY,\n        'Content-Type': 'application/json',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching collections:', error);\n    throw error;\n  }\n}\n\n\n// GET SINGLE ITEM\nexport async function getCollectionApi(id: any) {\n  try {\n    const response = await collectionsApi.get(`/collection`, {\n      params: { id },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching collection:', error);\n    throw error;\n  }\n}\n\n\n// POST - Create / easy update\nexport const postCollectionApi = async (collection: CollectionModelProps, storeID: string, email: string, token: string) => {\n  return await collectionsApi.post(`/collection`, collection, {\n    params: { \n      store_id: storeID,\n      email: email,\n    },\n    headers: { \n      Authorization: token,\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\n\n// UPDATE\nexport const updateCollectionApi = async (collection: CollectionModelProps) => {\n  return await collectionsApi.put(`/collection?id=${collection.id}`, collection);\n};\n\n// DELETE\nexport const deleteCollectionApi = async (id: any) => {\n  return await collectionsApi.delete(`/collection`, {\n    params: { id },\n  });\n};\n\n\n\n\n\n\n\n\n\n\n\n// import axios, { AxiosError } from 'axios';\n// // import { BASE_URL } from '../utils/api';\n// // import { CONSTANTS } from '../utils/constants';\n// import { CollectionModelProps } from '../models/CollectionModelProps';\n// import { BASE_URL } from '../utils/api';\n// // import { CollectionModelProps } from '../models/CollectionModelProps';\n\n\n//   const collectionsApi = axios.create({\n//     baseURL: BASE_URL,\n//     headers: {\n//         Authorization: \"token\",\n//         'Content-Type': 'application/json',\n//     },\n//     params: {\n//       tableName: 'prof-website-collection-table', \n//       showFilteredItems: true\n//     },\n//   });\n\n\n\n//   export const getCollectionsApi = async (storeID: string, email: string) => {\n//     return await collectionsApi.get(`/collections`, {\n//       params: {\n//         store_id: storeID,\n//         email: email // \"\", // user?.email ?? \"\",\n    \n//       },\n//     });\n//   };\n\n\n  \n    \n//   // export const getClientCollections = async (storeID: string, email: string) => {\n//   //   return await collectionsApi.get(`/collections`, {\n//   //     params: {\n//   //       store_id: storeID, // CONSTANTS.store_id,// storeID,\n//   //       email: email,\n//   //     },\n  \n//   //   });\n//   // };\n  \n\n\n// export const getCollectionApi = async (id: any) => {\n//   return await collectionsApi.get(`/collection?id=${id}`);\n// };\n\n\n\n\n\n// // export const postCollection = async (collection: CollectionModelProps) => {\n// //   return await collectionsApi.post(`/collection`, collection);\n// // };\n\n\n// export const postCollectionApi = async (collection: CollectionModelProps, storeID: string, email: string, token: string) => {\n//   console.log(`email:::::::: ${email}`)\n  \n//   return await collectionsApi.post(`/collection`, collection, {\n//     params: { \n//       store_id: storeID, // The store ID as a query parameter\n//       email: email,      // The email as a query parameter\n//     },\n//     headers: { \n//       Authorization: token ,\n//       'Content-Type': 'application/json',\n\n    \n//     },\n// });\n// };\n\n\n\n// export const postClientCollectionApi = async (collection: CollectionModelProps) => {\n//   return await collectionsApi.post(`/collection`, collection, {\n//     params: {\n//       store_id: collection.store_id,\n//       // email: \"\", // user?.email ?? \"\",\n//     }\n//   });\n\n// };\n\n\n\n\n// export const updateCollectionApi = async (collection: CollectionModelProps) => {\n//   return await collectionsApi.patch(`/collection?id=${collection.id}`, collection);\n// };\n\n// export const deleteCollectionApi = async ({ id }: { id: any }) => {\n//   console.log(id);\n//   return await collectionsApi.delete(`/collection?id=${id}`, id);\n// };\n\n\n// export default collectionsApi;\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\nimport { CollectionModelProps } from \"../models/CollectionModelProps\";\nimport { getCollectionsApi, postCollectionApi, updateCollectionApi, deleteCollectionApi } from \"../api/collectionsApi\";\nimport { useAuth } from \"./AuthContext\";\nimport { Alert } from \"react-native\";\nimport { router } from \"expo-router\";\n// import MyAlert from \"@/components/interfaces/MyAlert\";\n\ninterface CollectionContextProps {\n  collections: CollectionModelProps[];\n  addCollection: (collection: CollectionModelProps) => Promise<void>;\n  removeCollection: (collectionId: string) => Promise<void>;\n  updateCollection: (collection: CollectionModelProps) => Promise<void>;\n  getClientCollections: () => void;\n  selectedCollection: CollectionModelProps | null;\n  selectCollection: (collection: CollectionModelProps) => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const CollectionContext = createContext<CollectionContextProps | undefined>(undefined);\n\nexport const useClientCollection = () => {\n  const context = useContext(CollectionContext);\n  if (!context) {\n    throw new Error(\"useClientCollection must be used within an CollectionProvider\");\n  }\n  return context;\n};\n\n\nexport const CollectionProvider = ({ children }: { children: ReactNode }) => {\n  const { authState } = useAuth();\n  const [collections, setCollections] = useState<CollectionModelProps[]>([]);\n  const [selectedCollection, setSelectedCollection] = useState<CollectionModelProps | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n\n  const addCollection = async (collection: CollectionModelProps) => {\n    if (!authState?.user) return;\n\n    const storeID = authState.user.store_owner_id || '';\n    const email = authState.user.email || '';\n    const token = authState?.token || \"\"\n\n    setIsLoading(true);\n    try {\n      await postCollectionApi(collection, storeID, email, token );\n      setCollections((prevCollections) => [...prevCollections, collection]);\n      console.log(\"collection added\", collection );\n\n      // change fix\n      router.push('/')\n\n    } catch (error: any) {\n      console.error(\"Failed to add collection:\", error.response?.data );\n      \n\n      // <MyAlert\n      // title=\"Collection not Created\"\n      // message=\"You are missing information. Please update your store.\"\n      // onCancelPress={() => console.log(\"Cancel Pressed\")}\n      // onUpdatePress={() => router.push('/store')}\n      // />   \n      setError(error.response?.data || \"Failed to add collection. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const removeCollection = async (collectionId: string) => {\n    setIsLoading(true);\n    try {\n      await deleteCollectionApi({ id: collectionId });\n      setCollections((prevCollections) => prevCollections.filter(collection => collection.id !== collectionId));\n    } catch (error: any) {\n      console.error(\"Failed to remove collection:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to remove collection. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateCollection = async (collection: CollectionModelProps) => {\n    setIsLoading(true);\n    try {\n      await updateCollection(collection);\n      setCollections((prevCollections) => prevCollections.map(o => o.id === collection.id ? collection : o));\n    } catch (error: any) {\n      console.error(\"Failed to update collection:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to update collection. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getClientCollections = async () => {\n    if (!authState?.user) return;\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const email = authState.user.email || '';\n      const store_owner_id = authState.user.store_owner_id || '';\n\n      const response = await getCollectionsApi(store_owner_id, email);\n      const fetchedCollections = response.data;\n      setCollections(fetchedCollections);\n    } catch (error: any) {\n      console.error(\"Failed to fetch client collections:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to fetch collections. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectCollection = (collection: CollectionModelProps) => {\n    setSelectedCollection(collection);\n  };\n\n  return (\n    <CollectionContext.Provider \n      value={{ \n        collections, \n        addCollection, \n        removeCollection, \n        updateCollection, \n        getClientCollections, \n        selectedCollection, \n        selectCollection, \n        isLoading, \n        error \n      }}\n    >\n      {children}\n    </CollectionContext.Provider>\n  );\n};\n\n\n","import { OrderModelProps } from '../models/OrderModelProps';\nimport { TOKEN_KEY } from '../contexts/AuthContext';\nimport { createFetchClient } from '../utils/createFetchClient';\nimport { BASE_URL } from '@/utils/api';\n\n// Setup the  instance for order API\nconst ordersApi = createFetchClient(\n  BASE_URL,\n  {\n    tableName: 'prof-website-order-table',\n    showFilteredItems: 'true',\n  },\n  {\n    'Content-Type': 'application/json',\n  }\n);\n\n\n// GET ALL \nexport async function getOrdersApi(storeID: string, email: string) {\n  try {\n    const response = await ordersApi.get('/orders', {\n      params: {\n        store_id: storeID,\n        email: email,\n      },\n      headers: {\n        Authorization: TOKEN_KEY,\n        'Content-Type': 'application/json',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    throw error;\n  }\n}\n\n\n// GET SINGLE ITEM\nexport async function getOrderApi(id: any) {\n  try {\n    const response = await ordersApi.get(`/order`, {\n      params: { id },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching order:', error);\n    throw error;\n  }\n}\n\n\n// POST - Create / easy update\nexport const postOrderApi = async (order: OrderModelProps, storeID: string, email: string, token: string) => {\n  return await ordersApi.post(`/order`, order, {\n    params: { \n      store_id: storeID,\n      email: email,\n    },\n    headers: { \n      Authorization: token,\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\n\n// UPDATE\nexport const updateOrderApi = async (order: OrderModelProps) => {\n  return await ordersApi.put(`/order?id=${order.id}`, order);\n};\n\n// DELETE\nexport const deleteOrderApi = async (id: any) => {\n  return await ordersApi.delete(`/order`, {\n    params: { id },\n  });\n};\n\n\n\n\n\n\n\n\n\n\n// // import { BASE_URL } from '../utils/api';\n// // import { CONSTANTS } from '../utils/constants';\n// import { OrderModelProps } from '../models/OrderModelProps';\n// import { TOKEN_KEY } from '../contexts/AuthContext';\n// import { UserProps } from '../models/UserProps';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\n// // import { BASE_URL } from '../utils/api';\n// // import { CONSTANTS } from '../utils/constants';\n// // import { OrderModelProps } from '../models/OrderModelProps';\n\n\n//   const ordersApi = axios.create({\n//     baseURL: BASE_URL,\n//     // headers: {\n//     //    // Authorization: TOKEN_KEY,\n//     //     'Content-Type': 'application/json',\n//     // },\n//     params: {\n//       store_id: CONSTANTS.store_id,\n//       // email: \"\", // user?.email ?? \"\",\n//       tableName: 'prof-website-order-table', \n//       showFilteredItems: true\n//     },\n//   });\n\n\n\n//   export const getOrdersApi = async (storeID: string, email: string) => {\n//     return await ordersApi.get(`/orders`, {\n//       params: { \n//         store_id: storeID, // CONSTANTS.store_id,// storeID,\n//         email: email,\n//       },\n//       headers: { \n//         Authorization: TOKEN_KEY ,\n//         'Content-Type': 'application/json',\n\n      \n//       },\n\n//     });\n   \n//   };\n  \n\n// export const getOrderApi = async (id: any) => {\n//   return await ordersApi.get(`/order?id=${id}`);\n// };\n\n\n// // export const getOrders = async () => {\n// //     return await ordersApi.get(`/orders`);\n// //   };\n\n\n\n\n\n// // export const getClientOrders = async (storeID: string, email: string) => {\n// //   return await ordersApi.get(`/orders`, {\n// //     params: {\n// //       store_id: storeID, // CONSTANTS.store_id,// storeID,\n// //       email: email,\n// //     },\n\n// //   });\n// // };\n\n\n\n\n\n\n// export const postOrderApi = async (order: OrderModelProps, storeID: string, email: string, token: string) => {\n//   console.log(`email:::::::: ${email}`)\n  \n//   return await ordersApi.post(`/order`, order, {\n//     params: { \n//       store_id: storeID, // The store ID as a query parameter\n//       email: email,      // The email as a query parameter\n//     },\n//     headers: { \n//       Authorization: token ,\n//       'Content-Type': 'application/json',\n\n    \n//     },\n// });\n// };\n\n\n\n// export const updateOrderApi = async (order: OrderModelProps) => {\n//   return await ordersApi.patch(`/order?id=${order.id}`, order);\n// };\n\n// export const deleteOrderApi = async ({ id }: { id: any }) => {\n//   console.log(id);\n//   return await ordersApi.delete(`/order?id=${id}`, id);\n// };\n\n\n// export default ordersApi;\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\nimport { OrderModelProps } from \"../models/OrderModelProps\";\nimport { getOrdersApi, postOrderApi, updateOrderApi, deleteOrderApi } from \"../api/ordersApi\";\nimport { useAuth } from \"./AuthContext\";\nimport { Alert } from \"react-native\";\nimport { router } from \"expo-router\";\n// import MyAlert from \"@/components/interfaces/MyAlert\";\n\ninterface OrderContextProps {\n  orders: OrderModelProps[];\n  addOrder: (order: OrderModelProps) => Promise<void>;\n  removeOrder: (orderId: string) => Promise<void>;\n  updateOrder: (order: OrderModelProps) => Promise<void>;\n  getClientOrders: () => void;\n  selectedOrder: OrderModelProps | null;\n  selectOrder: (order: OrderModelProps) => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const OrderContext = createContext<OrderContextProps | undefined>(undefined);\n\nexport const useClientOrder = () => {\n  const context = useContext(OrderContext);\n  if (!context) {\n    throw new Error(\"useClientOrder must be used within an OrderProvider\");\n  }\n  return context;\n};\n\nexport const OrderProvider = ({ children }: { children: ReactNode }) => {\n  const { authState } = useAuth();\n  const [orders, setOrders] = useState<OrderModelProps[]>([]);\n  const [selectedOrder, setSelectedOrder] = useState<OrderModelProps | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // useEffect(() => {\n  //   if (authState?.token) {\n  //     getClientOrders(); // Initial load of orders\n  //   }\n  // }, [authState?.token]);\n\n  const addOrder = async (order: OrderModelProps) => {\n    if (!authState?.user) return;\n\n    const storeID = authState.user.store_owner_id || '';\n    const email = authState.user.email || '';\n    const token = authState?.token || \"\"\n\n    setIsLoading(true);\n    try {\n      await postOrderApi(order, storeID, email, token );\n      setOrders((prevOrders) => [...prevOrders, order]);\n      console.log(\"order added\", order );\n\n      // change fix\n      router.push('/')\n\n    } catch (error: any) {\n      console.error(\"Failed to add order:\", error.response?.data );\n      \n\n      // <MyAlert\n      // title=\"Order not Created\"\n      // message=\"You are missing information. Please update your store.\"\n      // onCancelPress={() => console.log(\"Cancel Pressed\")}\n      // onUpdatePress={() => router.push('/store')}\n      // />   \n      setError(error.response?.data || \"Failed to add order. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const removeOrder = async (orderId: string) => {\n    setIsLoading(true);\n    try {\n      await deleteOrderApi({ id: orderId });\n      setOrders((prevOrders) => prevOrders.filter(order => order.id !== orderId));\n    } catch (error: any) {\n      console.error(\"Failed to remove order:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to remove order. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateOrder = async (order: OrderModelProps) => {\n    setIsLoading(true);\n    try {\n      await updateOrder(order);\n      setOrders((prevOrders) => prevOrders.map(o => o.id === order.id ? order : o));\n    } catch (error: any) {\n      console.error(\"Failed to update order:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to update order. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getClientOrders = async () => {\n    if (!authState?.user) return;\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const email = authState.user.email || '';\n      const store_owner_id = authState.user.store_owner_id || '';\n\n      const response = await getOrdersApi(store_owner_id, email);\n      const fetchedOrders = response.data;\n      setOrders(fetchedOrders);\n    } catch (error: any) {\n      console.error(\"Failed to fetch client orders:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to fetch orders. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectOrder = (order: OrderModelProps) => {\n    setSelectedOrder(order);\n  };\n\n  return (\n    <OrderContext.Provider \n      value={{ \n        orders, \n        addOrder, \n        removeOrder, \n        updateOrder, \n        getClientOrders, \n        selectedOrder, \n        selectOrder, \n        isLoading, \n        error \n      }}\n    >\n      {children}\n    </OrderContext.Provider>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { AuthProvider, useAuth } from '../contexts/AuthContext';\nimport { ThemeProvider, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { useColorScheme } from 'react-native';\nimport CoreLayout from './CoreLayout';\nimport { CartProvider } from '@/contexts/CartContext';\nimport { ClientStoreProvider } from '@/contexts/ClientStoreContext';\nimport { CollectionProvider } from '@/contexts/CollectionContext';\nimport { ClientProductProvider } from '@/contexts/ClientProductContext';\nimport { OrderProvider } from '@/contexts/OrderContext';\n\n const AppProviders = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <AuthProvider>\n      <CartProvider>\n        <ClientStoreProvider>\n          <CollectionProvider>\n            <ClientProductProvider>\n              <OrderProvider>\n                {children}\n              </OrderProvider>\n            </ClientProductProvider>\n          </CollectionProvider>\n        </ClientStoreProvider>\n      </CartProvider>\n    </AuthProvider>\n  );\n};\n\n\nexport const RootLayout = () => {\n  // const { authState } = useAuth(); // DO NOT ADD HERE\n\n  const colorScheme = useColorScheme();\n  const theme = colorScheme === 'dark' ? DarkTheme : DefaultTheme;\n\n\n  return (\n    <AppProviders>\n      <ThemeProvider value={theme}>\n        <CoreLayout />\n      </ThemeProvider>\n    </AppProviders>\n  );\n}\n\n\nexport default RootLayout;\n","// This function is web-only as native doesn't currently support server (or build-time) rendering.\nexport function useClientOnlyValue<S, C>(server: S, client: C): S | C {\n  return client;\n}\n","import React from 'react';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { Link, Tabs } from 'expo-router';\nimport { Pressable, useColorScheme } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons'\nimport { COLORS } from '../utils/theme';\nimport { useClientOnlyValue } from '../hooks/useClientOnlyValue';\n\n// You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={28} style={{ marginBottom: -3 }} {...props} />;\n}\n\nexport  function TabLayout() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <Tabs\n      screenOptions={{\n        tabBarActiveTintColor: COLORS[colorScheme ?? 'light'].tint,\n        // Disable the static render of the header on web\n        // to prevent a hydration error in React Navigation v6.\n        headerShown: useClientOnlyValue(false, true),\n      }}>\n      <Tabs.Screen\n        name=\"(home)\"\n        options={{\n          title: 'Home',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"square\" color={color} />,\n          headerShown: false,\n          // headerRight: () => (\n          //   <Link href=\"/modal\" asChild>\n          //     <Pressable>\n          //       {({ pressed }) => (\n          //         <FontAwesome\n          //           name=\"info-circle\"\n          //           size={25}\n          //           color={Colors[colorScheme ?? 'light'].text}\n          //           style={{ marginRight: 15, opacity: pressed ? 0.5 : 1 }}\n          //         />\n          //       )}\n          //     </Pressable>\n          //   </Link>\n          // ),\n        }}\n      />\n    \n    \n       <Tabs.Screen\n        name=\"collections\"\n        options={{\n          title: 'Collections',\n          // headerShown: false,\n\n          tabBarIcon : ({size, color }) => <Ionicons name='newspaper' size={size} color={color} />\n        }}\n      />\n       <Tabs.Screen\n        name=\"cart\"\n        options={{\n          title: 'Cart',\n          // headerShown: false,\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"shopping-cart\" color={color} />,\n      \n        }}\n      />\n        <Tabs.Screen\n        name=\"(settings)\"\n        options={{\n          title: 'Settings',\n          headerShown: false,\n\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"gear\" color={color} />,\n        }}\n      />\n    </Tabs>\n  );\n}\n","import { StyleSheet } from \"react-native\";\nimport React, { useEffect } from \"react\";\n// import { useAuth } from \"@/contexts/AuthContext\";\nimport { Stack } from \"expo-router\";\n// import { useMankindProduct } from \"@/contexts/MankindProductContext\";\n\nexport const AuthLayout = () => {\n  return (\n      <Stack\n        screenOptions={{\n          headerShown: false, // Hide headers globally\n        }}\n      >\n        <Stack.Screen\n          name=\"welcome\"\n          options={{\n            presentation: \"fullScreenModal\", // Full-screen modal presentation\n          }}\n        />\n        <Stack.Screen\n          name=\"login\"\n          options={{\n            presentation: \"fullScreenModal\", // Full-screen modal presentation\n          }}\n        />\n        <Stack.Screen\n          name=\"register\"\n          options={{\n            presentation: \"fullScreenModal\", // Full-screen modal presentation\n          }}\n        />\n      </Stack>\n    );\n\n};\n\nexport default AuthLayout;\n\nconst styles = StyleSheet.create({});\n","// import { MankindProductModelProps } from '../models/MankindProductModelProps';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport { TOKEN_KEY } from '../contexts/AuthContext';\nimport { createFetchClient } from '../utils/createFetchClient';\nimport { BASE_URL } from '@/utils/api';\n\n// Setup the axios instance for product API\nconst productsApi = createFetchClient(\n  BASE_URL,\n  {\n    tableName: 'prof-website-product-table',\n    showFilteredItems: 'true',\n  },\n  {\n    'Content-Type': 'application/json',\n  }\n);\n\n\n// GET ALL \nexport async function getMankindProductsApi(storeID: string, email: string) {\n  try {\n    const response = await productsApi.get('/products', {\n      params: {\n        store_id: storeID,\n        email: email,\n      },\n      headers: {\n        Authorization: TOKEN_KEY,\n        'Content-Type': 'application/json',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error;\n  }\n}\n\n\n// GET SINGLE ITEM\nexport async function getMankindProductApi(id: any) {\n  try {\n    const response = await productsApi.get(`/product`, {\n      params: { id },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching product:', error);\n    throw error;\n  }\n}\n\n\n// POST - Create / easy update\nexport const postMankindProductApi = async (product: ProductModelProps, storeID: string, email: string, token: string) => {\n  return await productsApi.post(`/product`, product, {\n    params: { \n      store_id: storeID,\n      email: email,\n    },\n    headers: { \n      Authorization: token,\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\n\n// UPDATE\nexport const updateMankindProductApi = async (product: ProductModelProps) => {\n  return await productsApi.put(`/product?id=${product.id}`, product);\n};\n\n// DELETE\nexport const deleteMankindProductApi = async (id: any) => {\n  return await productsApi.delete(`/product`, {\n    params: { id },\n  });\n};\n\n\n\n\n\n\n\n\n// import axios, { AxiosError } from 'axios';\n// // import { BASE_URL } from '../utils/api';\n// // import { CONSTANTS } from '../utils/constants';\n// import { MankindProductModelProps } from '../models/MankindProductModelProps';\n// import { TOKEN_KEY } from '../contexts/AuthContext';\n// import { UserProps } from '../models/UserProps';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\n// // import { BASE_URL } from '../utils/api';\n// // import { CONSTANTS } from '../utils/constants';\n// // import { MankindProductModelProps } from '../models/MankindProductModelProps';\n\n\n//   const mankindMankindProductsApi = axios.create({\n//     baseURL: BASE_URL,\n//     headers: {\n//         Authorization: TOKEN_KEY,\n//         'Content-Type': 'application/json',\n//     },\n//     params: {\n//       store_id: CONSTANTS.store_id,\n//       // email: \"\", // user?.email ?? \"\",\n//       tableName: 'prof-website-product-table', \n//       showFilteredItems: true\n//     },\n//   });\n\n\n\n//   export const getMankindMankindProductsApi = async (storeID: string, email: string) => {\n//     return await mankindMankindProductsApi.get(`/products`, {\n//       params: { \n//         store_id: storeID, // CONSTANTS.store_id,// storeID,\n//         email: email,\n//       },\n//       headers: { Authorization: TOKEN_KEY },\n//     });\n   \n//   };\n  \n\n// export const getMankindMankindProductApi = async (id: any) => {\n//   return await mankindMankindProductsApi.get(`/product?id=${id}`);\n// };\n\n\n\n// export const postMankindMankindProductApi = async (product: MankindProductModelProps) => {\n//   return await mankindMankindProductsApi.post(`/product`, product);\n// };\n\n// export const updateMankindMankindProductApi = async (product: MankindProductModelProps) => {\n//   return await mankindMankindProductsApi.patch(`/product?id=${product.id}`, product);\n// };\n\n// export const deleteMankindMankindProductApi = async ({ id }: { id: any }) => {\n//   console.log(id);\n//   return await mankindMankindProductsApi.delete(`/product?id=${id}`, id);\n// };\n\n\n// export default mankindMankindProductsApi;\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\nimport { ProductModelProps } from \"../models/ProductModelProps\";\n// import { getMankindProducts as gmP } from \"../api/mankindProductApi\";\nimport { CONSTANTS } from \"../utils/constants\";\nimport { getMankindProductsApi } from \"@/api/mankindProductApi\";\n\ninterface ProductContextProps {\n  products: ProductModelProps[];\n  addProduct: (product: ProductModelProps) => void;\n  removeProduct: (productId: string) => void;\n  getMankindProducts: () => void;\n  selectedProduct: ProductModelProps | null;\n  selectProduct: (product: ProductModelProps) => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport const MankindProductContext = createContext<ProductContextProps | undefined>(undefined);\n\nexport const useMankindProduct = () => {\n  const context = useContext(MankindProductContext);\n  if (!context) {\n    throw new Error(\"useMankindProduct must be used within a MankindProductProvider\");\n  }\n  return context;\n};\n\nexport const MankindProductProvider = ({ children }: { children: ReactNode }) => {\n  const [products, setProducts] = useState<ProductModelProps[]>([]);\n  const [selectedProduct, setSelectedProduct] = useState<ProductModelProps | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    getMankindProducts(); // Initial load of products\n  }, []);\n\n  const addProduct = (product: ProductModelProps) => {\n    setProducts((prevProducts) => [...prevProducts, product]);\n  };\n\n  const removeProduct = (productId: string) => {\n    setProducts((prevProducts) => prevProducts.filter(product => product.id !== productId));\n  };\n\n  const getMankindProducts = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const email = \"\"; // Replace with logic to get the current user's email\n      const response = await getMankindProductsApi(CONSTANTS.mankind_store_id, email);\n      const fetchedProducts = response.data; // Extract the data from the  response\n      setProducts(fetchedProducts);\n    } catch (error) {\n      console.error(\"Failed to fetch mankind products:\", error);\n      setError(\"Failed to fetch products. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectProduct = (product: ProductModelProps) => {\n    setSelectedProduct(product);\n  };\n\n  return (\n    <MankindProductContext.Provider \n      value={{ \n        products, \n        addProduct, \n        removeProduct, \n        getMankindProducts, \n        selectedProduct, \n        selectProduct, \n        isLoading, \n        error \n      }}\n    >\n      {children}\n    </MankindProductContext.Provider>\n  );\n};\n","// import { MankindStoreModelProps } from '../models/MankindStoreModelProps';\nimport { StoreModelProps } from '@/models/StoreModelProps';\nimport { TOKEN_KEY } from '../contexts/AuthContext';\nimport { createFetchClient } from '../utils/createFetchClient';\nimport { BASE_URL } from '@/utils/api';\n\n// Setup the axios instance for mankindStore API\nconst mankindStoresApi = createFetchClient(\n  BASE_URL,\n  {\n    tableName: 'prof-website-mankindStore-table',\n    showFilteredItems: 'true',\n  },\n  {\n    'Content-Type': 'application/json',\n  }\n);\n\n\n// GET ALL \nexport async function getMankindStoresApi(storeID: string, email: string) {\n  try {\n    const response = await mankindStoresApi.get('/mankindStores', {\n      params: {\n        store_id: storeID,\n        email: email,\n      },\n      headers: {\n        Authorization: TOKEN_KEY,\n        'Content-Type': 'application/json',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching mankindStores:', error);\n    throw error;\n  }\n}\n\n\n// GET SINGLE ITEM\nexport async function getMankindStoreApi(id: any) {\n  try {\n    const response = await mankindStoresApi.get(`/mankindStore`, {\n      params: { id },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching mankindStore:', error);\n    throw error;\n  }\n}\n\n\n// POST - Create / easy update\nexport const postMankindStoreApi = async (mankindStore: StoreModelProps, storeID: string, email: string, token: string) => {\n  return await mankindStoresApi.post(`/mankindStore`, mankindStore, {\n    params: { \n      store_id: storeID,\n      email: email,\n    },\n    headers: { \n      Authorization: token,\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\n\n// UPDATE\nexport const updateMankindStoreApi = async (mankindStore: StoreModelProps) => {\n  return await mankindStoresApi.put(`/mankindStore?id=${mankindStore.id}`, mankindStore);\n};\n\n// DELETE\nexport const deleteMankindStoreApi = async (id: any) => {\n  return await mankindStoresApi.delete(`/mankindStore`, {\n    params: { id },\n  });\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // import { getUserCookie, getUserToken } from '../config/cookieUtils';\n// // import { API_ID, AWS_BASE_URL, BASE_URL } from '../utils/api';\n// import axios from 'axios';\n// import { StoreModelProps } from '../models/StoreModelProps';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\n\n// // import { CONSTANTS } from '../utils/constants';\n\n// // const user = getUserCookie();\n// // const token = getUserToken();\n// const mankindStoresApi = axios.create({\n//   baseURL: BASE_URL,\n//   headers: {\n//     Authorization: \"token\",\n//       'Content-Type': 'application/json',\n//   },\n//   params: {\n//     id: CONSTANTS.store_id,\n//     tableName: 'prof-website-store-table', \n//     showFilteredItems: true\n\n//     // store_id: CONSTANTS.store_id,\n//     // email: \"\", // user?.email ?? \"\",\n//     // tableName: 'prof-website-mankindStore-table', \n//     // showFilteredItems: true\n//   },\n// });\n\n// export const getMankindStoreAttributesApi = async () => {\n//   const response = await mankindStoresApi.get('/stores');\n\n//   // Get the name of attributes in the API response\n//   const attributeNames = Object.keys(response.data[0]);\n\n//   return attributeNames;\n// };\n\n// // // -----------------\n// // // GET SINGLE ITEM\n// // // -----------------\n// // export const getStore = async (store: StoreModelProps) => {\n// //   const response = await storesApi.get(`/store?id=${store.id}`, {\n// //     params: {\n// //      // id: STORE_ID,\n// //       ...store // spread the properties of `store` into the params object\n// //     }\n// //   });\n// //   console.log(response);\n// //   return response.data as StoreModelProps;\n// // };\n\n\n\n\n\n// // -----------------\n// // GET SINGLE ITEM\n// // -----------------\n// export const getMankindStoreApi = async (id: any) => {\n//   console.log('Fetching Mankind store...');\n//   const response = await mankindStoresApi.get(`/store?id=${id}`);\n  \n//   const store = response.data;\n//   // console.log('Store:', response.data);\n//   // console.log('Store:', store);\n\n//   if (store === 'undefined' || !store) {\n//     return null;\n//   } else {\n//     return store;\n//   }\n// };\n\n\n\n// // export const getStore = async (): Promise<StoreProps | null> => {\n// //   try {\n// //     console.log('Fetching store...');\n// //     //   const response = await storesApi.get(`/store?id=${id}`);\n\n// //     const response = await storesApi.get(`/store`);\n// //     console.log('Store:', response.data);\n\n// //     const store: StoreProps = response.data;\n\n// //     if (!store) {\n// //       return null;\n// //     }\n\n// //     return store;\n// //   } catch (error) {\n// //     console.error('Error fetching store:', error);\n// //     return null;\n// //   }\n// // };\n\n\n// // -------------\n// // GET ITEMS\n// // -------------\n// export const getMankindStoresApi = async () => {\n//     const response = await mankindStoresApi.get('');\n//     return response.data as StoreModelProps[]; \n//   };\n  \n// // -------------\n// // POST\n// // -------------\n// export const postMankindStoreApi = async (store: StoreModelProps) => {\n//   return await mankindStoresApi.post('/store', store);\n// };\n\n// // -------------\n// // PATCH\n// // -------------\n// export const updateMankindStoreApi = async (store: any) => {\n//   return await mankindStoresApi.patch(`/store?id=${store.id}`, store);\n// };\n\n// // -------------\n// // DELETE\n// // -------------\n// export const deleteMankindStoreApi = async ({ id }: { id: any }) => {\n//   console.log(id);\n//   return await mankindStoresApi.delete(`/store?id=${id}`, id);\n//   // return await storesApi.delete(`/store/${id}`);\n//   // D_a_r_r_i_e_n H_u_n_t_l_e_y - o_w_n_e_r\n// };\n\n// export default mankindStoresApi;\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\nimport { useAuth } from \"./AuthContext\";\nimport { StoreModelProps } from \"../models/StoreModelProps\";\nimport { getMankindStoreApi } from \"@/api/mankindStoreApi\";\n\ninterface MankindStoreContextProps {\n  store: StoreModelProps | null;\n  addStore: (store: StoreModelProps) => void;\n  removeStore: (storeId: string) => void;\n  getMankindStore: () => void;\n  selectedStore: StoreModelProps | null;\n  selectStore: (store: StoreModelProps) => void;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst MankindStoreContext = createContext<MankindStoreContextProps | undefined>(undefined);\n\nexport const useMankindStore = () => {\n  const context = useContext(MankindStoreContext);\n  if (!context) {\n    throw new Error(\"useMankindStore must be used within a MankindStoreProvider\");\n  }\n  return context;\n};\n\nexport const MankindStoreProvider = ({ children }: { children: ReactNode }) => {\n  const { authState } = useAuth();\n  const [store, setStore] = useState<StoreModelProps | null>(null);\n  const [selectedStore, setSelectedStore] = useState<StoreModelProps | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // useEffect(() => {\n  //   if (authState?.token) {\n  //     getMankindStore(); // Initial load of the store\n  //   }\n  // }, [authState?.token]);\n\n  const addStore = (newStore: StoreModelProps) => {\n    setStore(newStore);\n  };\n\n  const removeStore = () => {\n    setStore(null);\n  };\n\n  const getMankindStore = async () => {\n   // if (!authState) return;\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      const store_owner_id = authState?.user?.store_owner_id || '';\n      const response = await getMankindStoreApi(store_owner_id);\n     // const fetchedStore = response?.data ; // Assuming the API returns a single store object\n      setStore(response);\n    } catch (error: any) {\n      console.error(\"Failed to fetch mankind store:\", error.response?.data?.message || error.message);\n      setError(error.response?.data?.message || \"Failed to fetch store. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectStore = (store: StoreModelProps) => {\n    setSelectedStore(store);\n  };\n\n  return (\n    <MankindStoreContext.Provider \n      value={{ \n        store, \n        addStore, \n        removeStore, \n        getMankindStore, \n        selectedStore, \n        selectStore, \n        isLoading, \n        error \n      }}\n    >\n      {children}\n    </MankindStoreContext.Provider>\n  );\n};\n","import React, { createContext, useContext, useState, ReactNode, useEffect } from 'react';\nimport { useColorScheme } from 'react-native';\n\ntype ThemeMode = 'light' | 'dark' | 'system';\n\ninterface ThemeContextProps {\n  theme: ThemeMode;\n  setTheme: (mode: ThemeMode) => void;\n  isDarkMode: boolean;\n}\n\nexport const ThemeContext = createContext<ThemeContextProps | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }: { children: ReactNode }) => {\n  const systemColorScheme = useColorScheme();\n  const [theme, setTheme] = useState<ThemeMode>('system');\n\n  const isDarkMode = theme === 'system' ? systemColorScheme === 'dark' : theme === 'dark';\n\n  useEffect(() => {\n    setTheme(isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme, isDarkMode }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n","import * as SecureStore from 'expo-secure-store';\nimport { UserProps } from \"../models/UserProps\";\nimport { BASE_URL } from \"../utils/api\";\nimport { createFetchClient } from \"../utils/createFetchClient\";\n\n// Create a fetch client instance\nexport const authApi = createFetchClient(\n  BASE_URL,\n  {\n    tableName: 'prof-website-user-table',\n    showFilteredItems: 'true',\n  },\n  {\n    'Content-Type': 'application/json',\n  }\n);\n\n// Helper function to get the authorization token\nasync function getAuthToken() {\n  return await SecureStore.getItemAsync('your_token_key_here');\n}\n\n// API Calls\n\nexport const verify = async (user: any) => {\n  const token = await getAuthToken();\n  return await authApi.post('/verify', user, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const login = async (user: any) => {\n  const token = await getAuthToken();\n  return await authApi.post('/login', user, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const getUsersApi = async () => {\n  const token = await getAuthToken();\n  return await authApi.get('/users', {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const getClientUsersApi = async (storeID: string, email: string) => {\n  try {\n    const token = await getAuthToken();\n    const response = await authApi.get('/users', {\n      params: {\n        store_id: storeID,\n        email: email, // Pass the email parameter here\n      },\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    console.log(response);\n    return response; // Return the data from the response\n  } catch (error) {\n    console.error('Error fetching client users:', error);\n    throw error; // Rethrow the error after logging it\n  }\n};\n\nexport const updateUserApi = async (user: UserProps) => {\n  const token = await getAuthToken();\n  return await authApi.put(`/user?id=${user.id}`, user, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const deleteUserApi = async ({ id }: { id: any }) => {\n  const token = await getAuthToken();\n  console.log(id);\n  return await authApi.delete(`/user`, {\n    params: { id },\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n};\n\n\n\n\n\n\n\n\n\n\n// // import axios from \"axios\";\n// import * as SecureStore from 'expo-secure-store';\n// import { UserProps } from \"../models/UserProps\";\n// import { BASE_URL } from \"../utils/api\";\n\n// // Create an axios instance\n// export const authApi = axios.create({\n//   baseURL: BASE_URL,\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   params: {\n//     tableName: 'prof-website-user-table',\n//     showFilteredItems: true,\n//   },\n// });\n\n// // Add a request interceptor to dynamically set the Authorization header\n// authApi.interceptors.request.use(\n//   async (config) => {\n//     const token = await SecureStore.getItemAsync('your_token_key_here');\n//     if (token) {\n//       config.headers.Authorization = `Bearer ${token}`;\n//     }\n//     return config;\n//   },\n//   (error) => {\n//     return Promise.reject(error);\n//   }\n// );\n\n// // API Calls\n// export const verify = async (user: any) => {\n//   return await authApi.post('/verify', user);\n// };\n\n// export const login = async (user: any) => {\n//   return await authApi.post('/login', user);\n// };\n\n// export const getUsersApi = async () => {\n//   return await authApi.get(`/users`);\n// };\n\n// export const getClientUsersApi = async (storeID: string, email: string) => {\n//   try {\n//     const response = await authApi.get(`/users`, {\n//       params: {\n//         store_id: storeID,\n//         email: email, // Pass the email parameter here\n//       },\n//     });\n//     console.log(response.data);\n//     return response.data; // Return the data from the response\n//   } catch (error) {\n//     console.error(\"Error fetching client users:\", error);\n//     throw error; // Rethrow the error after logging it\n//   }\n// };\n\n// export const updateUserApi = async (user: UserProps) => {\n//   return await authApi.patch(`/user?id=${user.id}`, user);\n// };\n\n// export const deleteUserApi = async ({ id }: { id: any }) => {\n//   console.log(id);\n//   return await authApi.delete(`/user?id=${id}`);\n// };\n","import { CouponModelProps } from '../models/CouponModelProps';\nimport { TOKEN_KEY } from '../contexts/AuthContext';\nimport { createFetchClient } from '../utils/createFetchClient';\nimport { BASE_URL } from '@/utils/api';\n\n// Setup the axios instance for coupon API\nconst couponsApi = createFetchClient(\n  BASE_URL,\n  {\n    tableName: 'prof-website-coupon-table',\n    showFilteredItems: 'true',\n  },\n  {\n    'Content-Type': 'application/json',\n  }\n);\n\n\n// GET ALL \nexport async function getCouponsApi(storeID: string, email: string) {\n  try {\n    const response = await couponsApi.get('/coupons', {\n      params: {\n        store_id: storeID,\n        email: email,\n      },\n      headers: {\n        Authorization: TOKEN_KEY,\n        'Content-Type': 'application/json',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching coupons:', error);\n    throw error;\n  }\n}\n\n\n// GET SINGLE ITEM\nexport async function getCouponApi(id: any) {\n  try {\n    const response = await couponsApi.get(`/coupon`, {\n      params: { id },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching coupon:', error);\n    throw error;\n  }\n}\n\n\n// POST - Create / easy update\nexport const postCouponApi = async (coupon: CouponModelProps, storeID: string, email: string, token: string) => {\n  return await couponsApi.post(`/coupon`, coupon, {\n    params: { \n      store_id: storeID,\n      email: email,\n    },\n    headers: { \n      Authorization: token,\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\n\n// UPDATE\nexport const updateCouponApi = async (coupon: CouponModelProps) => {\n  return await couponsApi.put(`/coupon?id=${coupon.id}`, coupon);\n};\n\n// DELETE\nexport const deleteCouponApi = async (id: any) => {\n  return await couponsApi.delete(`/coupon`, {\n    params: { id },\n  });\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // import { getUserCookie, getUserToken } from '../config/cookieUtils';\n// // import { BASE_URL, STORE_ID } from '../utilities/constants';\n// import axios, { AxiosError } from 'axios';\n// // import { CouponModelProps } from '../models/CouponModelProps';\n// // import { BASE_URL } from '../utils/api';\n// // import { CONSTANTS } from '../utils/constants';\n// import { CouponModelProps } from '../models/CouponModelProps';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\n\n// // const token = getUserToken();\n// // const user = getUserCookie();\n\n\n//   const couponsApi = axios.create({\n//     baseURL: BASE_URL,\n//     headers: {\n//         Authorization: \"token\",\n//         'Content-Type': 'application/json',\n//     },\n//     params: {\n//       store_id: CONSTANTS.store_id,\n//       // email: \"\", // user?.email ?? \"\",\n//       tableName: 'prof-website-coupon-table', \n//       showFilteredItems: true\n//     },\n//   });\n\n// // export const getCoupons = async () => {\n// //   const response = await couponsApi.get('/coupons');\n// //   console.log('Coupons:', response.data);\n\n// //   return response.data;\n// // };\n\n \n// // export const getCoupons = async () => {\n// //   try {\n// //     const response = await couponsApi.get('/coupons');\n// //     console.log('Coupons:', response.data);\n// //     return response.data;\n// //   } catch (error) {\n// //     if (axios.isAxiosError(error)) {\n// //       const axiosError = error as AxiosError;\n// //       if (axiosError.response) {\n// //         // The request was made, and the server responded with a status code outside of the 2xx range\n// //         console.error('Status Code:', axiosError.response.status);\n// //         console.error('Response Data:', axiosError.response.data);\n// //       } else if (axiosError.request) {\n// //         // The request was made, but no response was received\n// //         console.error('No response received');\n// //       }\n// //     } else {\n// //       // Handle non-Axios errors here\n// //       // console.error('Non-Axios error:', error.message);\n// //     }\n\n// //   }\n// // };\n\n\n\n\n\n\n\n// // export const getCoupons = async () => {\n// //   const response = await couponsApi.get('/coupons', {\n// //     // params: { category: 'electronics' },\n// //     // headers: { Authorization: 'Bearer token' },\n// //   });\n// //   return response;\n// // };\n\n\n// export const getCouponsApi = async () => {\n//   return await couponsApi.get(`/coupons`);\n// };\n\n\n\n\n\n\n// export const getCouponsAttributesApi = async () => {\n//     const response = await couponsApi.get('/coupons');\n//       const attributeNames = Object.keys(response.data[0]);\n  \n//     return attributeNames;\n//   };\n  \n\n// export const getCouponApi = async (id: any) => {\n//   return await couponsApi.get(`/coupon?id=${id}`);\n// };\n\n// export const postCouponApi = async (coupon: CouponModelProps) => {\n//   return await couponsApi.post(`/coupon`, coupon);\n// };\n\n// export const updateCouponApi = async (coupon: CouponModelProps) => {\n//   return await couponsApi.patch(`/coupon?id=${coupon.id}`, coupon);\n// };\n\n// export const deleteCouponApi = async ({ id }: { id: any }) => {\n//   console.log(id);\n//   return await couponsApi.delete(`/coupon?id=${id}`, id);\n// };\n\n\n// export default couponsApi;\n","import { InboxModelProps } from '../models/InboxModelProps';\nimport { TOKEN_KEY } from '../contexts/AuthContext';\nimport { createFetchClient } from '../utils/createFetchClient';\nimport { BASE_URL } from '@/utils/api';\n\n// Setup the axios instance for inbox API\nconst inboxsApi = createFetchClient(\n  BASE_URL,\n  {\n    tableName: 'prof-website-inbox-table',\n    showFilteredItems: 'true',\n  },\n  {\n    'Content-Type': 'application/json',\n  }\n);\n\n\n// GET ALL \nexport async function getInboxsApi(storeID: string, email: string) {\n  try {\n    const response = await inboxsApi.get('/inboxs', {\n      params: {\n        store_id: storeID,\n        email: email,\n      },\n      headers: {\n        Authorization: TOKEN_KEY,\n        'Content-Type': 'application/json',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching inboxs:', error);\n    throw error;\n  }\n}\n\n\n// GET SINGLE ITEM\nexport async function getInboxApi(id: any) {\n  try {\n    const response = await inboxsApi.get(`/inbox`, {\n      params: { id },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching inbox:', error);\n    throw error;\n  }\n}\n\n\n// POST - Create / easy update\nexport const postInboxApi = async (inbox: InboxModelProps, storeID: string, email: string, token: string) => {\n  return await inboxsApi.post(`/inbox`, inbox, {\n    params: { \n      store_id: storeID,\n      email: email,\n    },\n    headers: { \n      Authorization: token,\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\n\n// UPDATE\nexport const updateInboxApi = async (inbox: InboxModelProps) => {\n  return await inboxsApi.put(`/inbox?id=${inbox.id}`, inbox);\n};\n\n// DELETE\nexport const deleteInboxApi = async (id: any) => {\n  return await inboxsApi.delete(`/inbox`, {\n    params: { id },\n  });\n};\n\n\n\n\n\n\n\n// // import { getUserCookie, getUserToken } from '../config/cookieUtils';\n// // import { BASE_URL, STORE_ID } from '../utilities/constants';\n// import axios, { AxiosError } from 'axios';\n// // import { InboxModelProps } from '../models/InboxModelProps';\n// // import { BASE_URL } from '../utils/api';\n// // import { CONSTANTS } from '../utils/constants';\n// import { InboxModelProps } from '../models/InboxModelProps';\n// import { BASE_URL } from '../utils/api';\n// import { CONSTANTS } from '../utils/constants';\n// // import { InboxModelProps } from '../models/InboxModelProps';\n\n// // const token = getUserToken();\n// // const user = getUserCookie();\n\n\n//   const inboxsApi = axios.create({\n//     baseURL: BASE_URL,\n//     headers: {\n//         Authorization: \"token\",\n//         'Content-Type': 'application/json',\n//     },\n//     params: {\n//       store_id: CONSTANTS.store_id,\n//       // email: \"\", // user?.email ?? \"\",\n//       tableName: 'prof-website-inbox-table', \n//       showFilteredItems: true\n//     },\n//   });\n\n// // export const getInboxs = async () => {\n// //   const response = await inboxsApi.get('/inboxs');\n// //   console.log('Inboxs:', response.data);\n\n// //   return response.data;\n// // };\n\n \n// // export const getInboxs = async () => {\n// //   try {\n// //     const response = await inboxsApi.get('/inboxs');\n// //     console.log('Inboxs:', response.data);\n// //     return response.data;\n// //   } catch (error) {\n// //     if (axios.isAxiosError(error)) {\n// //       const axiosError = error as AxiosError;\n// //       if (axiosError.response) {\n// //         // The request was made, and the server responded with a status code outside of the 2xx range\n// //         console.error('Status Code:', axiosError.response.status);\n// //         console.error('Response Data:', axiosError.response.data);\n// //       } else if (axiosError.request) {\n// //         // The request was made, but no response was received\n// //         console.error('No response received');\n// //       }\n// //     } else {\n// //       // Handle non-Axios errors here\n// //       // console.error('Non-Axios error:', error.message);\n// //     }\n\n// //   }\n// // };\n\n\n\n\n\n\n\n// // export const getInboxs = async () => {\n// //   const response = await inboxsApi.get('/inboxs', {\n// //     // params: { category: 'electronics' },\n// //     // headers: { Authorization: 'Bearer token' },\n// //   });\n// //   return response;\n// // };\n\n\n// export const getInboxsApi = async () => {\n//   return await inboxsApi.get(`/inboxs`);\n// };\n\n\n\n\n\n\n// export const getInboxsAttributesApi = async () => {\n//     const response = await inboxsApi.get('/inboxs');\n//       const attributeNames = Object.keys(response.data[0]);\n  \n//     return attributeNames;\n//   };\n  \n\n// export const getInboxApi = async (id: any) => {\n//   return await inboxsApi.get(`/inbox?id=${id}`);\n// };\n\n// export const postInboxApi = async (inbox: InboxModelProps) => {\n//   return await inboxsApi.post(`/inbox`, inbox);\n// };\n\n// export const updateInboxApi = async (inbox: InboxModelProps) => {\n//   return await inboxsApi.patch(`/inbox?id=${inbox.id}`, inbox);\n// };\n\n// export const deleteInboxApi = async ({ id }: { id: any }) => {\n//   console.log(id);\n//   return await inboxsApi.delete(`/inbox?id=${id}`, id);\n// };\n\n\n// export default inboxsApi;\n","import { ProductModelProps } from '../models/ProductModelProps';\nimport { CONSTANTS } from '../utils/constants';\nimport { BASE_URL } from '../utils/api';\nimport { createFetchClient } from '../utils/createFetchClient';\n\ninterface PaymentJsonProps  {\n  amount: number; // Example value, replace with your actual data\n  currency: string; // Example value, replace with your actual data\n  shipping_fee: number; // Example value, replace with your actual data\n  stripe_id: string; // Example value, replace with your actual data\n  app_name: string; // Example value, replace with your actual data\n}\n\n// Create a fetch client instance for payment API\nconst paymentApi = createFetchClient(\n  BASE_URL,\n  {\n    store_id: CONSTANTS.store_id,\n    email: \"\", // user?.email ?? \"\",\n    tableName: 'prof-website-payment-table',\n    stripe_id: \"acct_1NVCh3JEHBX7gOQA\", // Example value, replace with your actual data\n    showFilteredItems: 'true',\n  },\n  {\n    Authorization: \"token\", // Replace with actual token logic if needed\n    'Content-Type': 'application/json',\n  }\n);\n\n// API Calls\n\n// GET payment data\nexport const getpayment = async () => {\n  return await paymentApi.get(`/payment`);\n};\n\n// CREATE Payment Intent\nexport const createPaymentIntent = async (paymentJsonProps: PaymentJsonProps) => {\n  try {\n    const response = await paymentApi.post('/create-payment-intent', paymentJsonProps);\n    return response;\n  } catch (error) {\n    console.error('Error creating payment intent:', error);\n    throw error;\n  }\n};\n\n// Show Stripe Hosted Page\nexport const showStripeHostedPage = async (priceID: string) => {\n  try {\n    const response = await paymentApi.post('/pay/stripe-hosted-page', { priceID });\n    return response;\n  } catch (error: any) {\n    console.error('Error:', error.message);\n    throw error;\n  }\n};\n\nexport default paymentApi;\n\n\n\n\n\n\n// // import { BASE_URL } from '../utils/api';\n// import { ProductModelProps } from '../models/ProductModelProps';\n// import { CONSTANTS } from '../utils/constants';\n// import { BASE_URL } from '../utils/api';\n// // import { BASE_URL } from '../utils/api';\n// // import { CONSTANTS } from '../utils/constants';\n// // import { CONSTANTS } from '../utils/constants';\n\n\n// interface PaymentJsonProps  {\n//   amount: number, // Example value, replace with your actual data\n//   currency: string, // Example value, replace with your actual data\n//   shipping_fee: number, // Example value, replace with your actual data\n//   stripe_id: string, // Example value, replace with your actual data\n//   app_name: string // Example value, replace with your actual data\n// };\n\n\n//   const paymentApi = axios.create({\n//     baseURL: BASE_URL,\n//     headers: {\n//         Authorization: \"token\",\n//         'Content-Type': 'application/json',\n//     },\n//     params: {\n//       store_id: CONSTANTS.store_id,\n//       email: \"\", // user?.email ?? \"\",\n//       tableName: 'prof-website-payment-table', \n//       stripe_id: \"acct_1NVCh3JEHBX7gOQA\", // Example value, replace with your actual data\n//       showFilteredItems: true\n//     },\n//   });\n\n\n// export const getpayment = async () => {\n//   return await paymentApi.get(`/payment`);\n// };\n\n\n\n// export const createPaymentIntent = async (paymentJsonProps: PaymentJsonProps) => {\n//   try {\n//     const response = await paymentApi.post('/create-payment-intent', paymentJsonProps);\n//     return response.data; // Assuming you want to return the response data\n//   } catch (error) {\n//     throw error; // Rethrow the error to handle it outside\n//   }\n// };\n\n\n// export const showStripeHostedPage = async (priceID: string) => {\n//   try {\n//     const response = await paymentApi.post('/pay/stripe-hosted-page', { priceID });\n//     return response.data; // Assuming you want to return the full response data\n//   } catch (error : any) {\n//     console.error('Error:', error.response?.data || error.message);\n//     // console.log(error.response.data)\n\n//     throw error.response?.data || error.message; // Rethrow the error with more context\n//   }\n// };\n\n\n// export default paymentApi;","import ProductCardV2 from \"@/components/card/ProductCardV2\";\nimport ProductDetailsPageVTwo from \"@/components/pages/product-details/ProductDetailsPageVTwo\";\n// prof-website-slice-table\n\n\n// Pages are made up a combination of slices\nexport const PAGES  = {\n    onboarding_Page: [ \"ProductDetailsPageVTwo\" ],\n    login_Page: [ \"ProductDetailsPageVTwo\" ],\n    register_Page: [ \"ProductDetailsPageVTwo\" ],\n    products_Page:[ \"ProductDetailsPageVTwo\" ],\n    product_details_page: [ \"ProductDetailsPageVTwo\" ]\n\n\n}","// import register from \"@/app/(auth)/register\";\n\nexport const ROUTES = {\n    onboarding_Page: \"/onboarding\",\n    login: \"/login\",\n    register: \"/register\",\n    products: \"/products\"\n\n\n}","import * as SecureStore from \"expo-secure-store\";\n\n// Securely save a value with a specified key\nexport const saveSecurely = async (key: string, value: any): Promise<void> => {\n  try {\n    const jsonValue = JSON.stringify(value);\n    await SecureStore.setItemAsync(key, jsonValue);\n  } catch (error) {\n    console.error(`Error saving data for key \"${key}\":`, error);\n    throw error;\n  }\n};\n\n// Securely fetch a value for a specified key\nexport const fetchSecurely = async (key: string): Promise<any> => {\n  try {\n    const jsonValue = await SecureStore.getItemAsync(key);\n    return jsonValue != null ? JSON.parse(jsonValue) : null;\n  } catch (error) {\n    console.error(`Error fetching data for key \"${key}\":`, error);\n    throw error;\n  }\n};\n","export const formatPhoneNumber = (phoneNumberString: string) => {\n    // Remove all non-digit characters from the phone number string\n    const cleanedPhoneNumber = phoneNumberString.replace(/\\D/g, '');\n    \n    // Check if the phone number has 11 digits (including the country code)\n    const isElevenDigits = cleanedPhoneNumber.length === 11;\n\n    // Format the phone number based on the number of digits\n    let formattedPhoneNumber;\n    if (isElevenDigits) {\n        // For 11-digit phone numbers, include the country code\n        formattedPhoneNumber = cleanedPhoneNumber.replace(/(\\d{1})(\\d{3})(\\d{3})(\\d{4})/, '+$1 ($2) $3-$4');\n    } else {\n        // For other phone numbers, format into groups of 3 digits separated by hyphens\n        formattedPhoneNumber = cleanedPhoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, '($1) $2-$3');\n    }\n    \n    return formattedPhoneNumber;\n};","import { Link } from 'expo-router';\nimport * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport { Platform } from 'react-native';\n\nexport function ExternalLink(\n  props: Omit<React.ComponentProps<typeof Link>, 'href'> & { href: string }\n) {\n  return (\n    <Link\n      target=\"_blank\"\n      {...props}\n      href={props.href as never}\n      onPress={(e) => {\n        if (Platform.OS !== 'web') {\n          // Prevent the default behavior of linking to the default browser on native.\n          e.preventDefault();\n          // Open the link in an in-app browser.\n          WebBrowser.openBrowserAsync(props.href as string);\n        }\n      }}\n    />\n  );\n}\n","\n export const stripeConverter = (amountInCents: number) => {\n    // Convert dollars to cents\n    const amount = amountInCents * 100;\n    \n    // Return the amount\n    return amount;\n};\n    ","import { Link } from 'expo-router';\nimport * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport { Platform } from 'react-native';\n\nexport function ExternalLink(\n  props: Omit<React.ComponentProps<typeof Link>, 'href'> & { href: string }\n) {\n  return (\n    <Link\n      target=\"_blank\"\n      {...props}\n      href={props.href as never}\n      onPress={(e) => {\n        if (Platform.OS !== 'web') {\n          // Prevent the default behavior of linking to the default browser on native.\n          e.preventDefault();\n          // Open the link in an in-app browser.\n          WebBrowser.openBrowserAsync(props.href as string);\n        }\n      }}\n    />\n  );\n}\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\n// import Colors from '@/constants/Colors';\nimport { useColorScheme } from '../hooks/useColorScheme';\nimport { COLORS } from '@/utils/theme';\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof COLORS.light & keyof typeof COLORS.dark\n) {\n  const theme = useColorScheme() ?? 'light';\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return COLORS[theme][colorName];\n  }\n}\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","// import { Text, TextProps } from './Themed';\n\nimport { Text, TextProps } from \"./Themed\";\n\nexport function MonoText(props: TextProps) {\n  return <Text {...props} style={[props.style, { fontFamily: 'SpaceMono' }]} />;\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport { ExternalLink } from './ExternalLink';\nimport { MonoText } from './StyledText';\nimport { Text, View } from './Themed';\nimport { COLORS } from '@/utils/theme';\n\n// import Colors from '@/constants/Colors';\n\nexport default function EditScreenInfo({ path }: { path: string }) {\n  return (\n    <View>\n      <View style={styles.getStartedContainer}>\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Open up the code for this screen:\n        </Text>\n\n        <View\n          style={[styles.codeHighlightContainer, styles.homeScreenFilename]}\n          darkColor=\"rgba(255,255,255,0.05)\"\n          lightColor=\"rgba(0,0,0,0.05)\">\n          <MonoText>{path}</MonoText>\n        </View>\n\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Change any of the text, save the file, and your app will automatically update.\n        </Text>\n      </View>\n\n      <View style={styles.helpContainer}>\n        <ExternalLink\n          style={styles.helpLink}\n          href=\"https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet\">\n          <Text style={styles.helpLinkText} lightColor={COLORS.light.tint}>\n            Tap here if your app doesn't automatically update after making changes\n          </Text>\n        </ExternalLink>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    textAlign: 'center',\n  },\n});\n","import { useClientCollection } from '@/contexts/CollectionContext';\nimport { CollectionModelProps } from '@/models/CollectionModelProps';\nimport { AWS_HOLDER_IMAGE } from '@/utils/api';\nimport { router } from 'expo-router';\nimport React, { useState } from 'react';\nimport { View, Text, Image, StyleSheet, TouchableOpacity, FlatList, Dimensions } from 'react-native';\n\nconst { width, height } = Dimensions.get('window');\n\ninterface ProductProps {\n  id: number;\n  name: string;\n  price: string;\n  image: string;\n}\n\nconst products: ProductProps[] = [\n  { id: 1, name: 'Facet Table Lamp', price: '$284', image: 'https://example.com/lamp.jpg' },\n  { id: 2, name: 'Carlisle Double', price: '$583', image: 'https://example.com/cabinet.jpg' },\n  { id: 3, name: 'Sofia Footstool', price: '$495', image: 'https://example.com/footstool.jpg' },\n  { id: 4, name: 'Theodore', price: '$322', image: 'https://example.com/chair.jpg' },\n  { id: 5, name: 'Lamp 2', price: '$369', image: 'https://example.com/lamp2.jpg' },\n  { id: 6, name: 'Chair 2', price: '$423', image: 'https://example.com/chair2.jpg' },\n];\n\nconst CollectionPageVTwo = () => {\n  const { collections, selectedCollection, selectCollection, isLoading, error } = useClientCollection();\n\n  const handleProductSelect = (product: CollectionModelProps) => {\n    selectCollection(product);\n  };\n\n  const filteredProducts = selectedCollection?.title === 'All'\n    ? products\n    : products.filter(product => product.name.toLowerCase().includes(selectedCollection?.title.toLowerCase() || ''));\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={collections}\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        keyExtractor={(item) => item.id}\n        renderItem={({ item }) => (\n          <TouchableOpacity\n            style={[\n              styles.categoryButton,\n              item.id === selectedCollection?.id && styles.selectedCollectionButton\n            ]}\n            onPress={() => selectCollection(item)}\n          >\n            <Text style={[\n              styles.categoryText,\n              item.id === selectedCollection?.id && styles.selectedCollectionText\n            ]}>\n              {item.title}\n            </Text>\n          </TouchableOpacity>\n        )}\n        contentContainerStyle={styles.categoryContainer}\n        style={styles.categoryList} // Added style to control height\n      />\n\n      <View style={styles.promoContainer}>\n        <Image\n          source={{ uri: AWS_HOLDER_IMAGE }} // Replace with actual promo image URI\n          style={styles.promoImage}\n        />\n        <View style={styles.promoTextContainer}>\n          <Text style={styles.promoTitle}>Promo for first purchase</Text>\n          <Text style={styles.promoSubtitle}>Special Offers</Text>\n          <Text style={styles.promoDiscount}>40% Off Prices</Text>\n        </View>\n      </View>\n\n      <View style={styles.productListContainer}>\n        <FlatList\n          data={filteredProducts}\n          numColumns={2}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={({ item }) => (\n            <View style={styles.productCard}>\n              <TouchableOpacity onPress={() => router.push(`/products/${item.id}` as never)}>\n                <Image source={{ uri: item.image }} style={styles.productImage} />\n                <Text style={styles.productPrice}>{item.price}</Text>\n                <Text style={styles.productName}>{item.name}</Text>\n              </TouchableOpacity>\n            </View>\n          )}\n          contentContainerStyle={styles.productContainer}\n          ListEmptyComponent={<Text style={styles.emptyMessage}>No products available</Text>}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  categoryContainer: {\n    paddingVertical: 10,\n  },\n  categoryList: {\n    height: 60, // Example fixed height for category list\n  },\n  categoryButton: {\n    paddingHorizontal: 15,\n    paddingVertical: 8,\n    marginHorizontal: 5,\n    borderRadius: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  selectedCollectionButton: {\n    backgroundColor: '#000',\n  },\n  categoryText: {\n    fontSize: 16,\n    color: '#333',\n  },\n  selectedCollectionText: {\n    color: '#fff',\n  },\n  promoContainer: {\n    marginVertical: 20,\n    alignItems: 'center',\n  },\n  promoImage: {\n    width: width * 0.9,\n    height: height * 0.25,\n    borderRadius: 10,\n  },\n  promoTextContainer: {\n    marginTop: 10,\n    alignItems: 'center',\n  },\n  promoTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  promoSubtitle: {\n    fontSize: 16,\n    color: '#777',\n  },\n  promoDiscount: {\n    fontSize: 18,\n    color: '#ff0000',\n  },\n  productListContainer: {\n    flex: 1,\n    paddingHorizontal: 10,\n  },\n  productCard: {\n    flex: 1,\n    margin: 10,\n    backgroundColor: '#f9f9f9',\n    borderRadius: 10,\n    padding: 10,\n  },\n  productImage: {\n    width: '100%',\n    height: 150,\n    borderRadius: 10,\n  },\n  productPrice: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginVertical: 5,\n  },\n  productName: {\n    fontSize: 14,\n    color: '#777',\n  },\n  productContainer: {\n    paddingBottom: 20,\n  },\n  emptyMessage: {\n    textAlign: 'center',\n    fontSize: 18,\n    color: '#999',\n    marginTop: 20,\n  },\n});\n\nexport default CollectionPageVTwo;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#FFFFFF',\n//     paddingHorizontal: 10,\n//   },\n//   categoryList: {\n//     maxHeight: 50, // Limit the height of the category list to prevent it from taking too much space\n//   },\n//   categoryContainer: {\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n//   categoryButton: {\n//     marginRight: 8,\n//     paddingVertical: 5,\n//     paddingHorizontal: 12,\n//     borderWidth: 1,\n//     borderColor: '#000000',\n//     borderRadius: 15,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     height: 30, // Adjusted the height to be more compact\n//   },\n//   selectedCollectionButton: {\n//     backgroundColor: '#000000',\n//     borderColor: '#000000',\n//   },\n//   categoryText: {\n//     fontSize: 13, // Slightly smaller font for the text\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   selectedCollectionText: {\n//     color: '#FFFFFF',\n//   },\n//   promoContainer: {\n//     marginVertical: 10, // Reduced margin to bring elements closer\n//     borderRadius: 10,\n//     overflow: 'hidden', // corner radius\n//     backgroundColor: '#F5F5F5',\n//   },\n//   promoImage: {\n//     width: '100%',\n//     height: 150, // Slightly reduced height for better fit\n//     resizeMode: 'cover',\n//   },\n//   promoTextContainer: {\n//     position: 'absolute',\n//     top: 15,\n//     left: 20,\n//   },\n//   promoTitle: {\n//     fontSize: 20, // Adjusted font size\n//     fontWeight: 'bold',\n//     color: '#333333',\n//   },\n//   promoSubtitle: {\n//     fontSize: 14, // Adjusted font size\n//     color: '#666666',\n//     marginTop: 5,\n//   },\n//   promoDiscount: {\n//     fontSize: 16, // Adjusted font size\n//     color: '#FF6347',\n//     marginTop: 5,\n//   },\n//   productListContainer: {\n//     flex: 1,\n//   },\n//   productContainer: {\n//     paddingBottom: 20,\n//   },\n//   productCard: {\n//     flex: 1,\n//     margin: 10,\n//     borderRadius: 10,\n//     backgroundColor: '#FFFFFF',\n//     padding: 10,\n//     alignItems: 'center',\n//     borderWidth: 1,\n//     borderColor: '#E0E0E0',\n//   },\n//   productImage: {\n//     width: width / 2 - 40,\n//     height: 120,\n//     resizeMode: 'cover',\n//     borderRadius: 10,\n//     marginBottom: 10,\n//   },\n//   productPrice: {\n//     fontSize: 16,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   productName: {\n//     fontSize: 14,\n//     color: '#333333',\n//     marginTop: 5,\n//   },\n//   emptyMessage: {\n//     textAlign: 'center',\n//     fontSize: 16,\n//     color: '#777777',\n//     marginTop: 20,\n//   },\n// });\n\n","import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, ScrollView } from 'react-native';\nimport { Ionicons, MaterialIcons, FontAwesome5 } from '@expo/vector-icons';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { Link, router, Stack } from 'expo-router';\nimport BannerVOne from '@/components/banner/BannerVOne';\nimport { useAuth } from '@/contexts/AuthContext';\nimport MyButton from '@/components/buttons/MyButton';\n// import CustomButton from '@/components/buttons/WhiteButton';\n// import MyButton from '@/components/buttons/WhiteButton';\n\nconst SettingsPage = () => {\n  const insets = useSafeAreaInsets();\n\n  const { authState , onLogout } = useAuth()\n\n  const handleLogOut = async () => {\n    if (onLogout) {\n      try {\n        await onLogout();\n        router.replace('/welcome' as never); // Navigate to the welcome screen after logout\n      } catch (error) {\n        console.error('Logout failed:', error);\n      }\n    } else {\n      console.error('Logout function is not defined');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* <Stack.Screen options={{headerShown: false}} /> */}\n     <View  style={styles.upperSection}>\n      {/* <View style={styles.divider}/> */}\n     {/* <View style={{paddingBottom: 20}}/> */}\n     </View>\n     <ScrollView contentContainerStyle={styles.content}>\n     <Text style={styles.title}>Settings</Text>\n\n      <BannerVOne />\n     \n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>General</Text>\n          \n          <Link href={'/profile' as never} asChild>\n            <TouchableOpacity style={styles.option}>\n              <FontAwesome5 name=\"user\" size={20} color=\"black\" />\n              <Text style={styles.optionText}>Profile information</Text>\n              <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n            </TouchableOpacity>\n          </Link>\n\n{/* \n          <Link href={'settings/profile-information' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <MaterialIcons name=\"payment\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Payment methods</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link> */}\n\n          <Link href={'/appearance' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"color-palette-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Appearance</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link>\n\n          <Link href={'/favorites' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"color-palette-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Favorites</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link>\n{/* \n          <Link href={'settings/profile-information' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"notifications-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Notifications</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link> */}\n\n        </View>\n\n        {/* <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Support</Text>\n          <Link href={'/report-an-issue' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"alert-circle-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Report an issue</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link>\n\n          <Link href={'/faq' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"help-circle-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>term</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n\n          </Link>\n\n        </View> */}\n\n\n\n<View style={styles.section}>\n          <Text style={styles.sectionTitle}>Application</Text>\n          <Link href={'/privacy-policy' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"alert-circle-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Privacy Policy</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          </Link>\n\n          <Link href={'/terms-of-use' as never} asChild>\n          <TouchableOpacity style={styles.option}>\n            <Ionicons name=\"help-circle-outline\" size={20} color=\"black\" />\n            <Text style={styles.optionText}>Terms of use</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"black\" />\n          </TouchableOpacity>\n          \n          </Link>\n\n        </View>\n        <MyButton\n        title=\"Log out\"\n        onPress={handleLogOut}\n        buttonStyle={styles.logoutButton}\n        textStyle={styles.logoutText}\n      />\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  upperSection: {\n  \n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#EAEAEA',\n    // paddingBottom: 20\n    // marginBottom: 20,\n  },\n\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'left',\n    marginVertical: 20,\n    marginLeft: 16,\n    paddingBottom: 20,\n  },\n  content: {\n    paddingHorizontal: 20,\n    paddingBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 10,\n    elevation: 4, // for Android shadow\n    marginTop: 12,\n\n  },\n  section: {\n    marginBottom: 30,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000',\n    marginBottom: 10,\n  },\n  option: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#EAEAEA',\n  },\n  optionText: {\n    flex: 1,\n    fontSize: 16,\n    color: '#000',\n    marginLeft: 10,\n  },\n  logoutButton: {\n    backgroundColor: '#FFFFFF',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#000',\n    marginTop: 20,\n  },\n  logoutText: {\n    color: '#000',\n    fontSize: 16,\n  },\n});\n\nexport default SettingsPage;\n","import { Button, Image, StyleSheet, Text, TextInput, View, Alert , Modal} from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { router, SplashScreen, Stack, useNavigation, useRouter } from 'expo-router';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { UserProps } from '@/models/UserProps';\nimport { generateUUID } from '@/hooks/generateUUID';\n\nconst LoginComponentOne = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { onLogin, onRegister, onLogout , authState } = useAuth();\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigation = useNavigation();\n  const [openModal , setOpenModal] = useState(false)\n\n\n\n\n  const showAlert = (message: string) => Alert.alert(\"Error\", message, [{ text: \"OK\" }]);\n\n  const loginAction = async () => {\n    try {\n      const result = await onLogin!(email, password);\n      if (result.error) {\n        showAlert(result.msg);\n      } else {\n        console.log(\"Login successful\");\n        // Wrap navigation.goBack in a try-catch block\n        try {\n        router.replace('/home' as never)\n\n        } catch (navError) {\n          console.error(\"Navigation error:\", navError);\n        }\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      showAlert(\"Login failed. Please try again.\");\n    }\n  };\n\n  const registerAction = async () => {\n    const user: UserProps = {\n      id: generateUUID(8),\n      name,\n      email,\n      password,\n      store_ids: [],\n      store_owner_id: '',\n      onboardingQ1: '',\n      onboardingQ2: '',\n      onboardingQ3: '',\n      onboardingQ4: '',\n      orders: [],\n      favoriteItems: [],\n      cart: [],\n      affiliate_link: '',\n      active: false,\n      role: '',\n      birthday: '',\n      todo_completed: false,\n      tableName: '',\n      username: '',\n      phone_number: '',\n      gender: '',\n      profile_image: '',\n      address_city: '',\n      address_state: '',\n      location_history: [],\n      current_notification: '',\n      notifications: [],\n      payment_due: 0,\n      payment_due_date: '',\n      payment_due_day: '',\n      payment_monthly_amount: 0,\n      device_id: '',\n      device_os_version: '',\n      device_model: '',\n      device_ip_address: '',\n      device_battery_level: '',\n      device_battery_statue: '',\n      device_network_connectio_type: '',\n      loyalty_date: '',\n      payment_history_total: 0,\n      subscription_id: '',\n      paid_subscriber: false,\n      newsletter_subscriber: false,\n      notification_subscriber: false,\n      left_review: false,\n      review_stars: [],\n      reviews: [],\n      testimonials: [],\n      notify_arn: '',\n      owner_notify_arn: ''\n    };\n\n    try {\n      const result = await onRegister!(user);\n      if (result.error) {\n        showAlert(result);\n        return;\n      } else {\n        console.log(\"Registration successful\");\n        // Call the loginAction after successful registration\n        loginAction();\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      showAlert(\"Registration failed. Please try again.\");\n    }\n  };\n\n  return (\n    \n    // <Modal visible={openModal} >\n    <View style={styles.container}>\n            <Stack.Screen  options={{ title: 'Login'  }}  />\n\n      {/* <Modal visible={openModal} transparent={true} animationType='fade' > */}\n      <View style={styles.imgContainer}>\n        <Image source={{ uri: 'https://appsformankind-assets.s3.amazonaws.com/Products/Oak_and_Ivy/Furniture_8.jpg' }} style={styles.img} />\n      </View>\n      <View style={styles.form}>\n        <TextInput style={styles.input} placeholder=\"Name\" onChangeText={setName} value={name} />\n        <TextInput style={styles.input} placeholder=\"Email\" onChangeText={setEmail} value={email} />\n        <TextInput style={styles.input} placeholder=\"Password\" secureTextEntry onChangeText={setPassword} value={password} />\n        <Button onPress={loginAction} title=\"Sign in\" />\n        <Button onPress={registerAction} title=\"Create Account\" />\n        <Button onPress={onLogout} title=\"Logout\" />\n        {/* <Text>{authState?.authenticated ? \"TRUE\": \"FALSE\"}</Text> */}\n\n      </View>\n      {/* </Modal> */}\n    </View>\n   \n    \n  );\n};\n\nexport default LoginComponentOne;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    width: '100%',\n  },\n  imgContainer: {\n    marginLeft: 8,\n    height: 200,\n    width: 200,\n    borderRadius: 6,\n    paddingTop: 30,\n  },\n  img: {\n    height: 200,\n    width: 200,\n    borderRadius: 100,\n  },\n  form: {\n    paddingTop: 50,\n    gap: 10,\n    width: '60%',\n  },\n  input: {\n    height: 44,\n    borderWidth: 1,\n    borderRadius: 4,\n    padding: 10,\n    backgroundColor: \"#fff\",\n  },\n});\n\n\n\n\n\n","import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ImageBackground,\n  TouchableOpacity,\n  StatusBar,\n  Modal,\n  Dimensions,\n  ActivityIndicator,\n  Alert,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport LoginComponentOne from \"../login/LoginComponentOne\";\nimport { CONSTANTS } from \"@/utils/constants\";\nimport {\n  ClientStoreProvider,\n  useClientStore,\n} from \"@/contexts/ClientStoreContext\";\nimport { router } from \"expo-router\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n\nconst { width, height } = Dimensions.get(\"screen\");\n\n// export default function WelcomePageTwo() {\nconst WelcomePageTwo = () => {\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [modalVisible, setModalVisible] = useState(false);\n  const { store } = useClientStore();\n  const { authState } = useAuth();\n\n  // const welcomeImage = store?.images?.welcome_image ?? \"\";\n\n  return (\n    <View style={styles.container}>\n      <StatusBar\n        barStyle=\"dark-content\"\n        translucent\n        backgroundColor=\"transparent\"\n      />\n\n      <ImageBackground\n        source={{\n          uri: \"https://appsformankind-assets.s3.amazonaws.com/Store/Jays_Sea_Moss/waterfall.jpg\",\n        }}\n        style={styles.backgroundImage}\n        resizeMode=\"cover\"\n      >\n        <View style={styles.overlay}>\n          <View style={styles.header}>\n            <Text style={styles.logoText}>{store?.store_name}</Text>\n            <Text style={styles.tagline}>\n              Nature's Superfood, Your Ultimate Wellness Companion.\n            </Text>\n          </View>\n\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={styles.buttonPrimary}\n              onPress={() => {\n                console.log(authState?.authenticated);\n                router.push(\"/login\" as never);\n              }}\n            >\n              <Ionicons name=\"log-in-outline\" size={20} color=\"black\" />\n              <Text style={styles.buttonPrimaryText}>Proceed to Login</Text>\n              <Ionicons name=\"arrow-forward\" size={20} color=\"black\" />\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={styles.buttonSecondary}\n              onPress={() => router.push(\"/register\" as never)}\n            >\n              <Ionicons name=\"person-add-outline\" size={20} color=\"white\" />\n              <Text style={styles.buttonSecondaryText}>New User? Sign Up</Text>\n              <Ionicons name=\"arrow-forward\" size={20} color=\"white\" />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ImageBackground>\n\n      {/* Modal for Login */}\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <TouchableOpacity\n              style={styles.closeButton}\n              onPress={() => setModalVisible(false)}\n            >\n              <Ionicons name=\"close-outline\" size={24} color=\"black\" />\n            </TouchableOpacity>\n            <LoginComponentOne />\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nexport default WelcomePageTwo\n\n\n\n\nconst styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F5F5F5\",\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F5F5F5\",\n  },\n  backgroundImage: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  overlay: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.3)\", // Dark overlay for text visibility\n    paddingTop: 60,\n    paddingBottom: 40,\n    width: width,\n  },\n  header: {\n    alignItems: \"center\",\n  },\n  logoText: {\n    fontSize: 40,\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n  tagline: {\n    fontSize: 16,\n    color: \"white\",\n    textAlign: \"center\",\n    paddingHorizontal: 20,\n    marginTop: 10,\n  },\n  buttonContainer: {\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n  buttonPrimary: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 30,\n    width: \"90%\",\n    justifyContent: \"space-between\",\n    marginBottom: 15,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 5,\n    elevation: 5,\n  },\n  buttonPrimaryText: {\n    color: \"black\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  buttonSecondary: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"black\",\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 30,\n    width: \"90%\",\n    justifyContent: \"space-between\",\n  },\n  buttonSecondaryText: {\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  noImageContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  noImageText: {\n    fontSize: 16,\n    color: \"gray\",\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Semi-transparent background\n  },\n  modalContent: {\n    width: \"90%\",\n    padding: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    elevation: 10,\n  },\n  closeButton: {\n    alignSelf: \"flex-end\",\n  },\n});\n\n// import React from 'react';\n// import { View, Text, StyleSheet, ImageBackground, TouchableOpacity, StatusBar, Dimensions } from 'react-native';\n// import { Ionicons } from '@expo/vector-icons';\n// import { useClientStore } from '@/contexts/ClientStoreContext';\n\n// const { width, height } = Dimensions.get(\"screen\");\n\n// export default function WelcomePageTwo() {\n\n//   const { store } = useClientStore();\n\n//   const welcomeImage = store?.images?.welcome_image ?? \"\";\n\n//   return (\n//     <View style={styles.container}>\n//       <StatusBar barStyle=\"dark-content\" translucent backgroundColor=\"transparent\" />\n\n//       {welcomeImage ? (\n//         <ImageBackground\n//           source={{ uri: welcomeImage }}\n//           style={styles.backgroundImage}\n//           resizeMode=\"cover\"\n//         >\n//           <View style={styles.overlay}>\n//             <View style={styles.header}>\n//               <Text style={styles.logoText}>{store?.store_name}</Text>\n//               <Text style={styles.tagline}>Nature's Superfood, Your Ultimate Wellness Companion.</Text>\n//             </View>\n\n//             <View style={styles.buttonContainer}>\n//               <TouchableOpacity style={styles.buttonPrimary} onPress={() => {}}>\n//                 <Ionicons name=\"log-in-outline\" size={20} color=\"black\" />\n//                 <Text style={styles.buttonPrimaryText}>Proceed to Login</Text>\n//                 <Ionicons name=\"arrow-forward\" size={20} color=\"black\" />\n//               </TouchableOpacity>\n\n//               <TouchableOpacity style={styles.buttonSecondary} onPress={() => {}}>\n//                 <Ionicons name=\"person-add-outline\" size={20} color=\"white\" />\n//                 <Text style={styles.buttonSecondaryText}>New User? Sign Up</Text>\n//                 <Ionicons name=\"arrow-forward\" size={20} color=\"white\" />\n//               </TouchableOpacity>\n//             </View>\n//           </View>\n//         </ImageBackground>\n//       ) : (\n//         <View style={styles.noImageContainer}>\n//           <Text style={styles.noImageText}>No image available</Text>\n//         </View>\n//       )}\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     backgroundColor: '#F5F5F5',\n//   },\n//   backgroundImage: {\n//     flex: 1,\n//     width: '100%',\n//     height: '100%',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   },\n//   overlay: {\n//     flex: 1,\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     backgroundColor: 'rgba(0, 0, 0, 0.3)', // Dark overlay for text visibility\n//     paddingTop: 60,\n//     paddingBottom: 40,\n//     width: width\n//   },\n//   header: {\n//     alignItems: 'center',\n//   },\n//   logoText: {\n//     fontSize: 40,\n//     fontWeight: 'bold',\n//     color: 'white',\n//   },\n//   tagline: {\n//     fontSize: 16,\n//     color: 'white',\n//     textAlign: 'center',\n//     paddingHorizontal: 20,\n//     marginTop: 10,\n//   },\n//   buttonContainer: {\n//     width: '100%',\n//     alignItems: 'center',\n//   },\n//   buttonPrimary: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//     backgroundColor: 'white',\n//     paddingVertical: 15,\n//     paddingHorizontal: 30,\n//     borderRadius: 30,\n//     width: '90%',\n//     justifyContent: 'space-between',\n//     marginBottom: 15,\n//     shadowColor: '#000',\n//     shadowOffset: { width: 0, height: 2 },\n//     shadowOpacity: 0.2,\n//     shadowRadius: 5,\n//     elevation: 5,\n//   },\n//   buttonPrimaryText: {\n//     color: 'black',\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//   },\n//   buttonSecondary: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//     backgroundColor: 'black',\n//     paddingVertical: 15,\n//     paddingHorizontal: 30,\n//     borderRadius: 30,\n//     width: '90%',\n//     justifyContent: 'space-between',\n//   },\n//   buttonSecondaryText: {\n//     color: 'white',\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//   },\n//   noImageContainer: {\n//     flex: 1,\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   },\n//   noImageText: {\n//     fontSize: 16,\n//     color: 'gray',\n//   },\n// });\n","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { OrderModelProps } from '@/models/OrderModelProps';\nimport { Link } from 'expo-router';\nimport { useClientOrder } from '@/contexts/OrderContext';\nimport { Ionicons } from '@expo/vector-icons';\n\nconst ClientOrderCard: React.FC<{ order: OrderModelProps }> = ({ order }) => {\n  const { selectOrder } = useClientOrder();\n  const [status, setStatus] = useState(order.order_status);\n\n  const handleOrderPress = () => {\n    selectOrder(order);\n  };\n\n  useEffect(() => {\n    setStatus(order.order_status);\n  }, [order.order_status]);\n\n  return (\n    <Link href={`(tabs)/client-orders/(details)/${order.id}` as never} asChild>\n      <TouchableOpacity style={styles.card} onPress={handleOrderPress}>\n        <View style={styles.body}>\n          <Ionicons name=\"bag\" size={30} color={COLORS.primary} style={styles.icon} />\n          <View style={styles.details}>\n            <Text style={styles.name}>{order.to_address.name}</Text>\n            <Text style={styles.price}>{convertToCurrency(order.total)}</Text>\n            <Text style={styles.date}>Placed on: {order.order_placed_date}</Text>\n          </View>\n          <View style={styles.statusContainer}>\n            <Text style={[styles.status, getStatusStyle(status)]}>{status}</Text>\n          </View>\n        </View>\n      </TouchableOpacity>\n    </Link>\n  );\n};\n\nconst getStatusStyle = (status: string) => {\n  switch (status) {\n    case 'Fulfill Order':\n      return styles.fulfillOrderStatus;\n    case 'Mark as Shipped':\n      return styles.markAsShippedStatus;\n    case 'Shipped !':\n      return styles.shippedStatus;\n    default:\n      return styles.defaultStatus;\n  }\n};\n\nexport default ClientOrderCard;\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: COLORS.white,\n    borderRadius: SIZES.medium,\n    marginBottom: SIZES.medium,\n    padding: SIZES.medium,\n    shadowColor: COLORS.black,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  body: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {\n    paddingRight: SIZES.medium,\n  },\n  details: {\n    flex: 1,\n  },\n  name: {\n    fontFamily: 'bold',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  price: {\n    fontFamily: 'regular',\n    fontSize: SIZES.medium,\n    color: COLORS.primary,\n  },\n  date: {\n    fontFamily: 'regular',\n    fontSize: SIZES.small,\n    color: COLORS.gray,\n  },\n  statusContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  status: {\n    fontFamily: 'bold',\n    fontSize: SIZES.small,\n    paddingVertical: SIZES.small,\n    paddingHorizontal: SIZES.medium,\n    borderRadius: SIZES.large,\n  },\n  fulfillOrderStatus: {\n    backgroundColor: COLORS.primary,\n    color: COLORS.white,\n  },\n  markAsShippedStatus: {\n    backgroundColor: COLORS.orange,\n    color: COLORS.black,\n  },\n  shippedStatus: {\n    backgroundColor: COLORS.green,\n    color: COLORS.black,\n  },\n  defaultStatus: {\n    backgroundColor: COLORS.blue,\n    color: COLORS.white,\n  },\n});\n\n\n\n\n\n// // OrderCard.tsx\n// import React from 'react';\n// import { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\n// // import { OrderModelProps } from './Order';\n// import { COLORS, SIZES } from '@/utils/theme';\n// import { Ionicons } from '@expo/vector-icons';\n// import convertToCurrency from '@/hooks/convertToCurrency';\n// import { OrderModelProps } from '@/models/OrderModelProps';\n// import { Link } from 'expo-router';\n// import { useClientOrder } from '@/contexts/OrderContext';\n\n\n// const ClientOrderCard: React.FC<OrderModelProps> = (order) => {\n//   const { selectOrder } = useClientOrder();\n\n//   const handleProductPress = () => {\n//     selectOrder(order);\n//   };\n//   return (\n//     // <Link href={\"(tabs)/client-orders/(create)/create-client-order\" as never} asChild>\n//     // <Link href={\"(tabs)/client-orders/(create)/create-client-order\" as never} asChild>\n\n//     <Link href={`(tabs)/client-orders/(details)/${order.id}` as never} asChild>\n\n//     <TouchableOpacity style={styles.card} onPress={handleProductPress}>\n//       <View style={styles.header}>\n//         <Text style={styles.orderId}>Order ID: {order.id}</Text>\n//         <Text style={styles.status}>{order.order_status}</Text>\n//       </View>\n      \n//       <View style={styles.body}>\n//         {/* <Image source={{ uri: props.items[0].image }} style={styles.image} /> */}\n//         <View style={styles.details}>\n//           <Text style={styles.title}>{order.title}</Text>\n//           <Text style={styles.date}>Placed on: {order.order_placed_date}</Text>\n//           <Text style={styles.price}>{convertToCurrency(order.total)}</Text>\n//         </View>\n//       </View>\n      \n//       <View style={styles.footer}>\n//         <Ionicons name=\"square\" size={24} color={COLORS.primary} />\n//       </View>\n//     </TouchableOpacity>\n//     </Link>\n//   );\n// };\n\n// export default ClientOrderCard;\n\n// const styles = StyleSheet.create({\n//   card: {\n//     backgroundColor: COLORS.white,\n//     borderRadius: SIZES.medium,\n//     marginBottom: SIZES.medium,\n//     padding: SIZES.medium,\n//     shadowColor: COLORS.black,\n//     shadowOffset: { width: 0, height: 2 },\n//     shadowOpacity: 0.1,\n//     shadowRadius: 4,\n//     elevation: 5,\n//   },\n//   header: {\n//     flexDirection: 'row',\n//     justifyContent: 'space-between',\n//     marginBottom: SIZES.small,\n//   },\n//   orderId: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//   },\n//   status: {\n//     fontFamily: 'regular',\n//     fontSize: SIZES.small,\n//     color: COLORS.gray,\n//   },\n//   body: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//   },\n//   image: {\n//     width: 60,\n//     height: 60,\n//     borderRadius: SIZES.small,\n//     marginRight: SIZES.medium,\n//   },\n//   details: {\n//     flex: 1,\n//   },\n//   title: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     marginBottom: SIZES.small,\n//     color: COLORS.primary,\n//   },\n//   date: {\n//     fontFamily: 'regular',\n//     fontSize: SIZES.small,\n//     color: COLORS.gray,\n//   },\n//   price: {\n//     fontFamily: 'bold',\n//     fontSize: SIZES.medium,\n//     color: COLORS.primary,\n//     marginTop: SIZES.small,\n//   },\n//   footer: {\n//     flexDirection: 'row',\n//     justifyContent: 'flex-end',\n//     marginTop: SIZES.small,\n//   },\n// });\n","import { StyleSheet, Text, View } from 'react-native'\n\n\nexport const generalStyles = StyleSheet.create({\n    center : {\n        alignItems: 'center',\n        width: '100%'\n    },\n    container: {\n        // padding: 16\n        flex: 1,\n        backgroundColor: '#fff',\n      },\n})","import { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React, { FC, useContext, useState } from 'react'\nimport { COLORS, SIZES } from '@/utils/theme'\nimport { ProductModelProps } from '../../../models/ProductModelProps'\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { CartContext } from '../../../contexts/CartContext'\nimport { Ionicons , SimpleLineIcons} from \"@expo/vector-icons\"\n// import { stripeConverter } from '../../hook/stripeConverter'\nimport { useAuth } from '../../../contexts/AuthContext'\nimport { createPaymentIntent } from '../../../api/paymentApi'\nimport { CONSTANTS } from '@/utils/constants'\n\nconst CartCard = ({ item }: any) => {\n    const { deleteItemFromCart, addToCart , decreaseFromCart, totalSum} = useContext(CartContext);\n    const [quantity, setQuantity] = useState(item.quantity);\n    const {authState, onLogout } = useAuth()\n    const [paymentStatus, setPaymentStatus] = useState('ijiij');\n\n    // Plus\n    const increment = () => {\n        // handlePayment(totalSum, 10)\n\n        addToCart(item);\n    };\n\n    // Minus\n    const decrement = () => {\n        // handlePayment(totalSum, 10)\n        if (item.quantity === 1) {\n          // remove it or do nothing..\n          console.log(\"do nothing\")\n\n        } else {\n            console.log(\"remove 1\")\n            decreaseFromCart(item);\n        }\n    };\n\n  \n  \n  \n  \n    // async function handlePayment(amount: number, shippingAmount: number) {\n  \n    //   //  WORKS GETTING CLIENT ID\n    //   try {\n    //     const paymentData = {\n    //       amount: stripeConverter(amount), // Example value, replace with your actual data\n    //       currency: \"USD\", // Example value, replace with your actual data\n    //       shipping_fee: stripeConverter(shippingAmount), // Example value, replace with your actual data\n    //       // (FIX) - USE STORE.STRIPE\n    //       stripe_id: \"acct_1NVCh3JEHBX7gOQA\", // Example value, replace with your actual data\n    //       app_name: CONSTANTS.appName // Example value, replace with your actual data\n    //     };\n        \n    //     const response = await createPaymentIntent(paymentData);\n    //     // Handle successful response\n    //     setPaymentStatus('Payment successful!');\n    //     console.log(response)\n    //   } catch (error) {\n    //     // Handle error\n    //     setPaymentStatus('Payment failed!');\n    //     // setPaymentStatus(error);\n  \n    //     console.error('Error creating payment intent:', error);\n    //   }\n    // };\n  \n           \n  return (\n   \n      <View style={styles.container}>\n     \n        <Image style={styles.img} source={{uri: item.image  ? item.image : CONSTANTS.holderImage}}/>\n        <View style={styles.cardContent}>\n            <Text style={styles.title}>{item.name}</Text>\n            <Text style={styles.price}>{convertToCurrency(item.price)} x {item.quantity}</Text>\n            {/* <Text style={styles.price}>{convertToCurrency(item.price * item.quantity) }</Text> */}\n            \n            {/* <View style={styles.circleSizeContainer}>\n                <View style={styles.circle} />\n            </View>  */}\n                \n<View style={styles.rating}>\n        <TouchableOpacity onPress={()=>increment()}>\n          <SimpleLineIcons name='plus' size={20} />\n        </TouchableOpacity>\n\n        <Text style={styles.ratingText}>{item.quantity}</Text>\n\n        <TouchableOpacity  onPress={()=> decrement()}>\n          <SimpleLineIcons style={{color: item.quantity === 1 ? 'gray': 'black'}} name='minus' size={20} />\n        </TouchableOpacity>\n \n\n                {/* <View style={styles.sizeCircle}> */}\n                    {/* <Text style={styles.sizeText}>L</Text>\n                </View>    */}\n\n              \n            </View>\n\n        </View>\n        <TouchableOpacity onPress={() => deleteItemFromCart(item)}>\n            <Ionicons name='trash-outline' size={SIZES.xLarge} color={COLORS.black}/>\n        </TouchableOpacity>    \n\n        <View>\n\n        </View>\n      </View>\n  \n  )\n}\n\nexport default CartCard\n\nconst styles = StyleSheet.create({\n    container: {\n     marginVertical: 10,\n     flexDirection: 'row'\n    },\n    img : {\n      height: 125,\n      width: \"25%\",\n      borderRadius: 10\n    },\n    cardContent: {\n        flex: 1,\n        marginHorizontal: 10\n    },\n    title: {\n        fontSize: 15,\n        color: \"#444444\"\n    },\n    price: {\n        color: \"#797979\",\n        marginVertical: 7,\n        fontSize: 18\n    },\n    circleSizeContainer: {\n        flexDirection: \"row\",\n       \n    },\n    circle: {\n        height: 32,\n        width: 32,\n        borderRadius: 16,\n        backgroundColor: \"#444444\",\n       \n    },\n    sizeCircle: {\n        backgroundColor: \"white\",\n        height: 32,\n        width: 32,\n        borderRadius: 16,\n        justifyContent: 'center',\n        alignItems: \"center\",\n       \n    },\n    sizeText: {\n        fontSize: 18,\n        fontWeight: \"500\"\n    },\n    rating : {\n        top: SIZES.large,\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        // marginHorizontal: SIZES.large\n    \n      }, \n      ratingText: {\n        color: COLORS.gray,\n        fontFamily: \"medium\",\n         paddingHorizontal: SIZES.xSmall\n      },\n    \n  })","\nimport { Alert, Platform, StyleSheet, Text, View } from 'react-native';\nimport React, { FC, useContext, useEffect, useState } from 'react';\nimport { StripeProvider, usePlatformPay, PlatformPayButton, PlatformPay } from '@stripe/stripe-react-native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { CartContext } from '../../../contexts/CartContext';\nimport { useClientStore } from '../../../contexts/ClientStoreContext';\nimport { stripeConverter } from '../../../hooks/stripeConverter';\nimport { createPaymentIntent } from '../../../api/paymentApi';\nimport { CONSTANTS } from '../../../utils/constants';\n// import { CartContext } from '@/contexts/CartContext';\n// import { stripeConverter } from '@/hooks/stripeConverter';\n// import { CONSTANTS } from '@/utils/constants';\n// import { createPaymentIntent } from '@/api/paymentApi';\n// import { useClientStore } from '@/contexts/ClientStoreContext';\n// import { stripeConverter } from '@/hooks/stripeConverter';\n\ninterface PaymentPayScreenProps {\n  goBack?: () => void;\n  publishableKey: string;\n  amount: number;\n  shippingAmount: number;\n}\n\nexport const PaymentPayScreen: FC<PaymentPayScreenProps> = (props) => {\n  const [ready, setReady] = useState(false);\n  const [clientSecret, setClientSecret] = useState('');\n  const { isPlatformPaySupported, confirmPlatformPayPayment } = usePlatformPay();\n  const { store } = useClientStore();\n  const { carts, totalSum, totalShipping, totalTax, grandTotal, quantity, deleteItemFromCart, clearData, decreaseFromCart} = useContext(CartContext)\n\n  useFocusEffect(\n    React.useCallback(() => {\n      console.log('Screen focused');\n      setup();\n    }, [])\n  );\n\n  const setup = async () => {\n    try {\n      if (!(await isPlatformPaySupported())) {\n        Alert.alert(\n          'Error',\n          `${Platform.OS === 'android' ? 'Google' : 'Apple'} Pay is not supported.`\n        );\n        return;\n      }\n\n      const paymentData = {\n        amount: stripeConverter(props.amount),\n        currency: 'USD',\n        shipping_fee: stripeConverter(props.shippingAmount),\n        stripe_id:  'acct_1NVCh3JEHBX7gOQA', // store?.stripe_id ??\n        app_name: store?.store_name ?? '',\n      };\n\n      const response = await createPaymentIntent(paymentData);\n      setClientSecret(response.clientSecret);\n      console.log(`Client Secret: ${response.clientSecret}`);\n      setReady(true);\n    } catch (error) {\n      console.error('Error during setup:', error);\n      Alert.alert('Setup Error', 'There was an error setting up the payment.');\n    }\n  };\n\n  const buy = async () => {\n    if (!ready) {\n      return;\n    }\n    \n    setReady(false);\n\n    try {\n      const { error } = await confirmPlatformPayPayment(clientSecret, {\n        applePay: {\n          cartItems: carts.map(item => ({\n            label: store?.store_name ?? CONSTANTS.appName,\n            amount: String(item.price),\n            paymentType: PlatformPay.PaymentType.Immediate,\n          })),\n          merchantCountryCode: 'US',\n          currencyCode: 'USD',\n        },\n        googlePay: {\n          testEnv: true,\n          merchantName: 'My merchant name',\n          merchantCountryCode: 'US',\n          currencyCode: 'USD',\n          billingAddressConfig: {\n            format: PlatformPay.BillingAddressFormat.Full,\n            isPhoneNumberRequired: true,\n            isRequired: true,\n          },\n        },\n      });\n\n      if (error) {\n        setReady(true);\n        Alert.alert(`Error code: ${error.code}`, error.message);\n        console.log(`Error code: ${error.code}`, error.message);\n      } else {\n        Alert.alert('Success', 'The payment was confirmed successfully');\n        console.log('Success', 'The payment was confirmed successfully');\n      }\n    } catch (error) {\n      console.error('Payment error:', error);\n      Alert.alert('Payment Error', 'There was an error processing the payment.');\n      setReady(true);\n    }\n  };\n\n  return (\n    <View>\n    <View style={styles.container}>\n\n      <StripeProvider\n        publishableKey={props.publishableKey}\n        merchantIdentifier={CONSTANTS.merchant_id}\n      >\n        <PlatformPayButton\n          onPress={buy}\n          disabled={!ready}\n          style={styles.payButton}\n          borderRadius={4}\n          type={PlatformPay.ButtonType.Pay}\n        />\n      </StripeProvider>\n\n\n      </View>\n      </View>\n  );\n};\n\nexport default PaymentPayScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  payButton: {\n    width: '100%',\n    height: 50,\n    borderRadius: 5,\n  },\n});\n\n\n\n\n\n\n\n\n// import { Alert, Platform, StyleSheet, Text, View } from 'react-native'\n// import React, { FC, useContext, useEffect, useState } from 'react'\n// import { StripeProvider, usePlatformPay, PlatformPayButton, PlatformPay, usePaymentSheet } from '@stripe/stripe-react-native'\n// import { useFocusEffect } from '@react-navigation/native';\n// import { CartContext } from '@/contexts/CartContext';\n// import { stripeConverter } from '@/hooks/stripeConverter';\n// import { CONSTANTS } from '@/utils/constants';\n// import { createPaymentIntent } from '@/api/paymentApi';\n// import { useClientStore } from '@/contexts/ClientStoreContext';\n\n \n// interface PaymentPayScreenProps  {\n//     goBack?: () => void\n//     publishableKey: string\n//     amount: number\n//     shippingAmount: number\n    \n// }\n\n\n// export const PaymentPayScreen: FC<PaymentPayScreenProps> = (props) => {\n//     const [ready, setReady] = useState(false)\n//     const [clientSecret, setClientSecret] = useState('')\n//     const { isPlatformPaySupported, confirmPlatformPayPayment } = usePlatformPay()\n//     const { carts, totalSum, totalShipping, totalTax, grandTotal, deleteItemFromCart, clearData, decreaseFromCart} = useContext(CartContext)\n\n//     const {store} = useClientStore()\n//     // const {initPaymentSheet, presentPaymentSheet, loading} = usePaymentSheet()\n\n//     // useEffect(() => {\n//     //     setup()\n//     //     // initialisePaymentSheet()\n//     //     console.log(\"Payment set up completed\")\n\n//     // }, [])\n\n//     useFocusEffect(\n//         React.useCallback(() => {\n//           // Run this function every time the screen comes into focus\n//           console.log('Screen focused');\n//          setup()\n//         // initialisePaymentSheet()\n//         console.log(\"Payment set up completed\")\n\n//         }, [])\n//       );\n\n//     // const initialisePaymentSheet = async () => {\n//     //     const { paymentInent, ephemeralKey , customer } = await fetchPaymentSheet({\n\n//     //     })\n//     // }\n\n\n//     const setup = async () => {\n//         // Perform any setup here if needed\n//         if(!(await isPlatformPaySupported())) {\n//             // console.log\n//             Alert.alert(\n//                 'Error',\n//                 `${\n//                     Platform.OS === 'android' ? 'Google': 'Apple'\n//                 } Pay is not supported. `\n//             )\n//             return\n//         } else {\n//            await isPlatformPaySupported()\n//            // setup()\n//             console.log(\"sorry..\")\n//         }\n\n//         const paymentData = {\n//             amount: stripeConverter(props.amount), // Example value, replace with your actual data\n//             currency: \"USD\", // Example value, replace with your actual data\n//             shipping_fee: stripeConverter(props.shippingAmount), // Example value, replace with your actual data\n//             stripe_id: \"acct_1NVCh3JEHBX7gOQA\", //  store?.stripe_id ?? \"\", //\"acct_1NVCh3JEHBX7gOQA\", // Example value, replace with your actual data\n//             app_name: store?.store_name ?? \"\" // CONSTANTS.appName // Example value, replace with your actual data\n//           };\n\n//         const response = await createPaymentIntent(paymentData);\n\n//        // const result = response.json\n//         setClientSecret(response.clientSecret)\n//         // console.log(clientSecret)\n//         console.log(`This is the best button - ${response.clientSecret}`)\n//         setReady(true)\n//     }\n\n//     async function buy() {\n//         if (ready == true) {\n//             setup()\n//         }\n//         setReady(false)\n\n       \n\n//         const { error } = await confirmPlatformPayPayment(clientSecret, {\n//             applePay: {\n//                 cartItems: carts.map(item => ({\n//                     label: store?.store_name, //  CONSTANTS.appName, // pay ....\n//                     amount: String(item.price),\n//                     paymentType: PlatformPay.PaymentType.Immediate\n//                 })),\n\n//                 // cartItems: [\n//                 //     {\n//                 //         label: CONSTANTS.appName,\n//                 //         amount: String(props.amount), // '12',// \n//                 //         paymentType: PlatformPay.PaymentType.Immediate,\n                        \n             \n                      \n//                 //     }\n//                 // ],\n//                 merchantCountryCode: \"US\",\n//                 currencyCode: 'USD',\n            \n//                 // requiredBillingContactFields: [\n//                 //     ContactField.EmailAddress,\n//                 //     ContactField.Name,\n//                 //     ContactField.PhoneNumber,\n//                 //     ContactField.PhoneticName,\n//                 //     ContactField.PostalAddress\n//                 // ]\n                \n                \n//             },\n//             googlePay: {\n//                 testEnv: true,\n//                 merchantName: 'My merchant name',\n//                 merchantCountryCode: 'US',\n//                 currencyCode: 'USD',\n//                 billingAddressConfig: {\n//                   format: PlatformPay.BillingAddressFormat.Full,\n//                   isPhoneNumberRequired: true,\n//                   isRequired: true,\n//                 },\n//             },\n        \n//         })\n\n//         if (error) {\n//             setReady(true)\n//             Alert.alert(`Error code: ${error.code}`, error.message)\n//             console.log(`Error code: ${error.code}`, error.message)\n\n//         } else {\n//             setReady(false)\n//             Alert.alert('Success', 'The payment was confirmed successfully')\n//             console.log('Success', 'The payment was confirmed successfully')\n// }\n//     }\n\n//     return (\n//         <View style={{}}>\n//             <StripeProvider\n//                 publishableKey={props.publishableKey}\n//                 merchantIdentifier={CONSTANTS.merchant_id} // Use the correct constant\n//             >\n//                 <View>\n                    \n//                     <PlatformPayButton\n//                         onPress={buy}\n//                         disabled={!ready}\n//                         style={styles.payButton}\n//                        // appearance={PlatformPay.ButtonStyle.Black}\n//                         borderRadius={4}\n//                         type={5} //{PlatformPay.ButtonType.AddMoney}\n//                     />\n//                 </View>\n//             </StripeProvider> \n//         </View>\n//     )\n// }\n\n// export default PaymentPayScreen\n\n// const styles = StyleSheet.create({\n//     container: {\n//         flex: 1,\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//         color: 'red',\n//     },\n//     payButton: {\n//         backgroundColor: 'black',\n//         tintColor: 'red',\n//         width: '100%',\n//         height: 50,\n//         borderRadius: 5,\n//         color: 'red',\n       \n//     },\n//     buttons: {\n//         marginTop: 20,\n//     }\n// })\n\n\n","import { Image, StyleSheet, FlatList, Text, TouchableOpacity, View } from 'react-native'\nimport React, { useContext, useState } from 'react'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { CartContext } from '@/contexts/CartContext'\nimport CartHeader from '@/components/other/headers/CartHeader'\nimport { generalStyles } from '@/components/other/general/Styles'\nimport CartCard from '@/components/other/cart/CartCard'\n// import convertToCurrency from '@/hooks/convertToCurrency'\nimport { CONSTANTS } from '@/utils/constants'\nimport PaymentPayScreen from './PaymentPayScreen'\nimport convertToCurrency from '@/hooks/convertToCurrency'\n// import CartHeader from '../components/headers/CartHeader'\n// import { Avatar, Divider } from 'react-native-paper'\n// import LinearGradient from 'react-native-linear-gradient' // cause error\n// import CartCard from '../components/cart/CartCard'\n// import { Ionicons , Fontisto} from '@expo/vector-icons'\n// import { COLORS } from '../utils/theme'\n// import { CartContext } from '../contexts/CartContext'\n// import convertToCurrency from '../hook/convertToCurrency'\n// import { Item } from 'react-native-paper/lib/typescript/components/Drawer/Drawer'\n// import PaymentButton from '../components/buttons/CheckoutButton'\n// import PaymentPayScreen from './PaymentPayScreen'\n// import { CONSTANTS } from '../utils/constants'\n// import CheckoutButton from '../components/buttons/CheckoutButton'\n// import { generalStyles } from '../components/general/Styles'\n// import { useFocusEffect } from '@react-navigation/native'\n\n\n// export interface CartProps {\n//   carts: []\n// }\n\nconst CartPageVOne = () => {\n  \n  const { carts, totalSum, totalShipping, totalTax, grandTotal, quantity, deleteItemFromCart, clearData, decreaseFromCart} = useContext(CartContext)\n  \n  const [triggerValueChange, setTriggerValueChange] = useState(false)\n  // useFocusEffect(\n  //   React.useCallback(() => {\n  //     // Run this function every time the screen comes into focus\n     \n\n  //     if (quantity <= 0    ){ // || carts.length <= 0\n  //       setQuantity(0)\n  //     }\n  //   }, [])\n  // );\n\n\n  \n  \n  return (\n    <View style={styles.container}>\n      {/* <CartHeader/> */}\n\n      {carts.length <= 0 ? (\n\n          <>\n          <View style={generalStyles.center}>\n            <Text>\n              Please add items to the cart\n            </Text>\n          </View>\n          </>\n      ): (\n<>\n        <FlatList\n        data={carts}\n        showsVerticalScrollIndicator={false}\n        keyExtractor={(_, index) => index.toString()}\n        ListHeaderComponent={\n          <></>\n        }\n        contentContainerStyle={{\n          paddingBottom: 100\n        }}\n        renderItem={({item}) => (\n          // <CartCard item={item} delteItemFromCart={deleteItemFromCart} />\n          <CartCard item={item} delteItemFromCart={deleteItemFromCart} triggerValueChange={triggerValueChange} />\n        )}\n        ListFooterComponent={\n         <></>\n        }\n    />\n\n\n<View>\n<>\n          <View style={styles.priceContainer}>\n          \n          <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Total:</Text>\n            <Text style={styles.text}>{convertToCurrency(totalSum)}</Text>\n          </View>\n          \n          <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Shipping:</Text>\n            <Text style={styles.text}>{convertToCurrency(totalShipping)}</Text>\n          </View>\n          <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Tax:</Text>\n            <Text style={styles.text}>{convertToCurrency(totalTax)}</Text>\n          </View>\n          {/* <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Shipping:</Text>\n            <Text style={styles.text}>$0.0</Text>\n          </View> */}\n        \n        </View>\n\n        <View style={styles.divider}/>\n      \n          <View  style={styles.priceAndTitle}>\n            <Text style={styles.text}>Grand Total:</Text>\n            <Text style={[styles.text , {color: \"black\", fontWeight: \"700\"} ]}>{convertToCurrency(grandTotal)}</Text>\n          </View>\n        \n        </>\n      </View>\n      <View style={{paddingTop: 30}}>\n        <PaymentPayScreen \n           publishableKey={CONSTANTS.publishableKeyTest}\n          // publishableKey={CONSTANTS.publishableKeyLive}\n          amount={totalSum}\n          shippingAmount={totalShipping} \n        />\n    </View>\n\n      \n      <View style={{paddingBottom: 50}}></View>\n\n\n</>\n      )}\n   \n     \n \n  \n    </View>\n\n  )\n}\n\nexport default CartPageVOne\n\nconst styles = StyleSheet.create({\n\n  headerContainer: {\n    marginBottom: 20\n  },\n  container: {\n    flex  : 1,\n    padding: 15\n  },\n  priceContainer :{\n    marginTop: 40\n  },\n  priceAndTitle: {\n    flexDirection: 'row',\n    justifyContent: \"space-between\",\n    marginHorizontal: 20,\n    marginVertical: 10\n  },\n  text: {\n    color: \"#757575\",\n    fontSize: 14\n  },\n  divider: {\n    borderWidth: 1,\n    borderColor: \"#C0C0C0\",\n    borderRadius: 15,\n    marginVertical: 10\n  },\n  checkoutContainer: {\n    backgroundColor: \"black\",//  \"#E96E6E\",\n    width: \"100%\",\n    marginVertical: 30,\n    borderRadius: 10\n  },\n  buttonText: {\n    fontSize: 20,\n    color: \"white\",\n    textAlign: \"center\",\n    padding: 10,\n    fontWeight: \"700\"\n\n\n  }\n\n})\n\n// rnef","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { MotiView } from 'moti';\n\ninterface GlowButtonProps {\n  onPress: () => void;\n  buttonText: string;\n}\n\nconst GlowButton: React.FC<GlowButtonProps> = ({ onPress, buttonText }) => {\n  const [isPressed, setIsPressed] = useState(false);\n\n  const handlePress = () => {\n    setIsPressed(true);\n    onPress();\n\n    // Reset animation state after some time\n    setTimeout(() => setIsPressed(false), 500);\n  };\n\n  return (\n    <MotiView\n      from={{\n        shadowOpacity: 0,\n      }}\n      animate={{\n        shadowOpacity: isPressed ? 0.8 : 0,\n      }}\n      transition={{\n        type: 'timing',\n        duration: 300,\n      }}\n      style={styles.glow}\n    >\n      <TouchableOpacity\n        style={styles.buyButton}\n        onPress={handlePress}\n      >\n        <Text style={styles.buyButtonText}>{buttonText}</Text>\n      </TouchableOpacity>\n    </MotiView>\n  );\n};\n\nexport default GlowButton;\n\nconst styles = StyleSheet.create({\n  glow: {\n    shadowColor: 'black', // Gold-like color for the glow\n    shadowOffset: { width: 0, height: 0 },\n    shadowRadius: 10,\n  },\n  buyButton: {\n    backgroundColor: '#FFFFFF',\n    borderWidth: 2,\n    borderColor: '#000000',\n    borderRadius: 25,\n    paddingVertical: 15,\n    alignItems: 'center',\n    marginTop: 20,\n    // width: 200, // Adjust the width as needed\n\n   \n  },\n  buyButtonText: {\n    color: '#000000',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n","import React, { FC, useContext, useState } from 'react';\nimport { View, Text, Image, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { CartContext } from '@/contexts/CartContext';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport convertToCurrency from '@/hooks/convertToCurrency';\nimport { MotiView } from 'moti';\nimport GlitterButton from '@/components/buttons/GlitterButtom';\n\nconst ProductDetailsPageVThree: FC<ProductModelProps> = (props) => {\n  const [selectedColor, setSelectedColor] = useState<string | null>(null);\n  const [selectedSize, setSelectedSize] = useState<string | null>(null);\n  const { addToCart } = useContext(CartContext);\n  const { selectedProduct } = useClientProduct();\n\n  const [isPressed, setIsPressed] = useState(false);\n\n  const handlePress = () => {\n    if (selectedProduct) {\n      addToCart(selectedProduct);\n      setIsPressed(true);\n\n      // Reset animation state after some time\n      setTimeout(() => setIsPressed(false), 500);\n    }\n  };\n\n  const description = selectedProduct?.description ?? \"\";\n\n  return (\n    <View style={{ backgroundColor: 'white' }}>\n      <ScrollView contentContainerStyle={styles.container}>\n        <View style={styles.imageContainer}>\n          <Image \n            source={{ uri: selectedProduct?.images[0] }} // Replace with actual image URI\n            style={styles.productImage}\n          />\n          <View style={styles.textOverlay}>\n            <Text style={styles.overlayTitle}>{selectedProduct?.name}</Text>\n            <Text style={styles.overlaySubtitle}>{description}</Text>\n          </View>\n        </View>\n        \n        <View style={styles.section}>\n         <View style={styles.productInfo}>\n           <Text style={styles.productTitle}>{selectedProduct?.name}</Text>\n           <Text style={styles.productSubtitle}>{description.length > 11 ? description.slice(0, 11) + '...' : description}\n           </Text>\n         </View>\n       </View>\n\n        <View style={styles.section}>\n          <View style={styles.priceSection}>\n            <Text style={styles.priceLabel}>Price</Text>\n            <Text style={styles.divider}>|</Text>\n            <View style={styles.priceInfo}>\n              <Text style={styles.price}>{convertToCurrency(selectedProduct?.price ?? 10000)}</Text>\n              <Text style={styles.description}>\n                {description}\n              </Text>\n            </View>\n          </View>\n        </View>\n\n\n        <GlitterButton onPress={handlePress} buttonText={'Add To Cart'} />\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default ProductDetailsPageVThree;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#FFFFFF',\n    padding: 16,\n  },\n  imageContainer: {\n    position: 'relative',\n  },\n  productImage: {\n    width: '100%',\n    height: 400,\n    borderRadius: 10,\n    marginBottom: 20,\n  },\n  textOverlay: {\n    position: 'absolute',\n    top: 20,\n    left: 20,\n    right: 20,\n  },\n\n  productInfo: {\n    marginBottom: 20,\n  },\n  productTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#000000',\n  },\n  productSubtitle: {\n    fontSize: 16,\n    color: '#7D7D7D',\n    marginTop: 5,\n  },\n  overlayTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 5,\n  },\n  overlaySubtitle: {\n    fontSize: 16,\n    color: '#FFFFFF',\n  },\n  section: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 10,\n    padding: 16,\n    marginBottom: 20,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000000',\n    marginBottom: 10,\n  },\n  colorOptions: {\n    flexDirection: 'row',\n  },\n  colorCircle: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    marginRight: 10,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n  },\n  selectedColorCircle: {\n    borderWidth: 2,\n    borderColor: '#000000',\n  },\n  priceSection: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  priceLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000000',\n    marginRight: 10, // Added margin to separate label from price\n  },\n  divider: {\n    fontSize: 16,\n    color: '#E0E0E0',\n    marginHorizontal: 10, // Divider spacing\n  },\n  priceInfo: {\n    flex: 1,\n  },\n  price: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#000000',\n    marginBottom: 5,\n  },\n  description: {\n    fontSize: 14,\n    color: '#7D7D7D',\n    flexWrap: 'wrap',\n  },\n  buyButton: {\n    backgroundColor: '#FFFFFF',\n    borderWidth: 2,\n    borderColor: '#000000',\n    borderRadius: 25,\n    paddingVertical: 15,\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  buyButtonText: {\n    color: '#000000',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n\n\n\n\n\n\n// import React, { FC, useContext, useState } from 'react';\n// import { View, Text, Image, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\n// import { Ionicons } from '@expo/vector-icons';\n// import { COLORS, SIZES } from '@/utils/theme'; // Adjust based on your theme structure\n// import { CartContext } from '@/contexts/CartContext';\n// import { useClientProduct } from '@/contexts/ClientProductContext';\n// // import SizesView from '@/components/card/SizesView';\n// import ProductColorPickerView from '@/components/views/ProductColorPickerView';\n// import SizesView from '@/components/views/SizesView';\n// import { ProductModelProps } from '@/models/ProductModelProps';\n// import convertToCurrency from '@/hooks/convertToCurrency';\n\n// const ProductDetailsPageVThree: FC<ProductModelProps> = (props) => {\n//   const [selectedColor, setSelectedColor] = useState<string | null>(null);\n//   const [selectedSize, setSelectedSize] = useState<string | null>(null);\n//   const { addToCart } = useContext(CartContext);\n//   const { selectedProduct } = useClientProduct();\n\n//   const colors = ['#F5F5DC', '#000000', '#A0522D'];\n//   const sizes = ['S', 'M', 'L', 'XL', 'XXL'];\n\n//   const description = selectedProduct?.description ?? \"\"\n//   return (\n//     <View style={{backgroundColor: \"white\"}}>\n//     <ScrollView contentContainerStyle={styles.container}>\n//       <Image \n//         source={{ uri: selectedProduct?.images[0] }} // Replace with actual image URI\n//         style={styles.productImage}\n//       />\n      \n//       <View style={styles.section}>\n//         <View style={styles.productInfo}>\n//           <Text style={styles.productTitle}>{selectedProduct?.name}</Text>\n//           <Text style={styles.productSubtitle}>{description.length > 11 ? description.slice(0, 11) + '...' : description}\n//           </Text>\n//         </View>\n//       </View>\n\n\n\n\n// {/* Variants  */}\n// {/* <ProductColorPickerView colors={colors} selectedColor={selectedColor} onColorSelect={setSelectedColor} /> */}    \n// {/* <SizesView sizes={sizes} selectedSize={selectedSize} onSizeSelect={setSelectedSize} /> */}\n\n\n//       <View style={styles.section}>\n//       <View style={styles.priceSection}>\n//         <Text style={styles.priceLabel}>Price</Text>\n\n//         <Text style={styles.divider}>|</Text>\n//         <View style={styles.priceInfo}>\n//         <Text style={styles.price}>{ convertToCurrency(selectedProduct?.price ?? 10000) }</Text>\n\n//           <Text style={styles.description}>\n//             {selectedProduct?.description ?? \"\"}\n//           </Text>\n//         </View>\n//       </View>\n//     </View>\n//       <TouchableOpacity style={styles.buyButton} onPress={() => {\n//           if (selectedProduct) {\n//             addToCart(selectedProduct);\n\n//           }\n//       }}>\n//         <Text style={styles.buyButtonText}>Add To Cart</Text>\n//       </TouchableOpacity>\n//     </ScrollView>\n//     </View>\n//   );\n// };\n\n// export default ProductDetailsPageVThree;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flexGrow: 1,\n//     backgroundColor: '#FFFFFF',\n//     padding: 16,\n//   },\n//    divider: {\n//     fontSize: 16,\n//     color: '#E0E0E0',\n//     marginHorizontal: 10, // Divider spacing\n//   },\n//   productImage: {\n//     width: '100%',\n//     height: 400,\n//     borderRadius: 10,\n//     marginBottom: 20,\n//   },\n//   section: {\n//     borderWidth: 1,\n//     borderColor: '#E0E0E0',\n//     borderRadius: 10,\n//     padding: 16,\n//     marginBottom: 20,\n//   },\n//   productInfo: {\n//     marginBottom: 20,\n//   },\n//   productTitle: {\n//     fontSize: 22,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   productSubtitle: {\n//     fontSize: 16,\n//     color: '#7D7D7D',\n//     marginTop: 5,\n//   },\n//   sectionTitle: {\n//     fontSize: 16,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//     marginBottom: 10,\n//   },\n//   colorOptions: {\n//     flexDirection: 'row',\n//   },\n//   colorCircle: {\n//     width: 30,\n//     height: 30,\n//     borderRadius: 15,\n//     marginRight: 10,\n//     borderWidth: 1,\n//     borderColor: '#E0E0E0',\n//   },\n//   selectedColorCircle: {\n//     borderWidth: 2,\n//     borderColor: '#000000',\n//   },\n//   sizeOptions: {\n//     flexDirection: 'row',\n//     justifyContent: 'space-between',\n//   },\n//   sizeButton: {\n//     paddingVertical: 8,\n//     paddingHorizontal: 16,\n//     borderWidth: 1,\n//     borderColor: '#E0E0E0',\n//     borderRadius: 5,\n//   },\n//   selectedSizeButton: {\n//     backgroundColor: '#000000',\n//   },\n//   sizeText: {\n//     fontSize: 14,\n//     color: '#000000',\n//   },\n//   selectedSizeText: {\n//     color: '#FFFFFF',\n//   },\n//   priceSection: {\n//     flexDirection: 'row',\n//     alignItems: 'center',\n//     justifyContent: 'space-between',\n//   },\n//   priceLabel: {\n//     fontSize: 16,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//   },\n//   priceInfo: {\n//     flex: 1, // Allows priceInfo to take up remaining space\n//   },\n//   price: {\n//     fontSize: 28,\n//     fontWeight: 'bold',\n//     color: '#000000',\n//     marginRight: 10,\n//   },\n//   descriptionContainer: {\n//     flex: 1,\n//   },\n//   description: {\n//     fontSize: 14,\n//     color: '#7D7D7D',\n//     flexWrap: 'wrap', // Allows text to wrap within the container\n//   },\n//   buyButton: {\n//     backgroundColor: '#FFFFFF',\n//     borderWidth: 2,\n//     borderColor: '#000000',\n//     borderRadius: 25,\n//     paddingVertical: 15,\n//     alignItems: 'center',\n//     marginTop: 20, // Added margin to ensure it's visible\n//   },\n//   buyButtonText: {\n//     color: '#000000',\n//     fontSize: 18,\n//     fontWeight: 'bold',\n//   },\n// });\n","import {\n  ActivityIndicator,\n  FlatList,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n} from \"react-native\";\nimport React from \"react\";\nimport { useAuth } from \"../../../../contexts/AuthContext\";\nimport { COLORS, SIZES } from \"@/utils/theme\";\nimport ProductCardView from \"@/components/card/ProductCardView\";\nimport { ProductModelProps } from \"@/models/ProductModelProps\";\n// import { useClientProduct } from \"@/contexts/ClientProductContext\";\nimport { CONSTANTS } from \"@/utils/constants\";\nimport { useClientProduct } from \"@/contexts/ClientProductContext\";\n\nexport interface ClientStateProps {\n  client: boolean;\n  // storeID: string\n}\n\nconst ProductRow: React.FC<ClientStateProps> = (props) => {\n  const { authState } = useAuth();\n  //const storeID = props.storeID // client ? authState?.user?.store_owner_id || '' : CONSTANTS.store_id;\n  const email = authState?.user?.email || '';\n  const { products, selectedProduct, selectProduct, isLoading, error } = useClientProduct();\n\n  const handleProductSelect = (product: ProductModelProps) => {\n    selectProduct(product);\n  };\n\n  return (\n    <View style={styles.container}>\n      {isLoading ? (\n        <ActivityIndicator size=\"large\" color={COLORS.primary} />\n      ) : error ? (\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorText}>Error Loading Data: {error}</Text>\n        </View>\n      ) : (\n        <>\n          <FlatList\n            keyExtractor={(item: ProductModelProps) => item.id.toString()}\n            data={products}\n            renderItem={({ item }) => (\n              <TouchableOpacity onPress={() => handleProductSelect(item)}>\n                <ProductCardView product={item} />\n              </TouchableOpacity>\n            )}\n            horizontal\n            contentContainerStyle={{ columnGap: SIZES.medium }}\n          />\n          {/* {selectedProduct && (\n            <View style={styles.selectedProductContainer}>\n              <Text style={styles.selectedProductText}>\n                Selected Product: {selectedProduct.name}\n              </Text>\n            </View>\n          )} */}\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default ProductRow;\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: SIZES.medium,\n    marginLeft: 12,\n  },\n  errorContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  errorText: {\n    color: COLORS.red,\n    fontSize: SIZES.medium,\n  },\n  selectedProductContainer: {\n    marginTop: SIZES.medium,\n    padding: SIZES.medium,\n    backgroundColor: COLORS.gray2,\n    borderRadius: SIZES.small,\n  },\n  selectedProductText: {\n    fontSize: SIZES.large,\n    fontWeight: 'bold',\n  },\n});\n","import { useClientStore } from '@/contexts/ClientStoreContext'\nimport { COLORS, SIZES } from '@/utils/theme'\nimport { StyleSheet, Text, View } from 'react-native'\n\nconst TopSectionHeaderV1 = () => {\n  const { store } = useClientStore()\n  // const { data: store } = useFetchObject<StoreModelProps>(() => getStore(CONSTANTS.store_id));\n  // const { data: store } = useFetchObject<StoreProps>(() => getStore(authState?.user?.id));\n\n  return (\n    <View style={styles.container}>\n        <Text style={styles.line1}>{store?.store_name}</Text>\n        <Text style={[styles.line2, { marginTop: 0, color: COLORS.black }]}>We Build Apps</Text>\n    </View>\n  )\n}\n\n\nconst TopSectionHeaderV2 = () => {\n    return (\n      <View style={styles.container}>\n          <Text style={[styles.welcomeTxtStyle, { marginTop: 0, color: COLORS.black }]}>Apps For</Text>\n          <Text style={[styles.welcomeTxtStyle, { marginTop: 0, color: COLORS.primary }]}>Mankind</Text>\n      </View>\n    )\n  }\n\n  \n  const TopSectionHeaderV3 = () => {\n    return (\n      <View style={styles.container}>\n          <Text style={[styles.welcomeTxtStyle, { marginTop: 0, color: COLORS.black }]}>Apps For</Text>\n          <Text style={[styles.welcomeTxtStyle, { marginTop: 0, color: COLORS.primary }]}>Mankind</Text>\n      </View>\n    )\n  }\n\n  \n\n  export { TopSectionHeaderV1, TopSectionHeaderV2, TopSectionHeaderV3 };\n\nconst styles = StyleSheet.create({\n    container: {\n        width: \"100%\",\n        marginLeft: 15\n      },\n      line1: {\n        marginTop: 0, \n        color: COLORS.gray , \n        fontSize: 14\n      }, \n      line2: {\n        marginTop: 0, \n        color: COLORS.black , \n        fontSize: 33,\n        fontWeight: 700\n      },\n      line3: {\n        marginTop: 0, \n        color: COLORS.black , \n        fontSize: 14\n      },\n      welcomeTxtStyle: {\n        fontFamily: \"bold\",\n        fontSize: SIZES.xxLarge -7, // Example value, replace with your own\n        marginTop: 0, // Example value, replace with your own\n        color:  '#000', // Use provided color or fallback to black if not provided\n          marginHorizontal: 12\n      },\n})","import React, { FC, FunctionComponent, useRef } from 'react';\nimport { Animated, Dimensions, FlatList, Image, StyleSheet, View } from 'react-native';\nimport { CONSTANTS } from '@/utils/constants';\n\nimport { useClientStore } from '@/contexts/ClientStoreContext';\n\n// const images: string[] = [\n//   'https://appsformankind-assets.s3.amazonaws.com/Collections/Furniture/Furniture_1.jpg',\n//   'https://appsformankind-assets.s3.amazonaws.com/Collections/Furniture/Furniture_3.jpg',\n//   'https://appsformankind-assets.s3.amazonaws.com/Collections/Furniture/Furniture_4.jpg',\n// ];\n\nconst { width } = Dimensions.get('screen');\n\nconst Carousel: FunctionComponent = () => {\n  const animatedValue = useRef(new Animated.Value(0)).current;\n  // const { data: mankindStore } = useFetchObject<StoreModelProps>(() => getStore(CONSTANTS.store_id));\n  // const { data: store } = useFetchObject<StoreProps>(() => getStore(authState?.user?.id));\n\n  const { store : mankindStore } = useClientStore()\n  const storeImages: string[] = [\n    mankindStore?.images.about_object_image ?? CONSTANTS.holderCarouselImageOne,\n    mankindStore?.images.doubleImageHero_left_image ?? CONSTANTS.holderCarouselImageTwo,\n    mankindStore?.images.profile_image ?? CONSTANTS.holderCarouselImageThree\n  ]\n\n  return (\n    <View style={style.container}>\n      <View style={style.topContainer}>  \n        <Animated.FlatList\n          data={storeImages}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          onScroll={Animated.event(\n            [{ nativeEvent: { contentOffset: { x: animatedValue } } }],\n            { useNativeDriver: false },\n          )}\n          pagingEnabled={true}\n          keyExtractor={(_, index) => index.toString()}\n          renderItem={({ item }) => {\n            return (\n              <View style={style.imageContainer}>\n                <Image style={style.image} source={{ uri: item ? item : CONSTANTS.holderImage }} />\n              </View>\n            );\n          }}\n        />\n      </View>\n      <View style={style.bottomContainer}>\n        <FlatList\n          horizontal\n          data={storeImages}\n          keyExtractor={(_, index) => index.toString()}\n          renderItem={({ index }) => {\n            const inputRange = [\n              (index - 1) * width,\n              index * width,\n              (index + 1) * width,\n            ];\n            //  [ middle none selected color , selected color, none selected color  ]\n            const colorOutputRange = ['#000', '#fff', '#000'];\n            const scaleOutputRange = [1, 2, 1];\n            const dotScale = animatedValue.interpolate({\n              inputRange,\n              outputRange: scaleOutputRange,\n              extrapolate: 'clamp',\n            });\n            const color = animatedValue.interpolate({\n              inputRange,\n              outputRange: colorOutputRange,\n              extrapolate: 'clamp',\n            });\n            return (\n              <View  style={[style.dotContainer, { borderStartColor:  'clear'}]}>\n\n                <PagingDot color={color} scale={dotScale} />\n               \n\n              </View>\n            );\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst PagingDot: FC<{ scale: any, color: any }> = ({ scale, color }) => {\n  return (\n    <Animated.View\n      style={[style.pagingDot, { backgroundColor: color, transform: [{ scale }] }]}\n    />\n  );\n};\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 3,\n  },\n  topContainer: {\n    flex: 2,\n  },\n  bottomContainer: {\n    flex: 1,\n    width,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    position: 'absolute', \n   bottom: 10\n  },\n  imageContainer: {\n    justifyContent: 'flex-end',\n    // paddingBottom: 40,\n    alignItems: 'center',\n    width,\n  },\n  image: {\n    width: '92%',\n    height: 220,\n    borderRadius: 15,\n  },\n  pagingDot: {\n    width: 7,\n    height: 7,\n    borderRadius: 7,\n    borderWidth: 2,\n    // borderColor: \"#000\",\n  },\n  dotContainer: {\n   width: 30,\n   padding: 10,\n  \n  },\n});\n\nexport default Carousel;\n\n\n","import { Pressable, StyleSheet, Text, TouchableOpacity, View } from 'react-native'\nimport React from 'react'\nimport { COLORS, SIZES } from '@/utils/theme'\nimport { Ionicons } from \"@expo/vector-icons\"\nimport { Link } from 'expo-router'\nimport { useClientStore } from '@/contexts/ClientStoreContext'\nimport { ROUTES } from '@/utils/Routes'\n// import EditScreenInfo from '../EditScreenInfo'\n\nconst SectionHeader = () => {\n    const { store } = useClientStore()\n\n  return (\n    <View style={styles.container}>\n        <View style={styles.header}>\n            <Text style={styles.headerTitle}>{store?.store_type ?? \"\"}</Text>\n            <Link href={ROUTES.products as never} asChild>\n            <TouchableOpacity>\n            {/* <TouchableOpacity onPress={() => navigation.navigate(\"ProductDetails\", { item })}> */}\n                    <Ionicons name='grid' size={SIZES.xLarge} color={COLORS.primary}/>\n            </TouchableOpacity>\n            </Link>\n        </View>\n   \n    </View>\n  )\n}\n\nexport default SectionHeader\n\nconst styles = StyleSheet.create({\n    container: {\n        marginTop: SIZES.medium,\n        // marginBottom: SIZES.xSmall,\n        marginHorizontal: 12,\n    },\n    header: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n\n    },\n    headerTitle: {\n       fontWeight: 'bold',\n        fontSize: SIZES.xLarge -2\n    }\n})\n\n\n","import React from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  ScrollView,\n  StyleSheet,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { AWS_HOLDER_IMAGE } from \"@/utils/api\";\n// import Colors from \"@/constants/Colors\";\n// import { COLORS } from \"@/utils/theme\";\n// import { useAuth } from \"@/contexts/AuthContext\";\n\nconst SearchBarVOne = () => {\n  return (\n    <View>\n    <View style={styles.container}>\n      <View style={styles.searchSection}>\n        <TextInput\n          style={styles.searchInput}\n          placeholder=\"Search keywords\"\n          placeholderTextColor=\"#A0A0A0\"\n        />\n      </View>\n\n      <View style={styles.filterSection}>\n        <TouchableOpacity>\n          <Ionicons\n            name=\"options-outline\"\n            size={24}\n            color=\"black\"\n            style={styles.filterIcon}\n          />\n        </TouchableOpacity>\n      </View>\n\n      </View>\n    </View>\n  );\n};\n\nexport default SearchBarVOne;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n  },\n\n  talentCount: {\n    fontSize: 14,\n    color: \"#A0A0A0\",\n    marginBottom: 20,\n  },\n  searchSection: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    // backgroundColor: \"#transparent\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n    width: \"80%\",\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: 16,\n    color: \"#000\",\n  },\n  filterSection: {\n    // marginLeft: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    marginLeft: 15,\n    // backgroundColor: \"#FFFFFF\",\n    // backgroundColor: \"#transparent\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n  },\n  filterIcon: {\n    paddingLeft: 3,\n    paddingRight: 3,\n    // marginLeft: 10,\n    // flexDirection: \"row\",\n    // alignItems: \"center\",\n    // marginBottom: 20,\n    // backgroundColor: \"#FFFFFF\",\n    // borderRadius: 10,\n    // paddingHorizontal: 10,\n    // paddingVertical: 12,\n  },\n\n  arrow: {\n    marginLeft: 10,\n    marginTop: 3,\n  },\n});\n","import React, { FC } from 'react'\nimport { TouchableOpacity, Text, View , ScrollView } from 'react-native'\n// import { SafeAreaView } from 'react-native-safe-area-context'\nimport { StyleSheet } from \"react-native\";\n// import { COLORS, SIZES } from \"../utils/theme\";\n\n\nimport ProductRow from '@/components/other/cards/other/ProductRow';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { TopSectionHeaderV1 } from '@/components/pages/home/TopSectionHeader';\nimport Carousel from '@/components/pages/home/Carousel';\nimport SectionHeader from '@/components/pages/home/Headings';\n// import { useClientStore } from '@/contexts/ClientStoreContext';\n// import SearchBar from '../search/SearchBar';\nimport SearchBarVOne from '../search/SearchBarVOne';\n\n\nconst HomeDesignOne = () => {\n    // const { store } = useClientStore()\n\n    return (\n \n        <ScrollView \n          showsVerticalScrollIndicator={false} \n          style={{\n            backgroundColor: 'white',\n            paddingTop: 10\n\n            \n          }}>\n            <TopSectionHeaderV1 />\n            <SearchBarVOne />\n            <Carousel />\n            <SectionHeader /> \n           <ProductRow client={false} />\n           <View style={{paddingBottom: 200}}></View>\n\n        </ScrollView>\n  \n\n  )\n}\n\n\nexport default HomeDesignOne \n\n\n\nconst styles = StyleSheet.create({\n  textStyle: {\n      fontFamily: \"bold\",\n      fontSize: 40\n  },\n  appBarWrapper: {\n      marginHorizontal: 22,\n      marginTop: SIZES.small\n  },\n  appBar: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n  },\n  location: {\n      fontFamily: \"semibold\",\n      fontSize: SIZES.medium,\n      color: COLORS.gray\n  },\n  cartCount: {\n      position: \"absolute\",\n      bottom: 16,\n      width: 16,\n      height: 16,\n      borderRadius: 8,\n      alignItems: \"center\",\n      backgroundColor: \"green\",\n      justifyContent: \"center\",\n      zIndex: 999\n  },\n  cartNumber: {\n      fontFamily: \"regular\",\n      fontWeight: \"600\",\n      fontSize: 10,\n      color: COLORS.lightWhite\n  }\n\n})\n// function useClientStore(): { store: any; } {\n//     throw new Error('Function not implemented.');\n// }\n\n","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst HomeDesignTwo = () => {\n  return (\n    <View>\n      <Text>HomeDesignTwo</Text>\n    </View>\n  )\n}\n\nexport default HomeDesignTwo\n\nconst styles = StyleSheet.create({})\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from \"react\";\n// import {\n//   View,\n//   Text,\n//   StyleSheet,\n//   Image,\n//   TouchableOpacity,\n//   Dimensions,\n//   ScrollView,\n// } from \"react-native\";\n// import { useClientStore } from \"@/contexts/ClientStoreContext\";\n// import TopHomeSeaction from \"./TopHomeSeaction\";\n// import ProductRow from \"@/components/other/cards/other/ProductRow\";\n// import Carousel from \"@/components/pages/home/Carousel\";\n// import SectionHeader from \"@/components/pages/home/Headings\";\n// import { AWS_HOLDER_IMAGE } from \"@/utils/api\";\n// import { router } from \"expo-router\";\n// import { ROUTES } from \"@/utils/Routes\";\n\n// const { width } = Dimensions.get(\"window\");\n\n// const HomeDesignTwo = () => {\n//   const { store } = useClientStore();\n\n//   return (\n//     <ScrollView\n//       showsVerticalScrollIndicator={false}\n//       style={{\n//         backgroundColor: \"white\",\n//         paddingTop: 30,\n//         paddingBottom: 200,\n//       }}\n//     >\n//       <TopHomeSeaction />\n//       <SectionHeader />\n//       <ProductRow client={true} />\n//       <View style={styles.card}>\n//         <Image\n//           source={{ uri: store?.images.welcome_image ?? AWS_HOLDER_IMAGE }} \n//           style={styles.profileImage}\n//         />\n//         <Text style={styles.name}>JACOB JAMES</Text>\n//         <Text style={styles.title}>\n//           Founder of {store?.store_name ?? \"\"} Co.\n//         </Text>\n//         <TouchableOpacity\n//           style={styles.button}\n//           onPress={() => router.push(ROUTES.products as never)}\n//         >\n//           <Text style={styles.buttonText}>EXPLORE PRODUCTS</Text>\n//         </TouchableOpacity>\n//         <Text style={{ padding: 10, fontSize: 40, paddingBottom: 30 }}> 🌿</Text>\n//         <Text style={styles.description}>\n//           Leading the way in natural wellness with a focus on the incredible\n//           benefits of sea moss...\n//         </Text>\n//         {/* <Text style={styles.healthTip}>\n//           🌿 Health Tip: Sea Moss is packed with 92 essential minerals that can support overall wellness, improve skin health, and boost your immune system. Add it to your smoothies or meals for a natural health boost!\n//         </Text> */}\n//       </View>\n\n//       <Carousel />\n\n//       <View style={{ paddingTop: 40 }} />\n//     </ScrollView>\n//   );\n// };\n\n// export default HomeDesignTwo;\n\n// // card\n// const styles = StyleSheet.create({\n//   card: {\n//     // width: width * 0.9,\n//     backgroundColor: '#fff',\n//     borderRadius: 10,\n//     padding: 20,\n//     alignItems: 'center',\n//     shadowColor: '#000',\n//     elevation: 3,\n//     marginVertical: 10,\n//   },\n//   profileImage: {\n//     width: width - 40,\n//     height: 500,\n//     borderRadius: 10,\n//     marginBottom: 20,\n\n//   },\n//   healthTip: {\n//     marginTop: 10,\n//     fontSize: 14,\n//     color: 'green',\n//     fontStyle: 'italic',\n//   },  \n//   name: {\n//     fontSize: 24,\n//     fontWeight: '900',\n//     textAlign: 'center',\n//     marginBottom: 10,\n//   },\n//   title: {\n//     fontSize: 16,\n//     color: '#6e6e6e',\n//     textAlign: 'center',\n//     marginBottom: 20,\n//   },\n//   button: {\n//     // fontWeight: '900',\n//     backgroundColor: '#000',\n//     paddingVertical: 15,\n//     paddingHorizontal: 30,\n//     borderRadius: 15,\n//     marginBottom: 20,\n//   },\n//   buttonText: {\n//     color: '#fff',\n//     fontWeight: 'bold',\n//     fontSize: 16,\n//   },\n//   description: {\n//     fontSize: 14,\n//     color: '#6e6e6e',\n//     textAlign: 'center',\n//   },\n// });","import React, { useState } from 'react';\nimport { SafeAreaView, View, TextInput, TouchableOpacity, Text, FlatList, StyleSheet, Dimensions } from 'react-native';\nimport { Feather, Ionicons } from '@expo/vector-icons';\n// import { getProducts } from '../../../api/productsApi';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { COLORS, SIZES } from '@/utils/theme';\nimport { CONSTANTS } from '@/utils/constants';\nimport { ProductModelProps } from '@/models/ProductModelProps';\nimport ProductCardV2 from '@/components/card/ProductCardV2';\nimport { useClientProduct } from '@/contexts/ClientProductContext';\n\nconst { width } = Dimensions.get('window');\n\nconst ProductSearchScreen = () => {\n  const { authState } = useAuth();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<ProductModelProps[]>([]);\n\n  const storeID = authState?.user ? authState.user.store_owner_id : '';\n  const email = authState?.user ? authState.user.email : '';\n\n  const { products } = useClientProduct();\n\n  const handleSearch = (text: string) => {\n    try {\n      setSearchTerm(text);\n      const results = products.filter((product: ProductModelProps) =>\n        product.name.toLowerCase().includes(text.toLowerCase())\n      );\n      setSearchResults(results);\n    } catch (error) {\n      console.log(\"Failed to get products\", error);\n    }\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <View style={styles.searchContainer}>\n        <TouchableOpacity>\n          <Ionicons \n            name='camera-outline' \n            size={SIZES.xLarge} \n            style={styles.searchIcon}\n          />\n        </TouchableOpacity>\n\n        <View style={styles.searchWrapper}>\n          <TextInput \n            style={styles.searchInput} \n            value={searchTerm}\n            onChangeText={handleSearch}\n            placeholder='What are you looking for'\n          />\n        </View>\n\n        <View>\n          <TouchableOpacity style={styles.searchBtn} onPress={() => handleSearch(searchTerm)}>\n            <Feather name='search' size={24} color={COLORS.offwhite}/>\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      {/* Search result */}\n      <FlatList\n        keyExtractor={(item: ProductModelProps) => item.id.toString()}\n        data={searchTerm === '' ? products : (searchResults.length === 0 ? products : searchResults)}\n        renderItem={({ item }) => (\n          <View style={styles.gridLayout}>\n            <ProductCardV2 {...item} />\n          </View>\n        )}\n        numColumns={2}\n        columnWrapperStyle={styles.row}\n        contentContainerStyle={{ paddingHorizontal: 12 }}\n      />\n    </SafeAreaView>\n  );\n};\n\nexport default ProductSearchScreen;\n\nexport const styles = StyleSheet.create({\n  gridLayout: {\n    flex: 1,\n    margin: 8, // Adjust the margin to space items evenly\n  },\n  row: {\n    justifyContent: 'space-between', // Ensure even spacing between items\n  },\n  searchContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    marginHorizontal: SIZES.small,\n    backgroundColor: COLORS.secondary,\n    borderRadius: SIZES.medium,\n    marginVertical: SIZES.medium,\n    height: 50\n  },\n  searchIcon: {\n    marginHorizontal: 10,\n    color: COLORS.gray,\n    marginTop: SIZES.small\n  },\n  searchWrapper:{ \n    flex: 1,\n    backgroundColor: COLORS.secondary,\n    marginRight: SIZES.small,\n    borderRadius: SIZES.small\n  },\n  searchInput: {\n    fontFamily: \"regular\",\n    width: \"100%\",\n    height: \"100%\",\n    paddingHorizontal: SIZES.small\n  },\n  searchBtn: {\n    width: 50,\n    height: \"100%\",\n    borderRadius: SIZES.medium,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.primary\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { SafeAreaView, View, TextInput, TouchableOpacity, Text, FlatList, StyleSheet, Dimensions } from 'react-native';\n// import { Feather, Ionicons } from '@expo/vector-icons';\n// import { getProducts } from '../../../api/productsApi';\n// import { useAuth } from '@/contexts/AuthContext';\n// import { COLORS, SIZES } from '@/utils/theme';\n// // import ProductListItem from './ProductListItem';\n// import { CONSTANTS } from '@/utils/constants';\n// import { ProductModelProps } from '@/models/ProductModelProps';\n// // import { useClientProduct } from '@/contexts/ClientProductContext';\n// import ProductListItem from './ProductSearchTile';\n// import ProductCardV2 from '../../library/card/ProductCardV2';\n// import { useClientProduct } from '@/contexts/ClientProductContext';\n\n// const { width } = Dimensions.get('window');\n\n\n// const ProductSearchScreen = () => {\n//   const { authState } = useAuth();\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [searchResults, setSearchResults] = useState<ProductModelProps[]>([]);\n\n//   const storeID = authState?.user ? authState.user.store_owner_id : '';\n//   const email = authState?.user ? authState.user.email : '';\n\n//   const { products } = useClientProduct();\n\n//   const handleSearch = (text: string) => {\n//     try {\n//       setSearchTerm(text);\n//       const results = products.filter((product: ProductModelProps) =>\n//         product.name.toLowerCase().includes(text.toLowerCase())\n//       );\n//       setSearchResults(results);\n//     } catch (error) {\n//       console.log(\"Failed to get products\", error);\n//     }\n//   };\n\n//   return (\n//     <SafeAreaView style={{ flex: 1 }}>\n//       <View style={styles.searchContainer}>\n//         <TouchableOpacity>\n//           <Ionicons \n//             name='camera-outline' \n//             size={SIZES.xLarge} \n//             style={styles.searchIcon}\n//           />\n//         </TouchableOpacity>\n\n//         <View style={styles.searchWrapper}>\n//           <TextInput \n//             style={styles.searchInput} \n//             value={searchTerm}\n//             onChangeText={handleSearch}\n//             placeholder='What are you looking for'\n//           />\n//         </View>\n\n//         <View>\n//           <TouchableOpacity style={styles.searchBtn} onPress={() => handleSearch(searchTerm)}>\n//             <Feather name='search' size={24} color={COLORS.offwhite}/>\n//           </TouchableOpacity>\n//         </View>\n//       </View>\n\n//       {/* Search result */}\n//       {searchTerm === '' ? (\n//         <FlatList\n//           keyExtractor={(item: ProductModelProps) => item.id.toString()}\n//           data={products}\n//           // renderItem={({ item }) => <ProductListItem {...item} />}\n//           renderItem={({ item }) => (\n          \n//             <View style={styles.gridLayout}>\n//           <ProductCardV2 {...item} />\n//           </View>\n\n//           )}\n//           contentContainerStyle={{ marginHorizontal: 12 }}\n//         />\n//       ) : (\n//         <FlatList\n//           keyExtractor={(item: ProductModelProps) => item.id.toString()}\n//           data={searchResults.length === 0 ? products : searchResults}\n//           // renderItem={({ item }) => <ProductListItem {...item} />}\n//           renderItem={({ item }) => (\n          \n//             <View style={styles.gridLayout}>\n//           <ProductCardV2 {...item} />\n//           </View>\n\n//           )}\n//           contentContainerStyle={{ marginHorizontal: 12 }}\n//         />\n//       )}\n//     </SafeAreaView>\n//   );\n// };\n\n// export default ProductSearchScreen;\n\n// export const styles = StyleSheet.create({\n//   gridLayout: {\n//     width: (width / 2) - 18, // Adjust the width to leave space for margins\n//     marginBottom: 12,\n//   },\n//     searchContainer: {\n//         flexDirection: \"row\",\n//         justifyContent: \"center\",\n//         alignContent: \"center\",\n//         marginHorizontal: SIZES.small,\n//         backgroundColor: COLORS.secondary,\n//         borderRadius: SIZES.medium,\n//         marginVertical: SIZES.medium,\n//         height: 50\n\n//     },\n//     searchIcon: {\n//         marginHorizontal: 10,\n//         color: COLORS.gray,\n//         marginTop: SIZES.small\n//     },\n//     searchWrapper:{ \n//         flex: 1,\n//         backgroundColor: COLORS.secondary,\n//         marginRight: SIZES.small,\n//         borderRadius: SIZES.small\n//     },\n//     searchInput: {\n//         fontFamily: \"regular\",\n//         width: \"100%\",\n//         height: \"100%\",\n//         paddingHorizontal: SIZES.small\n//     },\n//     searchBtn: {\n//         width: 50,\n//         height: \"100%\",\n//         borderRadius: SIZES.medium,\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n//         backgroundColor: COLORS.primary\n//     }\n// })\n"],"names":["MyButton","onPress","title","buttonStyle","textStyle","_jsx","TouchableOpacity","style","styles","button","children","Text","text","StyleSheet","create","backgroundColor","padding","borderRadius","alignItems","justifyContent","color","fontSize","fontWeight","CartContext","createContext","carts","addToCart","decreaseFromCart","totalSum","totalTax","totalShipping","grandTotal","deleteItemFromCart","quantity","clearData","CartProvider","setCarts","useState","setTotalSum","setTotalShipping","setQuantity","useEffect","loadCartItems","async","storedCarts","AsyncStorage","getItem","parsedCarts","JSON","parse","calculateTotalSum","calculateGrandTotal","error","console","total","reduce","sum","item","price","calculateShipping","value","itemExistIndex","findIndex","cart","id","updatedCarts","setItem","stringify","newCartItem","newCartItems","filter","removeItem","log","Provider","height","width","Dimensions","get","COLORS","light","background","tint","tabIconDefault","tabIconSelected","cardBackground","cardText","cardSecondaryText","cardPrice","cardBorder","dark","primary","secondary","tertiary","darkGray","green","forestGreen","lightGray","gray","gray2","gray3","offwhite","white","black","blue","red","orange","lightWhite","backgroundLight","backgroundMedium","backgroundDark","SIZES","xSmall","small","medium","large","xLarge","xxLarge","SHADOWS","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","CURRENCY_FORMATTER","Intl","NumberFormat","undefined","currency","convertToCurrency","number","format","VERSION","STORE_TYPE","ecom","blog","subscription","appointment","API_ID","BASE_URL","AWS_BASE_IMAGE","process","env","VITE_S3_ASSET_BUCKET_NAME","AWS_HOLDER_IMAGE","AWS_BASE_URL","AWS_BASE_URL_2","VITE_API_ID_2","VITE_REGION","AWS_VERIFY","VITE_API_ID","AWS_LOGIN_URL","AWS_ORDERS_URL","AWS_SUBSCRIBER_URL","CONSTANTS","appName","holderImageWelcome","holderImageProductCard","holderImageCollectionCard","holderImageOrderCard","holderUserImage","holderCarouselImageOne","holderCarouselImageTwo","holderCarouselImageThree","holderImage","mankind_store_id","store_id","merchant_id","publishableKeyLive","publishableKeyTest","createFetchClient","baseURL","defaultParams","defaultHeaders","fetchClient","endpoint","options","url","URL","params","URLSearchParams","Object","entries","forEach","key","append","toString","search","headers","Headers","response","fetch","ok","errorData","json","catch","Error","status","method","post","body","put","delete","TOKEN_KEY","USER_KEY","AUTHENTICATED_KEY","AuthContext","useAuth","context","useContext","authApi","tableName","showFilteredItems","AuthProvider","authState","setAuthState","user","token","authenticated","SecureStore","getItemAsync","userString","loadUserData","onRegister","useCallback","userData","uuid","v4","data","msg","onLogin","email","password","result","setItemAsync","onLogout","deleteItemAsync","updateUserProfile","updatedUser","updatedUserData","addToFavorites","itemId","updatedFavorites","favoriteItems","removeFromFavorites","fav","isFavorite","includes","productsApi","getProductsApi","storeID","Authorization","getProductApi","postProductApi","product","updateProductApi","deleteProductApi","ClientProductContext","useClientProduct","ClientProductProvider","products","setProducts","selectedProduct","setSelectedProduct","isLoading","setIsLoading","setError","getClientProducts","updateClientProduct","prevProducts","map","o","message","store_owner_id","fetchedProducts","addClientProduct","router","push","removeClientProduct","productId","selectProduct","ProductCardView","useNavigation","View","Link","href","asChild","_jsxs","container","imageContainer","Image","image","source","uri","images","details","numberOfLines","name","supplier","color_code","item_type","addBtn","Ionicons","size","marginEnd","borderWidth","borderColor","flex","overflow","marginTop","resizeMode","fontFamily","marginBottom","position","bottom","right","OrderCrudCard","navigation","navigate","orderImg","textContainer","orderTitle","flexDirection","alignContent","marginHorizontal","ProductCrudCard","productImg","productTitle","ProductCardV2","marginLeft","aspectRatio","BannerVOne","bannerSection","bannerTitle","bannerSubtitle","editPreferences","arrow","TextFieldVOne","label","secureTextEntry","editable","isPasswordVisible","setIsPasswordVisible","content","passwordContainer","input","iconContainer","paddingLeft","TextInput","prev","DeleteSectionView","deleteContainer","deleteLabel","deleteDescription","deleteButton","deleteButtonText","header","textAlign","Divider","divider","ProductListItem","Pressable","UserLoginTextFields","setEmail","setPassword","showPassword","setShowPassword","showAlert","Alert","alert","inputContainer","placeholder","onChangeText","keyboardType","autoCapitalize","autoComplete","forgotPasswordText","loginButton","replace","navError","loginButtonText","paddingHorizontal","paddingTop","logo","welcomeText","descriptionText","marginVertical","tabContainer","tab","paddingBottom","activeTab","borderBottomWidth","borderBottomColor","tabText","activeTabText","alignSelf","signupButton","termsText","marginRight","checkboxContainer","passwordCriteria","generateUUID","idLength","characters","i","charAt","Math","floor","random","UserRegisterTextFields","setName","confirmedpassword","setConfirmedPassword","showConfirmPassword","setShowConfirmPassword","prevState","store_ids","onboardingQ1","onboardingQ2","onboardingQ3","onboardingQ4","orders","affiliate_link","active","role","birthday","todo_completed","username","phone_number","gender","profile_image","address_city","address_state","location_history","current_notification","notifications","payment_due","payment_due_date","payment_due_day","payment_monthly_amount","device_id","device_os_version","device_model","device_ip_address","device_battery_level","device_battery_statue","device_network_connectio_type","loyalty_date","payment_history_total","subscription_id","paid_subscriber","newsletter_subscriber","notification_subscriber","left_review","review_stars","reviews","testimonials","notify_arn","owner_notify_arn","loginAction","storesApi","getStoresApi","getStoreApi","postStoreApi","store","updateStoreApi","deleteStoreApi","ClientStoreContext","useClientStore","ClientStoreProvider","setStore","selectedStore","setSelectedStore","getClientStore","addStore","newStore","removeStore","selectStore","RegisterComponentTwo","activeTabIsLogin","setActiveTabIsLogin","store_name","LoginComponentTwo","SAMPLE_ORDER_ITEMS","sku","total_price","length","weight","weight_unit","distance_unit","description","net_weight","value_amount","value_currency","origin_country","eccn_ear99","SAMPLE_ORDER_HISTORY","orderPlaced","orderEmailSent","orderPaymentReceived","inventoryCheck","orderProcessed","orderPackaged","orderShippingLabelGenerated","orderShipped","shippedDate","trackingNumber","deliveryConfirmed","orderDeliveryDate","orderReturned","orderReturnLabelGenerated","note","SAMPLE_FULL_ADDRESS","streetOne","streetTwo","city","state","zip","country","phone","is_residential","SAMPLE_PARCEL","mass_unit","metadata","test","SAMPLE_ORDER","stripe_id","index","order_status","items","userId","order_history","net_total","courier","shipping_label","return_label","from_address","to_address","parcel","type","coupon_code","referred_by","statement_descriptor","budget","order_placed_date","order_started_date","order_created_date","order_completed_date","tax","stripe_fee","afm_fee","shipping_cost","discount_amount","SAMPLE_PRODUCT","createdOn","on_sale","sale_price","slug","icon_name","category","included","materials","tags","brand","views","likes","isLiked","condition","features","variant_type","variant_selected","variants","inventory","value_price","product_id","variantInfo","last_updated","ingredients","userName","comment","rating","sizes","year_made","CoreLayout","Stack","screenOptions","headerShown","Screen","presentation","collectionsApi","getCollectionsApi","getCollectionApi","postCollectionApi","collection","updateCollectionApi","deleteCollectionApi","CollectionContext","useClientCollection","CollectionProvider","collections","setCollections","selectedCollection","setSelectedCollection","updateCollection","prevCollections","addCollection","removeCollection","collectionId","getClientCollections","fetchedCollections","selectCollection","ordersApi","getOrdersApi","getOrderApi","postOrderApi","order","updateOrderApi","deleteOrderApi","OrderContext","useClientOrder","OrderProvider","setOrders","selectedOrder","setSelectedOrder","updateOrder","prevOrders","addOrder","removeOrder","orderId","getClientOrders","fetchedOrders","selectOrder","AppProviders","RootLayout","colorScheme","useColorScheme","ThemeProvider","DarkTheme","DefaultTheme","useClientOnlyValue","server","client","TabBarIcon","props","FontAwesome","TabLayout","Tabs","tabBarActiveTintColor","tabBarIcon","AuthLayout","getMankindProductsApi","getMankindProductApi","postMankindProductApi","updateMankindProductApi","deleteMankindProductApi","MankindProductContext","useMankindProduct","MankindProductProvider","getMankindProducts","addProduct","removeProduct","mankindStoresApi","getMankindStoresApi","getMankindStoreApi","postMankindStoreApi","mankindStore","updateMankindStoreApi","deleteMankindStoreApi","MankindStoreContext","useMankindStore","MankindStoreProvider","getMankindStore","ThemeContext","useTheme","systemColorScheme","theme","setTheme","isDarkMode","getAuthToken","verify","login","getUsersApi","getClientUsersApi","updateUserApi","deleteUserApi","couponsApi","getCouponsApi","getCouponApi","postCouponApi","coupon","updateCouponApi","deleteCouponApi","inboxsApi","getInboxsApi","getInboxApi","postInboxApi","inbox","updateInboxApi","deleteInboxApi","paymentApi","getpayment","createPaymentIntent","paymentJsonProps","showStripeHostedPage","priceID","PAGES","onboarding_Page","login_Page","register_Page","products_Page","product_details_page","ROUTES","register","saveSecurely","jsonValue","fetchSecurely","formatPhoneNumber","phoneNumberString","cleanedPhoneNumber","formattedPhoneNumber","ExternalLink","target","e","Platform","OS","preventDefault","WebBrowser","openBrowserAsync","stripeConverter","amountInCents","useThemeColor","colorName","colorFromProps","lightColor","darkColor","otherProps","DefaultText","DefaultView","MonoText","EditScreenInfo","path","getStartedContainer","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","helpLink","helpLinkText","lineHeight","paddingVertical","CollectionPageVTwo","filteredProducts","toLowerCase","FlatList","horizontal","showsHorizontalScrollIndicator","keyExtractor","renderItem","categoryButton","selectedCollectionButton","categoryText","selectedCollectionText","contentContainerStyle","categoryContainer","categoryList","promoContainer","promoImage","promoTextContainer","promoTitle","promoSubtitle","promoDiscount","productListContainer","numColumns","productCard","productImage","productPrice","productName","productContainer","ListEmptyComponent","emptyMessage","margin","SettingsPage","useSafeAreaInsets","upperSection","ScrollView","section","sectionTitle","option","FontAwesome5","optionText","logoutButton","logoutText","LoginComponentOne","imgContainer","img","form","Button","gap","WelcomePageTwo","modalVisible","setModalVisible","StatusBar","barStyle","translucent","ImageBackground","backgroundImage","overlay","logoText","tagline","buttonContainer","buttonPrimary","buttonPrimaryText","buttonSecondary","buttonSecondaryText","Modal","animationType","transparent","visible","onRequestClose","modalContainer","modalContent","closeButton","loadingContainer","noImageContainer","noImageText","ClientOrderCard","setStatus","card","icon","date","statusContainer","getStatusStyle","fulfillOrderStatus","markAsShippedStatus","shippedStatus","defaultStatus","paddingRight","generalStyles","center","CartCard","cardContent","SimpleLineIcons","ratingText","circleSizeContainer","circle","sizeCircle","sizeText","top","PaymentPayScreen","ready","setReady","clientSecret","setClientSecret","isPlatformPaySupported","confirmPlatformPayPayment","usePlatformPay","useFocusEffect","React","setup","paymentData","amount","shipping_fee","shippingAmount","app_name","StripeProvider","publishableKey","merchantIdentifier","PlatformPayButton","applePay","cartItems","String","paymentType","PlatformPay","PaymentType","Immediate","merchantCountryCode","currencyCode","googlePay","testEnv","merchantName","billingAddressConfig","BillingAddressFormat","Full","isPhoneNumberRequired","isRequired","code","disabled","payButton","ButtonType","Pay","CartPageVOne","triggerValueChange","setTriggerValueChange","_Fragment","showsVerticalScrollIndicator","_","ListHeaderComponent","delteItemFromCart","ListFooterComponent","priceContainer","priceAndTitle","headerContainer","checkoutContainer","buttonText","GlowButton","isPressed","setIsPressed","MotiView","from","animate","transition","duration","glow","buyButton","setTimeout","buyButtonText","ProductDetailsPageVThree","textOverlay","overlayTitle","overlaySubtitle","productInfo","productSubtitle","slice","priceSection","priceLabel","priceInfo","GlitterButton","flexGrow","left","colorOptions","colorCircle","selectedColorCircle","flexWrap","ProductRow","ActivityIndicator","errorContainer","errorText","columnGap","selectedProductContainer","selectedProductText","TopSectionHeaderV1","line1","line2","line3","welcomeTxtStyle","Carousel","animatedValue","useRef","Animated","Value","current","storeImages","about_object_image","doubleImageHero_left_image","topContainer","onScroll","event","nativeEvent","contentOffset","x","useNativeDriver","pagingEnabled","bottomContainer","inputRange","dotScale","interpolate","outputRange","extrapolate","dotContainer","borderStartColor","PagingDot","scale","pagingDot","transform","SectionHeader","headerTitle","store_type","SearchBarVOne","searchSection","searchInput","placeholderTextColor","filterSection","filterIcon","talentCount","HomeDesignOne","appBarWrapper","appBar","location","cartCount","zIndex","cartNumber","HomeDesignTwo","ProductSearchScreen","searchTerm","setSearchTerm","searchResults","setSearchResults","handleSearch","results","SafeAreaView","searchContainer","searchIcon","searchWrapper","searchBtn","Feather","gridLayout","columnWrapperStyle","row"],"mappings":"4wCAMO,MAAMA,GAAoC,EAAGC,UAASC,QAAOC,cAAaC,eAE7EC,EAACC,EAAgB,CAACC,MAAO,CAACC,GAAOC,OAAQN,GAAcF,QAASA,EAC9DS,SAAAL,EAACM,EAAK,CAAAJ,MAAO,CAACC,GAAOI,KAAMR,GAAaM,SAAAR,MAOxCM,GAASK,EAAWC,OAAO,CAC/BL,OAAQ,CACNM,gBAAiB,UACjBC,QAAS,GACTC,aAAc,EACdC,WAAY,SACZC,eAAgB,UAElBP,KAAM,CACJQ,MAAO,OACPC,SAAU,GACVC,WAAY,UCCHC,GAAcC,EAA+B,CACxDC,MAAO,GACPC,UAAW,OACXC,iBAAkB,OAClBC,SAAU,EACVC,SAAU,EACVC,cAAgB,EAChBC,WAAY,EACZC,mBAAqB,OACrBC,SAAU,EACVC,UAAY,SAIDC,GAAwD,EAAGzB,eAEtE,MAAOe,EAAOW,GAAYC,EAAqB,KACxCT,EAAUU,GAAeD,EAAS,IAElCP,EAAeS,GAAoBF,EAAS,KAE5CJ,EAAUO,GAAeH,EAAS,GAEnCR,GAAYD,EAAYE,GAAa,MACrCC,EAAaF,EAAWD,EAE9Ba,GAAU,KACRC,GAAe,GAKd,IAIH,MAAMA,EAAgBC,UACpB,IACE,MAAMC,QAAoBC,EAAaC,QAAQ,SAC/C,GAAIF,EAAa,CACf,MAAMG,EAA0BC,KAAKC,MAAML,GAC3CR,EAASW,GACTG,EAAkBH,GAClBI,EAAoBJ,EAGrB,CACF,CAAC,MAAOK,GACPC,QAAQD,MAAM,4BAA6BA,EAC5C,GAiNGF,EAAqBzB,IACzB,MAAM6B,EAAQ7B,EAAM8B,QAAO,CAACC,EAAKC,IAASD,EAAMC,EAAKC,MAAQD,EAAKxB,UAAW,GAC7EK,EAAYgB,EAAM,EAIdH,EAAuB1B,IACRA,EAAM8B,QAAO,CAACC,EAAKC,IAASD,EAAM5B,EAAWC,EAAWC,GAAgB,EAAG,EAiB1F6B,EAAqBlC,IAAD,EAOpBmC,EAAyB,CAC7BnC,QACAC,UA9OgBiB,MAAOc,IACvB,IACE,MAAMI,EAAiBpC,EAAMqC,WAAWC,GAASA,EAAKC,KAAOP,EAAKO,KAElE,IAAwB,IAApBH,EAAuB,CAEzB,MAAMI,EAAe,IAAIxC,GACzBwC,EAAaJ,GAAkB,IAC1BI,EAAaJ,GAChB5B,SAAUgC,EAAaJ,GAAgB5B,SAAW,SAG9CY,EAAaqB,QAAQ,QAASlB,KAAKmB,UAAUF,IACnD7B,EAAS6B,GAETf,EAAkBe,GAClBd,EAAoBc,EA+BrB,KAAM,CAEL,MAAMG,EAAc,IAAKX,EAAMxB,SAAU,EAAGyB,MAAOD,EAAKC,OAClDW,EAAe,IAAI5C,EAAO2C,SAC1BvB,EAAaqB,QAAQ,QAASlB,KAAKmB,UAAUE,IACnDjC,EAASiC,GAETnB,EAAkBmB,GAClBlB,EAAoBkB,GACpBV,EAAkBU,EAEnB,CAGD7B,EAAYP,EAAW,EAMxB,CAAC,MAAOmB,GACPC,QAAQD,MAAM,6BAA8BA,EAC7C,GA0KDzB,iBAjHuBgB,MAAOc,IAC9B,IAGE,MAAMI,EAAiBpC,EAAMqC,WAAWC,GAASA,EAAKC,KAAOP,EAAKO,KAElE,IAAwB,IAApBH,EAAuB,CAEzB,MAAMI,EAAe,IAAIxC,GAGvBwC,EAAaJ,GAAkB,IAC1BI,EAAaJ,GAChB5B,SAAUgC,EAAaJ,GAAgB5B,SAAW,GAGtDO,EAAYP,EAAW,SAEjBY,EAAaqB,QAAQ,QAASlB,KAAKmB,UAAUF,IACnD7B,EAAS6B,GAETf,EAAkBe,GAClBd,EAAoBc,EACrB,CAKF,CAAC,MAAOb,GACPC,QAAQD,MAAM,mCAAoCA,EACnD,GAoFDnB,WACAL,WACAC,WACAC,gBACAC,aACAC,mBArFuBW,MAAOc,IAChC,IAEE,MAAMQ,EAAexC,EAAM6C,QAAQP,GAASA,EAAKC,KAAOP,EAAKO,WAGvDnB,EAAaqB,QAAQ,QAASlB,KAAKmB,UAAUF,IACnD7B,EAAS6B,GAGTf,EAAkBe,GAClBd,EAAoBc,GACpBN,EAAkBM,SAGZpB,EAAa0B,WAAW,SAE9B/B,EAAYP,EAAWwB,EAAKxB,UACxBA,GAAW,GACbO,EAAY,GAEda,QAAQmB,IAAI,eAGb,CAAC,MAAOpB,GACPC,QAAQD,MAAM,iCAAkCA,EACjD,GA4DClB,UAzDgBS,UAChB,IACEH,EAAY,SACNK,EAAa0B,WAAW,SAC9BnC,EAAS,IACTE,EAAY,GAEZC,EAAiB,IAEjBC,EAAY,EACb,CAAC,MAAOY,GACPC,QAAQD,MAAM,uBAAwBA,EACvC,IAiDH,OACE/C,EAACkB,GAAYkD,SAAQ,CAACb,MAAOA,EAAKlD,SAC/BA,GAEH,GC9UIgE,OAAAA,GAASC,MAAAA,IAAUC,EAAWC,IAAI,UAMpCC,GAAS,CACbC,MAAO,CACLnE,KAAM,UACNoE,WAAY,UACZC,KAAM,UACNC,eAAgB,UAChBC,gBAAiB,UACjBC,eAAgB,UAChBC,SAAU,UACVC,kBAAmB,UACnBC,UAAW,UACXC,WAAY,WAEdC,KAAM,CACJ7E,KAAM,UACNoE,WAAY,UACZC,KAAM,UACNC,eAAgB,UAChBC,gBAAiB,UACjBC,eAAgB,UAChBC,SAAU,UACVC,kBAAmB,UACnBC,UAAW,UACXC,WAAY,WAEdE,QAAS,UACTC,UAAW,UACXC,SAAU,UACVC,SAAU,UACVC,MAAO,UACPC,YAAa,UACbC,UAAW,UACXC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,SAAU,UACVC,MAAO,UACPC,MAAO,UACPC,KAAM,UACNC,IAAK,UACLC,OAAQ,UACRC,WAAY,UACZC,gBAAiB,UACjBC,iBAAkB,UAClBC,eAAgB,UAMZC,GAAQ,CACVC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,QAAS,UACT1C,SACAC,IAGE0C,GAAU,CACZL,MAAO,CACHM,YAAa,OACbC,aAAc,CACV5C,MAAO,EACPD,OAAQ,GAEZ8C,cAAe,IACfC,aAAc,KACdC,UAAW,GAEfT,OAAQ,CACJK,YAAa,OACbC,aAAc,CACV5C,MAAO,EACPD,OAAQ,GAEZ8C,cAAe,IACfC,aAAc,KACdC,UAAW,ICvFbC,GAAqB,IAAIC,KAAKC,kBAAaC,EAAW,CACxDC,SAAU,MACVxH,MAAO,aAGL,SAAUyH,GAAkBC,GAC9B,OAAON,GAAmBO,OAAOD,EACrC,CCPO,MAAME,GAAU,IAEVC,GAAa,CACxBC,KAAM,OACNC,KAAM,OACNC,aAAc,eACdC,YAAa,eAKFC,GAAS,aACTC,GAAY,WAAWD,8CAGvBE,GAAiB,WAAWC,QAAQC,IAAIC,6CACxCC,GAAmB,8EACnBC,GAAe,8DAEfC,GAAiB,WAAWL,QAAQC,IAAIK,6BACnDN,QAAQC,IAAIM,iCAIDC,GAAa,WAAWR,QAAQC,IAAIQ,2BAC/CT,QAAQC,IAAIM,wCAGDG,GAAgB,WAAWV,QAAQC,IAAIQ,2BAClDT,QAAQC,IAAIM,uCAIDI,GAAiB,WAAWX,QAAQC,IAAIQ,2BACnDT,QAAQC,IAAIM,uCAGDK,GAAqB,WAAWZ,QAAQC,IAAIQ,2BACvDT,QAAQC,IAAIM,4CClCDM,GAAY,CACrBC,QAAS,GACTC,mBAAoB,uFACpBC,uBAAwB,uFACxBC,0BAA2B,6EAC3BC,qBAAsB,yFACtBC,gBAAiB,8EAEjBC,uBAAwB,8EACxBC,uBAAwB,iFACxBC,yBAAyB,mFACzBC,YAAa,iFAEbC,iBAAkB,WAClBC,SAAU,WACVC,YAAa,oDACbC,mBAAoB,8GACpBC,mBAAoB,wHClBRC,GACdC,EACAC,EACAC,GAEA,MAAMC,EAAclI,MAClBmI,EACAC,EAAsE,CAAA,KAEtE,MAAMC,EAAM,IAAIC,IAAIH,EAAUJ,GAGxBQ,EAAS,IAAIC,gBAAgBR,GAC/BI,EAAQG,QACVE,OAAOC,QAAQN,EAAQG,QAAQI,SAAQ,EAAEC,EAAK3H,MAC5CsH,EAAOM,OAAOD,EAAK3H,EAAM6H,WAAW,IAGxCT,EAAIU,OAASR,EAAOO,WAGpB,MAAME,EAAU,IAAIC,QAAQ,IACvBhB,KACAG,EAAQY,UAIPE,QAAiBC,MAAMd,EAAIS,WAAY,IACxCV,EACHY,YAIF,IAAKE,EAASE,GAAI,CAChB,MAAMC,QAAkBH,EAASI,OAAOC,OAAM,KAAA,CAAS,KACvD,MAAM,IAAIC,MAAM,uBAAuBN,EAASO,WAAWpJ,KAAKmB,UAAU6H,KAC3E,CAED,OAAOH,EAASI,MAAM,EAGxB,MAAO,CACLpH,IAAK,CAAUiG,EAAkBC,EAAsF,KACrHF,EAAeC,EAAU,IAAKC,EAASsB,OAAQ,QAEjDC,KAAM,CAAUxB,EAAkByB,EAAWxB,EAA+F,CAAE,IAC5IF,EAAeC,EAAU,IAAKC,EAASsB,OAAQ,OAAQE,KAAMvJ,KAAKmB,UAAUoI,KAE9EC,IAAK,CAAU1B,EAAkByB,EAAWxB,EAA+F,CAAE,IAC3IF,EAAeC,EAAU,IAAKC,EAASsB,OAAQ,MAAOE,KAAMvJ,KAAKmB,UAAUoI,KAE7EE,OAAQ,CAAU3B,EAAkBC,EAAsF,KACxHF,EAAeC,EAAU,IAAKC,EAASsB,OAAQ,WAErD,CC/BO,MAAMK,GAAY,sBACnBC,GAAW,qBACXC,GAAoB,yBAEbC,GAAcrL,OAA2CsG,GAEzDgF,GAAU,KACrB,MAAMC,EAAUC,EAAWH,IAC3B,IAAKE,EACH,MAAM,IAAIZ,MAAM,+CAElB,OAAOY,CAAO,EAIVE,GAAUxC,GACd/B,GACA,CACEwE,UAAW,0BACXC,kBAAmB,QAErB,CACE,eAAgB,qBAIPC,GAAe,EAAG1M,eAC7B,MAAO2M,EAAWC,GAAgBjL,EAAoB,CACpDkL,KAAM,KACNC,MAAO,KACPC,eAAe,IAGjBhL,GAAU,KACaE,WACnB,IACE,MAAM6K,QAAcE,EAAYC,aAAajB,IACvCkB,QAAmBF,EAAYC,aAAahB,IAC5Cc,QAAsBC,EAAYC,aAAaf,IAErD,GAAIY,GAASI,GAAgC,SAAlBH,EAA0B,CACnD,MAAMF,EAAOvK,KAAKC,MAAM2K,GACxBvK,QAAQmB,IAAI,8BAA+B,CAAEgJ,QAAOD,SAEpDD,EAAa,CACXC,OACAC,QACAC,eAAe,GAElB,MACCH,EAAa,CACXC,KAAM,KACNC,MAAO,KACPC,eAAe,GAGpB,CAAC,MAAOrK,GACPC,QAAQD,MAAM,2BAA4BA,GAC1CkK,EAAa,CACXC,KAAM,KACNC,MAAO,KACPC,eAAe,GAElB,GAGHI,EAAc,GACb,IAEH,MAAMC,EAAaC,GAAYpL,MAAOqL,IACpCA,EAAShK,GAAKiK,EAAKC,KAAKzC,WAExB,IAQE,aAPqBwB,GAAQX,KAC3B,YACA0B,EACA,CACE9C,OAAQ,CAAEb,SAAUZ,GAAUY,WAInC,CAAC,MAAOjH,GAEP,MADAC,QAAQD,MAAM,sBAAuBA,EAAM+K,MACrC,IAAIhC,MAAM/I,EAAMyI,UAAUsC,MAAMC,KAAO,yCAC9C,IACA,IAEGC,EAAUN,GAAYpL,MAAO2L,EAAeC,KAChD,IACE,MAAMC,QAAevB,GAAQX,KAC3B,SACA,CAAEgC,QAAOC,YACT,CACErD,OAAQ,CAAEb,SAAUZ,GAAUY,aAI5BkD,KAAEA,EAAIC,MAAEA,GAAUgB,EAWxB,aAVMd,EAAYe,aAAa/B,GAAWc,SACpCE,EAAYe,aAAa9B,GAAU3J,KAAKmB,UAAUoJ,UAClDG,EAAYe,aAAa7B,GAAmB,QAElDU,EAAa,CACXC,OACAC,QACAC,eAAe,IAGVe,CACR,CAAC,MAAOpL,GAEP,MADAC,QAAQD,MAAM,eAAgBA,GACxB,IAAI+I,MAAM/I,EAAMyI,UAAUsC,MAAMC,KAAO,kCAC9C,IACA,IAEGM,EAAWX,GAAYpL,UAC3B,UACQ+K,EAAYiB,gBAAgBjC,UAC5BgB,EAAYiB,gBAAgBhC,UAC5Be,EAAYiB,gBAAgB/B,IAElCU,EAAa,CACXC,KAAM,KACNC,MAAO,KACPC,eAAe,UAGX5K,EAAa0B,WAAW,SAC9BlB,QAAQmB,IAAI,gCACb,CAAC,MAAOpB,GAEP,MADAC,QAAQD,MAAM,qBAAsBA,GAC9B,IAAI+I,MAAM,mCACjB,IACA,IAEGyC,EAAoBb,GAAYpL,MAAOkM,IAC3C,IACE,IAAKxB,EAAUE,KAAM,MAAM,IAAIpB,MAAM,2BAEhBc,GAAQT,IAAI,UAAUa,EAAUE,KAAKvJ,KAAM6K,GAAhE,MAEMC,EAAkB,IAAMzB,EAAUE,QAAuBsB,SACzDnB,EAAYe,aAAa9B,GAAU3J,KAAKmB,UAAU2K,IAExDxB,EAAa,IACRD,EACHE,KAAMuB,IAGRzL,QAAQmB,IAAI,qCAAsCsK,EACnD,CAAC,MAAO1L,GAEP,MADAC,QAAQD,MAAM,iCAAkCA,GAC1C,IAAI+I,MAAM/I,EAAMyI,UAAUsC,MAAMC,KAAO,iCAC9C,IACA,CAACf,EAAUE,KAAMF,EAAUG,QAExBuB,EAAiBhB,GAAYpL,MAAOqM,IACxC,IACE,IAAK3B,EAAUE,KAAM,MAAM,IAAIpB,MAAM,qBAErC,MAAM8C,EAAmB,IAAK5B,EAAUE,KAAK2B,eAAiB,GAAKF,SAC7DJ,EAAkB,CAAEM,cAAeD,GAC1C,CAAC,MAAO7L,GAEP,MADAC,QAAQD,MAAM,8BAA+BA,GACvC,IAAI+I,MAAM,8BACjB,IACA,CAACkB,EAAUE,KAAMqB,IAEdO,EAAsBpB,GAAYpL,MAAOqM,IAC7C,IACE,IAAK3B,EAAUE,KAAM,MAAM,IAAIpB,MAAM,qBAErC,MAAM8C,GAAoB5B,EAAUE,KAAK2B,eAAiB,IAAI5K,QAAO8K,GAAOA,IAAQJ,UAC9EJ,EAAkB,CAAEM,cAAeD,GAC1C,CAAC,MAAO7L,GAEP,MADAC,QAAQD,MAAM,mCAAoCA,GAC5C,IAAI+I,MAAM,mCACjB,IACA,CAACkB,EAAUE,KAAMqB,IAEdS,EAAatB,GAAaiB,GACvB3B,EAAUE,MAAM2B,eAAeI,SAASN,KAAW,GACzD,CAAC3B,EAAUE,OAEd,OACElN,EAACwM,GAAYpI,SAAQ,CACnBb,MAAO,CACLyJ,YACAS,aACAO,UACAK,WACAE,oBACAG,iBACAI,sBACAE,cAGD3O,SAAAA,GAEH,EC3NE6O,GAAc9E,GAClB/B,GACA,CACEwE,UAAW,6BACXC,kBAAmB,QAErB,CACE,eAAgB,qBAMbxK,eAAe6M,GAAeC,EAAiBnB,GACpD,IAWE,aAVuBiB,GAAY1K,IAAI,YAAa,CAClDqG,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAehD,GACf,eAAgB,uBAGJyB,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,2BAA4BA,GACpCA,CACP,CACH,CAIOT,eAAegN,GAAc3L,GAClC,IAIE,aAHuBuL,GAAY1K,IAAI,WAAY,CACjDqG,OAAQ,CAAElH,SAEImK,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,0BAA2BA,GACnCA,CACP,CACH,CAIO,MAAMwM,GAAiBjN,MAAOkN,EAA4BJ,EAAiBnB,EAAed,UAClF+B,GAAYjD,KAAK,WAAYuD,EAAS,CACjD3E,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAelC,EACf,eAAgB,sBAOTsC,GAAmBnN,MAAOkN,SACxBN,GAAY/C,IAAI,eAAeqD,EAAQ7L,KAAM6L,GAI/CE,GAAmBpN,MAAOqB,SACxBuL,GAAY9C,OAAO,WAAY,CAC1CvB,OAAQ,CAAElH,QCtDDgM,GAAuBxO,OAA+CsG,GAEtEmI,GAAmB,KAC9B,MAAMlD,EAAUC,EAAWgD,IAC3B,IAAKjD,EACH,MAAM,IAAIZ,MAAM,iEAElB,OAAOY,CAAO,EAGHmD,GAAwB,EAAGxP,eACtC,MAAM2M,UAAEA,GAAcP,MACfqD,EAAUC,GAAe/N,EAA8B,KACvDgO,EAAiBC,GAAsBjO,EAAmC,OAC1EkO,EAAWC,GAAgBnO,GAAkB,IAC7Ce,EAAOqN,GAAYpO,EAAwB,MAElDI,GAAU,KAERY,QAAQmB,IAAI,6BACVkM,GAAmB,GAEpB,IAEH,MA6CMC,EAAsBhO,MAAOkN,IACjCW,GAAa,GACb,UACQG,EAAoBd,GAC1BO,GAAaQ,GAAiBA,EAAaC,KAAIC,GAAKA,EAAE9M,KAAO6L,EAAQ7L,GAAK6L,EAAUiB,KACrF,CAAC,MAAO1N,GACPC,QAAQD,MAAM,4BAA6BA,EAAMyI,UAAUsC,MAAM4C,SAAW3N,EAAM2N,SAClFN,EAASrN,EAAMyI,UAAUsC,MAAM4C,SAAW,oDAC3C,CAAS,QACRP,GAAa,EACd,GAGGE,EAAoB/N,UAGxB6N,GAAa,GACbC,EAAS,MACT,IACE,MAAMnC,EAAQ,GACR0C,EAAiBvH,GAAUY,SAG3B4G,SADiBzB,GAAewB,EAAgB1C,IACrBH,KACjCiC,EAAYa,GACZ5N,QAAQmB,IAAI,sBACb,CAAC,MAAOpB,GACPC,QAAQD,MAAM,4BAA6BA,EAAMyI,UAAUsC,MAAM4C,SAAW3N,EAAM2N,SAClFN,EAASrN,EAAMyI,UAAUsC,MAAM4C,SAAW,oDAC3C,CAAS,QACRP,GAAa,EACd,GAOH,OACEnQ,EAAC2P,GAAqBvL,SAAQ,CAC5Bb,MAAO,CACLuM,WACAe,iBAvFmBvO,MAAOkN,IAC9B,IAAKxC,GAAWE,KAAM,OAEtB,MAAMkC,EAAUpC,EAAUE,KAAKyD,gBAAkB,GAC3C1C,EAAQjB,EAAUE,KAAKe,OAAS,GAChCd,EAAQH,GAAWG,OAAS,GAElCgD,GAAa,GACb,UACQZ,GAAeC,EAASJ,EAASnB,EAAOd,GAC9C4C,GAAaQ,GAAiB,IAAIA,EAAcf,KAChDxM,QAAQmB,IAAI,gBAAiBqL,GAG7BsB,EAAOC,KAAK,IAEb,CAAC,MAAOhO,GACPC,QAAQD,MAAM,yBAA0BA,EAAMyI,UAAUsC,MASxDsC,EAASrN,EAAMyI,UAAUsC,MAAQ,iDAClC,CAAS,QACRqC,GAAa,EACd,GA2DGa,oBAxDsB1O,MAAO2O,IACjCd,GAAa,GACb,UACQT,GAAiB,CAAE/L,GAAIsN,IAC7BlB,GAAaQ,GAAiBA,EAAatM,QAAOuL,GAAWA,EAAQ7L,KAAOsN,KAC7E,CAAC,MAAOlO,GACPC,QAAQD,MAAM,4BAA6BA,EAAMyI,UAAUsC,MAAM4C,SAAW3N,EAAM2N,SAClFN,EAASrN,EAAMyI,UAAUsC,MAAM4C,SAAW,oDAC3C,CAAS,QACRP,GAAa,EACd,GA+CGG,sBACAD,oBACAL,kBACAkB,cAbiB1B,IACrBS,EAAmBT,EAAQ,EAavBU,YACAnN,SAGD1C,SAAAA,GAEH,ECpIckE,EAAWC,IAAI,gBAEpB2M,GAAsD,EAAG3B,cACjD4B,IACnB,MAAM/P,UAAEA,GAAcsL,EAAWzL,KAC3BgQ,cAAEA,GAAkBtB,KAM1B,OACE5P,EAACqR,EAAI,CAAAhR,SACJL,EAACsR,EAAI,CACJC,KAAM,aAAa/B,EAAQ7L,KAC3B6N,oBAEExR,EAACC,EAAiB,CAAAL,QAVG,KACzBsR,EAAc1B,EAAQ,WAUhBiC,EAACJ,GAAKnR,MAAOC,GAAOuR,UAElBrR,SAAA,CAAAL,EAACqR,EAAI,CAACnR,MAAOC,GAAOwR,eAActR,SAChCL,EAAC4R,EAAK,CACJ1R,MAAOC,GAAO0R,MACdC,OAAQ,CAAEC,IAAKvC,EAAQwC,OAAO,QAKlCP,EAACJ,GAAKnR,MAAOC,GAAO8R,QAAO5R,SAAA,CACzBL,EAACM,EAAI,CAACJ,MAAOC,GAAON,MAAOqS,cAAe,EAAC7R,SAAGmP,EAAQ2C,OACtDnS,EAACM,EAAK,CAAAJ,MAAOC,GAAOiS,SAAUF,cAAe,EAAI7R,SAAAmP,EAAQ6C,aACzDrS,EAACM,EAAI,CAACJ,MAAOC,GAAOkD,MAAKhD,SAAGsH,GAAkB6H,EAAQnM,SAC/B,iBAAtBmM,EAAQ8C,WACPtS,EAACM,EAAI,CAACJ,MAAO,CAAEc,SAAU,IAAIX,SAAA,kBAKjCL,EAACC,EAAiB,CAAAC,MAAOC,GAAOoS,OAAQ3S,QAAS,IAAMyB,EAAUmO,GAC/DnP,SAAAL,EAACwS,EACC,CAAAL,KAA4B,iBAAtB3C,EAAQ8C,UAA+B,+BAAiC,aAC9EG,KAAM,GACN1R,MAAO0D,GAAOY,oBAO1B,EAKElF,GAASK,EAAWC,OAAO,CAC/BiR,UAAW,CACTpN,MAAO,IACPD,OAAQ,IACRqO,UAAW,GACX9R,aAAc6F,GAAMG,OACpBlG,gBAAiB+D,GAAOa,UACxBqN,YAAa,EACbC,YAAa,SAEfjB,eAAgB,CACdkB,KAAM,EACN/R,eAAgB,SAChBD,WAAY,SACZD,aAAc6F,GAAMG,OACpBkM,SAAU,SACVC,UAAWtM,GAAME,MAAQ,GAE3BkL,MAAO,CACLvN,MAAO,IACPD,OAAQ,IACRzD,aAAc6F,GAAME,MACpBqM,WAAY,QACZ7L,cAAe,IACfF,YAAa,SAEfgL,QAAS,CACPtR,QAAS8F,GAAME,OAEjB9G,MAAO,CACLoT,WAAY,OACZjS,SAAUyF,GAAME,MAChBuM,aAAc,EACd7O,OAAQ,IAEV+N,SAAU,CACRa,WAAY,UACZjS,SAAUyF,GAAME,MAChB5F,MAAO0D,GAAOmB,MAEhBvC,MAAO,CACL4P,WAAY,OACZjS,SAAUyF,GAAMG,QAElB2L,OAAQ,CACNY,SAAU,WACVC,OAAQ3M,GAAMC,OACd2M,MAAO5M,GAAMC,UCxGX4M,GAAsClQ,IACxC,MAAMmQ,EAAanC,IAEnB,OACApR,EAACqR,EAAI,CAAAhR,SAGDoR,EAACxR,EAAgB,CAACC,MAAOC,GAAOuR,UAAW9R,QAAS,IAAM2T,EAAWC,SAAS,YAAc,CAAEpQ,SAE1F/C,SAAA,CAAAL,EAACqR,EAAK,CAAAnR,MAAOC,GAAO0R,eAChB7R,EAAC4R,EAAM,CAAAE,OAAQ,CAACC,IAAK3I,GAAUK,sBAAwBvJ,MAAOC,GAAOsT,aAEzEhC,EAACJ,EAAI,CAACnR,MAAOC,GAAOuT,wBAChB1T,EAACM,GAAKJ,MAAOC,GAAOwT,WAAUtT,SAAG+C,EAAKvD,QACtCG,EAACM,EAAK,CAAAJ,MAAOC,GAAOiS,kBAAWzK,GAAkBvE,EAAKH,gBAInE,EAKG9C,GAASK,EAAWC,OAAO,CAC7BiR,UAAW,CACPmB,KAAM,EACN/R,eAAgB,gBAChBD,WAAY,SACZqS,aAAczM,GAAME,MACpBiN,cAAe,MACfjT,QAAS8F,GAAMG,OACfhG,aAAc6F,GAAME,MACpBjG,gBAAiB,UACdsG,GAAQJ,OACXK,YAAaxC,GAAO4B,YAGxBwL,MAAO,CACHvN,MAAO,GACP5D,gBAAiB+D,GAAOa,UACxB1E,aAAc6F,GAAMG,OACpB9F,eAAgB,SAChB+S,aAAc,UAElBJ,SAAU,CACNnP,MAAO,OACPD,OAAQ,GACRzD,aAAc6F,GAAME,MACpBqM,WAAY,SAEhBU,cAAe,CACXb,KAAM,EACNiB,iBAAkBrN,GAAMG,QAE5B+M,WAAY,CACR3S,SAAUyF,GAAMG,OAChBqM,WAAY,OACZlS,MAAO0D,GAAOY,SAGlB+M,SAAU,CACNpR,SAAUyF,GAAME,MAAQ,EACxBsM,WAAY,OACZlS,MAAO0D,GAAOmB,KACdmN,UAAW,KC3DNgB,GAA0C3Q,IAChCgO,IAGnBpR,EAACqR,EAGG,CAAAhR,SAAAL,EAACsR,EAAK,CAAAC,KAAM,eACZlR,SAAAoR,EAACxR,EAAiB,CAAAC,MAAOC,GAAOuR,UAAW9R,QAAS,OAAQS,SAAA,CAExDL,EAACqR,EAAI,CAACnR,MAAOC,GAAO0R,MAChBxR,SAAAL,EAAC4R,EAAK,CAACE,OAAQ,CAACC,IAAK3O,EAAKyO,MAAQzO,EAAKyO,MAAQzI,GAAUG,wBAAyBrJ,MAAOC,GAAO6T,eAEpGvC,EAACJ,EAAK,CAAAnR,MAAOC,GAAOuT,cAChBrT,SAAA,CAAAL,EAACM,EAAI,CAACJ,MAAOC,GAAO8T,aAAe5T,SAAA+C,EAAK+O,OACxCnS,EAACM,EAAK,CAAAJ,MAAOC,GAAOiS,kBAAWzK,GAAkBvE,EAAKC,oBAUhElD,GAASK,EAAWC,OAAO,CAC7BiR,UAAW,CACPmB,KAAM,EACN/R,eAAgB,gBAChBD,WAAY,SACZqS,aAAczM,GAAME,MACpBiN,cAAe,MACfjT,QAAS8F,GAAMG,OACfhG,aAAc6F,GAAME,MACpBjG,gBAAiB,UACdsG,GAAQJ,OACXK,YAAaxC,GAAO4B,YAGxBwL,MAAO,CACHvN,MAAO,GACP5D,gBAAiB+D,GAAOa,UACxB1E,aAAc6F,GAAMG,OACpB9F,eAAgB,SAChB+S,aAAc,UAElBG,WAAY,CACR1P,MAAO,OACPD,OAAQ,GACRzD,aAAc6F,GAAME,MACpBqM,WAAY,SAEhBU,cAAe,CACXb,KAAM,EACNiB,iBAAkBrN,GAAMG,QAE5BqN,aAAc,CACVjT,SAAUyF,GAAMG,OAChBqM,WAAY,OACZlS,MAAO0D,GAAOY,SAGlB+M,SAAU,CACNpR,SAAUyF,GAAME,MAAQ,EACxBsM,WAAY,OACZlS,MAAO0D,GAAOmB,KACdmN,UAAW,KC5DLmB,GAAwC9Q,IAEpD,MAAM/B,UAAEA,GAAasL,EAAWzL,KAC1B4O,SAAEA,EAAQE,gBAAEA,EAAekB,cAAEA,EAAahB,UAAEA,EAASnN,MAAEA,GAAU6M,KAOvE,OACE5P,EAACqR,EAAI,CAAAhR,SAEHL,EAACsR,EAAI,CAACC,KAAM,aAAavB,GAAiBrM,KAAM6N,oBAChDxR,EAACC,GAAiBL,QAAS,KAR7BsR,EAQuD9N,EAAK,EAK1D/C,SAAAoR,EAACJ,EAAK,CAAAnR,MAAOC,GAAOuR,UAElBrR,SAAA,CAAAL,EAACqR,EAAK,CAAAnR,MAAOC,GAAOwR,eAClBtR,SAAAL,EAAC4R,EAAM,CAAA1R,MAAOC,GAAO0R,MAAOC,OAAQ,CAAEC,IAAK3O,EAAKyO,MAAQzO,EAAKyO,MAAQzI,GAAUG,4BAIjFkI,EAACJ,EAAK,CAAAnR,MAAOC,GAAO8R,QAClB5R,SAAA,CAAAL,EAACM,EAAK,CAAAJ,MAAOC,GAAON,MAAOqS,cAAe,EAAC7R,SAAG+C,EAAK+O,OACnDnS,EAACM,EAAK,CAAAJ,MAAOC,GAAOiS,SAAUF,cAAe,EAAC7R,SAAG+C,EAAKiP,aACtDrS,EAACM,EAAK,CAAAJ,MAAOC,GAAOkD,MAAQhD,SAAAsH,GAAkBvE,EAAKC,YAIrDrD,EAACC,EAAiB,CAAAC,MAAOC,GAAOoS,OAAQ3S,QAAS,KAAOyB,EAAU+B,EAAK,EAAC/C,SACtEL,EAACwS,EAAQ,CAACL,KAAK,aAAaM,KAAM,GAAI1R,MAAO0D,GAAOY,oBAO1D,EAQElF,GAASK,EAAWC,OAAO,CAC7BiR,UAAW,CACPpN,MAAO,IACPD,OAAQ,IACRqO,UAAW,GACX9R,aAAc6F,GAAMG,OACpBlG,gBAAiB+D,GAAOa,WAG5BqM,eAAgB,CACZkB,KAAM,EACNvO,MAAO,IACP6P,WAAY1N,GAAME,MAAM,EACxBoM,UAAWtM,GAAME,MAAM,EACvB/F,aAAc6F,GAAME,MACpBmM,SAAU,UAEdjB,MAAO,CACHuC,YAAa,EACbpB,WAAY,SAEhBf,QAAS,CACLtR,QAAS8F,GAAME,OAInB9G,MAAO,CACHoT,WAAY,OACZjS,SAAUyF,GAAME,MAChBuM,aAAc,EACd7O,OAAQ,IAGZ+N,SAAU,CACNa,WAAY,UACZjS,SAAUyF,GAAME,MAChB5F,MAAO0D,GAAOmB,MAGlBvC,MAAO,CACH4P,WAAY,OACZjS,SAAUyF,GAAMG,QAGpB2L,OAAQ,CACJY,SAAS,WACTC,OAAQ3M,GAAMC,OACd2M,MAAO5M,GAAMC,UC5GR2N,GAAa,IAEtBrU,EAACqR,EAAI,CAACnR,MAAOC,GAAOuR,UAASrR,SACzBoR,EAACJ,EAAI,CAACnR,MAAOC,GAAOmU,cAAajU,SAAA,CAC/BL,EAACM,EAAK,CAAAJ,MAAOC,GAAOoU,YAA6ClU,SAAA,8BACjEL,EAACM,EAAI,CAACJ,MAAOC,GAAOqU,eAAcnU,SAAA,+IAGlCoR,EAACxR,GAAiBC,MAAO,CAAE0T,cAAe,OAAShU,QAAS,IAAMkR,EAAOC,KAAK,eAC9E1Q,SAAA,CAAAL,EAACM,EAAK,CAAAJ,MAAOC,GAAOsU,gBAAepU,SAAA,cACnCL,EAACwS,EAAS,CAAAL,KAAK,gBAAgBM,KAAM,GAAI1R,MAAM,QAAQb,MAAOC,GAAOuU,gBASzEvU,GAASK,EAAWC,OAAO,CAC7BiR,UAAW,CAEV,EACD4C,cAAe,CACb5T,gBAAiB,UACjBE,aAAc,GACdD,QAAS,GACTuS,aAAc,IAEhBqB,YAAa,CACXvT,SAAU,GACVC,WAAY,OACZF,MAAO,UACPmS,aAAc,IAGhBsB,eAAgB,CACdxT,SAAU,GACVD,MAAO0D,GAAOqB,MACdoN,aAAc,IAGhBuB,gBAAiB,CACfzT,SAAU,GACVD,MAAO0D,GAAOuB,MACd/E,WAAY,QAGdyT,MAAQ,CACNP,WAAY,GACZpB,UAAW,KChDX4B,GAA8C,EAClDC,QACArR,QACAsR,mBAAkB,EAClBC,YAAW,MAEX,MAAOC,EAAmBC,GAAwBhT,GAAU6S,GAOxD1U,EAASK,EAAWC,OAAO,CAC7BwU,QAAS,CAER,EACDL,MAAO,CACL5T,SAAU,GACVkS,aAAc,IAEhBgC,kBAAmB,CACjBtB,cAAe,MACf/S,WAAY,SACZC,eAAgB,iBAElBqU,MAAO,CACL7Q,MAAO,MACPqO,YAAa,EACbC,YAAa,OACbjS,QAAS,GACTuS,aAAc,GACdtS,aAAc,EACdF,gBAAiBoU,EAAW,OAAS,WAEvCM,cAAe,CACbC,YAAa,MAGjB,OACE5D,EAACJ,EAAI,CAACnR,MAAOC,EAAO8U,QAClB5U,SAAA,CAAAL,EAACM,EAAK,CAAAJ,MAAOC,EAAOyU,eAAQA,IAC5BnD,EAACJ,EAAI,CAACnR,MAAOC,EAAO+U,kBAClB7U,SAAA,CAAAL,EAACsV,EACC,CAAA/R,MAAOwR,EAAoBxR,EAAQ,YACnCsR,iBAAkBE,EAClB7U,MAAOC,EAAOgV,MACdL,SAAUA,IAEXD,GACC7U,EAACC,EAAiB,CAAAL,QA1CO,KAC/BoV,GAAsBO,IAAUA,GAAK,EAyCsBrV,MAAOC,EAAOiV,cAAa/U,SAC9EL,EAACwS,GACCL,KAAM4C,EAAoB,cAAgB,kBAC1CtC,KAAM,GACN1R,MAAM,mBAMhB,ECpEEyU,GAAoB,IAEtB/D,EAACJ,EAAI,CAACnR,MAAOC,GAAOsV,gBACpBpV,SAAA,CAAAL,EAACM,EAAK,CAAAJ,MAAOC,GAAOuV,wCACpB1V,EAACM,EAAI,CAACJ,MAAOC,GAAOwV,kBAEbtV,SAAA,+FACPL,EAACC,GAAiBC,MAAOC,GAAOyV,aAAYvV,SAC1CL,EAACM,EAAI,CAACJ,MAAOC,GAAO0V,iBAAuCxV,SAAA,wBAS3DF,GAASK,EAAWC,OAAO,CAC7BiR,UAAW,CACTmB,KAAM,EACNnS,gBAAiB,QAEnBoV,OAAQ,CACN9U,SAAU,GACVC,WAAY,OACZiS,aAAc,GACd6C,UAAW,UAGbN,gBAAiB,CACf1C,UAAW,IAEb2C,YAAa,CACX1U,SAAU,GACVD,MAAO,MACPE,WAAY,OACZiS,aAAc,IAEhByC,kBAAmB,CACjB3U,SAAU,GACVD,MAAO,OACPmS,aAAc,IAEhB0C,aAAc,CACZlV,gBAAiB,MACjBC,QAAS,GACTC,aAAc,GAEhBiV,iBAAkB,CAChB9U,MAAO,OACPgV,UAAW,SACX9U,WAAY,UCnDZ+U,GAAU,IAEZhW,EAACqR,EAAK,CAAAnR,MAAOC,GAAO8V,UAMlB9V,GAASK,EAAWC,OAAO,CAE7BwV,QAAS,CACL5R,OAAQ,EACR3D,gBAAkB,UAClBqS,UAAW,GACXG,aAAc,MCNhBgD,GAA0C9S,GAG5CpD,EAACqR,EAAI,CAAAhR,SACDL,EAACsR,EAAK,CAAAC,KAAM,YAAYnO,EAAKO,KAAe6N,SAM5C,EAAAnR,SAAAoR,EAAC0E,EAAS,CAACjW,MAAOC,GAAOuR,UAASrR,SAAA,CAC9BL,EAACqR,EAAK,CAAAnR,MAAOC,GAAO0R,MAChBxR,SAAAL,EAAC4R,EAAK,CAACE,OAAQ,CAACC,IAAK3O,EAAKyO,MAASzO,EAAKyO,MAAQzI,GAAUG,wBAAyBrJ,MAAOC,GAAO6T,eAErGvC,EAACJ,EAAI,CAACnR,MAAOC,GAAOuT,cAAarT,SAAA,CAC7BL,EAACM,EAAK,CAAAJ,MAAOC,GAAO8T,aAAe5T,SAAA+C,EAAK+O,OACxCnS,EAACM,EAAK,CAAAJ,MAAOC,GAAOiS,SAAW/R,SAAA+C,EAAKiP,aACpCrS,EAACM,EAAK,CAAAJ,MAAOC,GAAOiS,SAAW/R,SAAAsH,GAAkBvE,EAAKC,mBAUhElD,GAASK,EAAWC,OAAO,CAC7BiR,UAAW,CACPmB,KAAM,EACN/R,eAAgB,gBAChBD,WAAY,SACZqS,aAAczM,GAAME,MACpBiN,cAAe,MACfjT,QAAS8F,GAAMG,OACfhG,aAAc6F,GAAME,MACpBjG,gBAAiB,UACdsG,GAAQJ,OACXK,YAAaxC,GAAO4B,YAGxBwL,MAAO,CACHvN,MAAO,GACP5D,gBAAiB+D,GAAOa,UACxB1E,aAAc6F,GAAMG,OACpB9F,eAAgB,SAChB+S,aAAc,UAElBG,WAAY,CACR1P,MAAO,OACPD,OAAQ,GACRzD,aAAc6F,GAAME,MACpBqM,WAAY,SAEhBU,cAAe,CACXb,KAAM,EACNiB,iBAAkBrN,GAAMG,QAE5BqN,aAAc,CACVjT,SAAUyF,GAAMG,OAChBqM,WAAY,OACZlS,MAAO0D,GAAOY,SAGlB+M,SAAU,CACNpR,SAAUyF,GAAME,MAAQ,EACxBsM,WAAY,OACZlS,MAAO0D,GAAOmB,KACdmN,UAAW,MChEbzO,MAAEA,IAAUC,EAAWC,IAAI,UAG3B4R,GAAsB,KACxB,MAAOnI,EAAOoI,GAAYrU,EAAS,KAC5BkM,EAAUoI,GAAetU,EAAS,IACSA,EAAS,IAC3D,MAAOuU,EAAcC,GAAmBxU,GAAS,GACKA,GAAS,GAGjBA,GAAS,GACzD,MAAMgM,QAAEA,EAAOP,WAAEA,EAAUY,SAAEA,EAAQrB,UAAEA,GAAcP,KAG/CgK,EAAa/F,GACjBgG,EAAMC,MAAM,QAASjG,EAAS,CAAC,CAAEnQ,KAAM,QAsBzC,OACEkR,EAACJ,EACK,CAAAhR,SAAA,CAAAoR,EAACJ,EAAK,CAAAnR,MAAOC,GAAOyW,eAAcvW,SAAA,CAChCL,EAACwS,GAASL,KAAK,eAAeM,KAAM,GAAI1R,MAAO0D,GAAOe,WACtDxF,EAACsV,EACC,CAAAuB,YAAY,mBAEZC,aAAcT,EACd9S,MAAO0K,EACP/N,MAAOC,GAAOgV,MACd4B,aAAa,gBACbC,eAAe,OACfC,aAAa,QACbpC,iBAAiB,OAIrBpD,EAACJ,EAAK,CAAAnR,MAAOC,GAAOyW,eAClBvW,SAAA,CAAAL,EAACwS,EAAQ,CACPL,KAAK,sBACLM,KAAM,GACN1R,MAAO0D,GAAOe,WAEhBxF,EAACsV,EACC,CAAAuB,YAAY,sBAEZC,aAAcR,EACd/S,MAAO2K,EACPhO,MAAOC,GAAOgV,MACdN,iBAAkB0B,IAEpBvW,EAACwS,EAAS,CAAAL,KAAK,cAAcM,KAAM,GAAI1R,MAAO0D,GAAOe,cAGvDxF,EAACC,YACCD,EAACM,EAAK,CAAAJ,MAAOC,GAAO+W,mBAAkB7W,SAAA,uBAGxCL,EAACC,EAAgB,CAACC,MAAOC,GAAOgX,YAAavX,QAzDjC0C,UAClB,IACE,MAAM6L,QAAeH,EAASC,EAAOC,GACrC,GAAIC,EAAOpL,MACT0T,EAAUtI,EAAOJ,SACZ,CACL/K,QAAQmB,IAAI,oBACZ,IACE2M,EAAOsG,QAAQ,QAChB,CAAC,MAAOC,GACPrU,QAAQD,MAAM,oBAAqBsU,EACpC,CACF,CACF,CAAC,MAAOtU,GACPC,QAAQD,MAAM,eAAgBA,GAC9B0T,EAAU,kCACX,GAyCsEpW,SAC/DL,EAACM,EAAI,CAACJ,MAAOC,GAAOmX,uCAG7B,EAMGnX,GAASK,EAAWC,OAAO,CAC7BiR,UAAW,CACT6F,kBAAmB,GACnBC,WAAY,GACZ9W,gBAAiB+D,GAAOuB,MACxBnF,WAAY,UAEd4W,KAAM,CACJnT,MAAO,GACPD,OAAQ,GACR0O,UAAW,GACXnS,aAAc,IAEhByI,QAAS,CACPrI,SAAU,GACVC,WAAY,OACZF,MAAO0D,GAAOY,QACd0N,UAAW,IAEb2E,YAAa,CACX1W,SAAU,GACVC,WAAY,OACZF,MAAO0D,GAAOe,SACduN,UAAW,IAEb4E,gBAAiB,CACf3W,SAAU,GACVD,MAAO0D,GAAOe,SACduQ,UAAW,SACX6B,eAAgB,IAElBC,aAAc,CACZjE,cAAe,MACfgE,eAAgB,IAElBE,IAAK,CACHjF,KAAM,EACNkF,cAAe,EACflX,WAAY,UAEdmX,UAAW,CACTC,kBAAmB,EACnBC,kBAAmBzT,GAAOY,SAE5B8S,QAAS,CACPnX,SAAU,GACVD,MAAO0D,GAAOe,UAEhB4S,cAAe,CACbrX,MAAO0D,GAAOY,SAEhBuR,eAAgB,CACdhD,cAAe,MACf/S,WAAY,SACZH,gBAAiB+D,GAAOkB,UACxBhF,QAAS,GACTC,aAAc,EACdgX,eAAgB,GAChBtT,MAAOA,GAAQ,IAEjB6Q,MAAO,CACLtC,KAAM,EACNsB,WAAY,GACZpT,MAAO0D,GAAOe,UAEhB0R,mBAAoB,CAClBmB,UAAW,WACXtX,MAAO0D,GAAOY,QACd0N,UAAW,GACXG,aAAc,IAEhBiE,YAAa,CACXzW,gBAAiB+D,GAAOY,QACxB1E,QAAS,GACTC,aAAc,EACd0D,MAAOA,GAAQ,GACfzD,WAAY,UAEdyX,aAAc,CACZ5X,gBAAiB+D,GAAOY,QACxB1E,QAAS,GACTC,aAAc,EACd0D,MAAOA,GAAQ,GACfzD,WAAY,SACZkS,UAAW,IAEbuE,gBAAiB,CACftW,SAAU,GACVD,MAAO0D,GAAOuB,MACd/E,WAAY,QAEdsX,UAAW,CACTvX,SAAU,GACVD,MAAO0D,GAAOe,SACduQ,UAAW,OACX5B,WAAY,GACZqE,YAAa,IAEfC,kBAAmB,CACjB7E,cAAe,MACf/S,WAAY,SACZ+W,eAAgB,IAElBc,iBAAkB,CAChB3X,MAAO0D,GAAOe,SACdxE,SAAU,GACV+R,UAAW,EACXa,cAAe,MACf/S,WAAY,YC7ML8X,GAAgBC,IAC3B,IAAIzK,EAAS,GACb,MAAM0K,EAAa,iEAEnB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAUE,IAC5B3K,GAAU0K,EAAWE,OAAOC,KAAKC,MAFVJ,GAEgBG,KAAKE,WAE9C,OAAO/K,CAAM,GCQT7J,MAAEA,IAAUC,EAAWC,IAAI,UAC3B2U,GAAyB,KAE3B,MAAOhH,EAAMiH,GAAWpX,EAAS,KAC1BiM,EAAOoI,GAAYrU,EAAS,KAC5BkM,EAAUoI,GAAetU,EAAS,KAClCqX,EAAmBC,GAAwBtX,EAAS,KACpDuU,EAAcC,GAAmBxU,GAAS,IAC1CuX,EAAqBC,GAA0BxX,GAAS,GAEfA,GAAS,GAIzD,MAAMgM,QAAEA,EAAOP,WAAEA,EAAUY,SAAEA,EAAQrB,UAAEA,GAAcP,KAGjDgK,EAAa/F,GACjBgG,EAAMC,MAAM,QAASjG,EAAS,CAAC,CAAEnQ,KAAM,QA2FzC,OACEkR,EAACJ,EACK,CAAAhR,SAAA,CAAAoR,EAACJ,EAAK,CAAAnR,MAAOC,GAAOyW,eAAcvW,SAAA,CAChCL,EAACwS,GAASL,KAAK,iBAAiBM,KAAM,GAAI1R,MAAO0D,GAAOe,WACxDxF,EAACsV,EACC,CAAAuB,YAAY,YAEZC,aAAcsC,EACd7V,MAAO4O,EACPjS,MAAOC,GAAOgV,MACdN,iBAAiB,OAIrBpD,EAACJ,EAAK,CAAAnR,MAAOC,GAAOyW,eAAcvW,SAAA,CAChCL,EAACwS,EAAS,CAAAL,KAAK,eAAeM,KAAM,GAAI1R,MAAO0D,GAAOe,WACtDxF,EAACsV,EAAS,CACRuB,YAAY,mBAEZC,aAAcT,EACd9S,MAAO0K,EACP/N,MAAOC,GAAOgV,MACd4B,aAAa,gBACbC,eAAe,OACfC,aAAa,QACbpC,iBAAiB,OAIrBpD,EAACJ,EAAK,CAAAnR,MAAOC,GAAOyW,eAClBvW,SAAA,CAAAL,EAACwS,EAAQ,CACPL,KAAK,sBACLM,KAAM,GACN1R,MAAO0D,GAAOe,WAEhBxF,EAACsV,EACC,CAAAuB,YAAY,sBAEZC,aAAcR,EACd/S,MAAO2K,EACPhO,MAAOC,GAAOgV,MACdN,iBAAkB0B,IAEpBvW,EAACC,GACCL,QAAS,IAAM4W,GAAiBiD,IAAeA,IAE/CpZ,SAAAL,EAACwS,EACC,CAAAL,KAAMoE,EAAe,kBAAoB,cACzC9D,KAAM,GACN1R,MAAO0D,GAAOe,gBAKpBiM,EAACJ,EAAI,CAACnR,MAAOC,GAAOyW,eAAcvW,SAAA,CAChCL,EAACwS,EAAQ,CACPL,KAAK,sBACLM,KAAM,GACN1R,MAAO0D,GAAOe,WAEhBxF,EAACsV,EAAS,CACRuB,YAAY,wBACZC,aAAcwC,EACd/V,MAAO8V,EACPnZ,MAAOC,GAAOgV,MACdN,iBAAkB0E,IAGpBvZ,EAACC,EAAgB,CACfL,QAAS,IAAM4Z,GAAwBC,IAAeA,aAEtDzZ,EAACwS,EACC,CAAAL,KAAMoE,EAAe,kBAAoB,cACzC9D,KAAM,GACN1R,MAAO0D,GAAOe,gBAKpBiM,EAACnR,EAAK,CAAAJ,MAAOC,GAAOuY,iBAAgBrY,SAAA,CAClCL,EAACwS,EAAS,CAAAL,KAAK,oBAAoBM,KAAM,GAAI1R,MAAO0D,GAAOgB,QAAU,IAAG,2BAG1EgM,EAACnR,EAAI,CAACJ,MAAOC,GAAOuY,iBAClBrY,SAAA,CAAAL,EAACwS,EAAQ,CAACL,KAAK,oBAAoBM,KAAM,GAAI1R,MAAO0D,GAAOgB,QAAU,IAEhE,uBACPgM,EAACnR,EAAI,CAACJ,MAAOC,GAAOuY,iBAAgBrY,SAAA,CAClCL,EAACwS,EAAQ,CAACL,KAAK,oBAAoBM,KAAM,GAAI1R,MAAO0D,GAAOgB,QAAU,IAEhE,uCAEPzF,EAACC,EACC,CAAAC,MAAOC,GAAOmY,aACd1Y,QApKa0C,UACrB,MAAM4K,EAAkB,CACtBvJ,GAAIgV,GAAa,GACjBxG,OACAlE,QACAC,WACAwL,UAAW,GACX/I,eAAgB,GAChBgJ,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,OAAQ,GACRlL,cAAe,GACfnL,KAAM,GACNsW,eAAgB,GAChBC,QAAQ,EACRC,KAAM,GACNC,SAAU,GACVC,gBAAgB,EAChBvN,UAAW,GACXwN,SAAU,GACVC,aAAc,GACdC,OAAQ,GACRC,cAAe,GACfC,aAAc,GACdC,cAAe,GACfC,iBAAkB,GAClBC,qBAAsB,GACtBC,cAAe,GACfC,YAAa,EACbC,iBAAkB,GAClBC,gBAAiB,GACjBC,uBAAwB,EACxBC,UAAW,GACXC,kBAAmB,GACnBC,aAAc,GACdC,kBAAmB,GACnBC,qBAAsB,GACtBC,sBAAuB,GACvBC,8BAA+B,GAC/BC,aAAc,GACdC,sBAAuB,EACvBC,gBAAiB,GACjBC,iBAAiB,EACjBC,uBAAuB,EACvBC,yBAAyB,EACzBC,aAAa,EACbC,aAAc,GACdC,QAAS,GACTC,aAAc,GACdC,WAAY,GACZC,iBAAkB,IAGpB,IACE,MAAMjO,QAAeV,EAAYP,GACjC,GAAIiB,EAAOpL,MAET,YADA0T,EAAUtI,GAGVnL,QAAQmB,IAAI,2BAhFE7B,WAClB,IACE,MAAM6L,QAAeH,EAASC,EAAOC,GACrC,GAAIC,EAAOpL,MACT0T,EAAUtI,EAAOJ,SACZ,CACL/K,QAAQmB,IAAI,oBACZ,IACE2M,EAAOsG,QAAQ,UAChB,CAAC,MAAOC,GACPrU,QAAQD,MAAM,oBAAqBsU,EACpC,CACF,CACF,CAAC,MAAOtU,GACPC,QAAQD,MAAM,eAAgBA,GAC9B0T,EAAU,kCACX,GAiEG4F,EAEH,CAAC,MAAOtZ,GACPC,QAAQD,MAAM,sBAAuBA,GACrC0T,EAAU,yCACX,GAiG8BpW,SAEvBL,EAACM,GAAKJ,MAAOC,GAAOmX,gBAAejX,SAAA,gBAG5C,EAMGF,GAASK,EAAWC,OAAO,CAC7BiR,UAAW,CACT6F,kBAAmB,GACnBC,WAAY,GACZ9W,gBAAiB+D,GAAOuB,MACxBnF,WAAY,UAEd4W,KAAM,CACJnT,MAAO,GACPD,OAAQ,GACR0O,UAAW,GACXnS,aAAc,IAEhByI,QAAS,CACPrI,SAAU,GACVC,WAAY,OACZF,MAAO0D,GAAOY,QACd0N,UAAW,IAEb2E,YAAa,CACX1W,SAAU,GACVC,WAAY,OACZF,MAAO0D,GAAOe,SACduN,UAAW,IAEb4E,gBAAiB,CACf3W,SAAU,GACVD,MAAO0D,GAAOe,SACduQ,UAAW,SACX6B,eAAgB,IAElBC,aAAc,CACZjE,cAAe,MACfgE,eAAgB,IAElBE,IAAK,CACHjF,KAAM,EACNkF,cAAe,EACflX,WAAY,UAEdmX,UAAW,CACTC,kBAAmB,EACnBC,kBAAmBzT,GAAOY,SAE5B8S,QAAS,CACPnX,SAAU,GACVD,MAAO0D,GAAOe,UAEhB4S,cAAe,CACbrX,MAAO0D,GAAOY,SAEhBuR,eAAgB,CACdhD,cAAe,MACf/S,WAAY,SACZH,gBAAiB+D,GAAOkB,UACxBhF,QAAS,GACTC,aAAc,EACdgX,eAAgB,GAChBtT,MAAOA,GAAQ,IAEjB6Q,MAAO,CACLtC,KAAM,EACNsB,WAAY,GACZpT,MAAO0D,GAAOe,UAEhB0R,mBAAoB,CAClBmB,UAAW,WACXtX,MAAO0D,GAAOY,QACd0N,UAAW,GACXG,aAAc,IAEhBiE,YAAa,CACXzW,gBAAiB+D,GAAOY,QACxB1E,QAAS,GACTC,aAAc,EACd0D,MAAOA,GAAQ,GACfzD,WAAY,UAEdyX,aAAc,CACZ5X,gBAAiB+D,GAAOY,QACxB1E,QAAS,GACTC,aAAc,EACd0D,MAAOA,GAAQ,GACfzD,WAAY,SACZkS,UAAW,IAEbuE,gBAAiB,CACftW,SAAU,GACVD,MAAO0D,GAAOuB,MACd/E,WAAY,QAEdsX,UAAW,CACTvX,SAAU,GACVD,MAAO0D,GAAOe,SACduQ,UAAW,OACX5B,WAAY,GACZqE,YAAa,IAEfC,kBAAmB,CACjB7E,cAAe,MACf/S,WAAY,SACZ+W,eAAgB,IAElBc,iBAAkB,CAChB3X,MAAO0D,GAAOe,SACdxE,SAAU,GACV+R,UAAW,EACXa,cAAe,MACf/S,WAAY,YC/UZyb,GAAYlS,GAChB/B,GACA,CACEwE,UAAW,2BACXC,kBAAmB,QAErB,CACE,eAAgB,qBAMbxK,eAAeia,GAAanN,EAAiBnB,GAClD,IAWE,aAVuBqO,GAAU9X,IAAI,UAAW,CAC9CqG,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAehD,GACf,eAAgB,uBAGJyB,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,yBAA0BA,GAClCA,CACP,CACH,CAIOT,eAAeka,GAAY7Y,GAChC,IAIE,aAHuB2Y,GAAU9X,IAAI,SAAU,CAC7CqG,OAAQ,CAAElH,SAEImK,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,wBAAyBA,GACjCA,CACP,CACH,CAIO,MAAM0Z,GAAena,MAAOoa,EAAwBtN,EAAiBnB,EAAed,UAC5EmP,GAAUrQ,KAAK,SAAUyQ,EAAO,CAC3C7R,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAelC,EACf,eAAgB,sBAOTwP,GAAiBra,MAAOoa,SACtBJ,GAAUnQ,IAAI,aAAauQ,EAAM/Y,KAAM+Y,GAIzCE,GAAiBta,MAAOqB,SACtB2Y,GAAUlQ,OAAO,SAAU,CACtCvB,OAAQ,CAAElH,QC1DRkZ,GAAqB1b,OAAmDsG,GAEjEqV,GAAiB,KAC5B,MAAMpQ,EAAUC,EAAWkQ,IAC3B,IAAKnQ,EACH,MAAM,IAAIZ,MAAM,4DAElB,OAAOY,CAAO,EAGHqQ,GAAsB,EAAG1c,eACpC,MAAOqc,EAAOM,GAAYhb,EAAiC,OACpDib,EAAeC,GAAoBlb,EAAiC,OACpEe,EAAOqN,GAAYpO,EAAwB,MAQ5Cmb,EAAiB7a,UACrB,IACE,MAAMqO,EAAiBvH,GAAUY,SAC3BwB,QAAiBgR,GAAY7L,GACnCqM,EAASxR,EACV,CAAC,MAAOzI,GACPqN,EAASrN,EAAM2N,SAAW,iDAC3B,GAOH,OAJAtO,GAAU,KACR+a,GAAgB,GACf,IAGDnd,EAAC6c,GAAmBzY,SAAQ,CAC1Bb,MAAO,CACLmZ,QACAS,iBACAC,SAzBYC,GAA8BL,EAASK,GA0BnDC,YAxBc,IAAMN,EAAS,MAyB7BC,gBACAM,YAxBeb,GAA2BQ,EAAiBR,GAyB3D3Z,SAGD1C,SAAAA,GAEH,GCnDEiE,MAAEA,IAAUC,EAAWC,IAAI,UAE3BgZ,GAAuB,KACHxb,EAAS,IACPA,EAAS,IACHA,EAAS,IACSA,EAAS,IACnBA,GAAS,GACKA,GAAS,GAE/D,MAAOyb,EAAkBC,GAAuB1b,GAAS,IAKnD0a,MAAEA,GAAUI,KAGlB,OACErL,EAACJ,EAAI,CAACnR,MAAOC,GAAOuR,UAClBrR,SAAA,CAAAL,EAAC4R,EAAK,CACJE,OAAQ,CACNC,IAAK,kFAEP7R,MAAOC,GAAOsX,OAEhBhG,EAACnR,EAAI,CAACJ,MAAOC,GAAOuX,oCACNgF,GAAOiB,YAAc,MAEnC3d,EAACM,GAAKJ,MAAOC,GAAOwX,gBAEbtX,SAAA,0EAEPoR,EAACJ,GAAKnR,MAAOC,GAAO0X,aAClBxX,SAAA,CAAAL,EAACC,EAAgB,CACfC,MAAO,CAACC,GAAO2X,IAAK2F,GAAoBtd,GAAO6X,WAC/CpY,QAAS,IAAM8d,GAAoB,GAEnCrd,SAAAL,EAACM,EACC,CAAAJ,MAAO,CAACC,GAAOgY,QAASsF,GAAoBtd,GAAOiY,oCAKvDpY,EAACC,GACCC,MAAO,CAACC,GAAO2X,KAAM2F,GAAoBtd,GAAO6X,WAChDpY,QAAS,IAAM8d,GAAoB,YAEnC1d,EAACM,EACC,CAAAJ,MAAO,CAACC,GAAOgY,SAAUsF,GAAoBtd,GAAOiY,eAG/C/X,SAAA,iBAKVL,EADAyd,EACCrH,GAEA+C,GAFmB,CAAA,KAKvB,EAKEhZ,GAASK,EAAWC,OAAO,CAC/BiR,UAAW,CACT6F,kBAAmB,GACnBC,WAAY,GACZ9W,gBAAiB+D,GAAOuB,MACxBnF,WAAY,UAEd4W,KAAM,CACJnT,MAAO,GACPD,OAAQ,GACR0O,UAAW,GACXnS,aAAc,IAEhByI,QAAS,CACPrI,SAAU,GACVC,WAAY,OACZF,MAAO0D,GAAOY,QACd0N,UAAW,IAEb2E,YAAa,CACX1W,SAAU,GACVC,WAAY,OACZF,MAAO0D,GAAOe,SACduN,UAAW,IAEb4E,gBAAiB,CACf3W,SAAU,GACVD,MAAO0D,GAAOe,SACduQ,UAAW,SACX6B,eAAgB,IAElBC,aAAc,CACZjE,cAAe,MACfgE,eAAgB,IAElBE,IAAK,CACHjF,KAAM,EACNkF,cAAe,EACflX,WAAY,UAEdmX,UAAW,CACTC,kBAAmB,EACnBC,kBAAmBzT,GAAOY,SAE5B8S,QAAS,CACPnX,SAAU,GACVD,MAAO0D,GAAOe,UAEhB4S,cAAe,CACbrX,MAAO0D,GAAOY,SAEhBuR,eAAgB,CACdhD,cAAe,MACf/S,WAAY,SACZH,gBAAiB+D,GAAOkB,UACxBhF,QAAS,GACTC,aAAc,EACdgX,eAAgB,GAChBtT,MAAOA,GAAQ,IAEjB6Q,MAAO,CACLtC,KAAM,EACNsB,WAAY,GACZpT,MAAO0D,GAAOe,UAEhB0R,mBAAoB,CAClBmB,UAAW,WACXtX,MAAO0D,GAAOY,QACd0N,UAAW,GACXG,aAAc,IAEhBiE,YAAa,CACXzW,gBAAiB+D,GAAOY,QACxB1E,QAAS,GACTC,aAAc,EACd0D,MAAOA,GAAQ,GACfzD,WAAY,UAEdyX,aAAc,CACZ5X,gBAAiB+D,GAAOY,QACxB1E,QAAS,GACTC,aAAc,EACd0D,MAAOA,GAAQ,GACfzD,WAAY,SACZkS,UAAW,IAEbuE,gBAAiB,CACftW,SAAU,GACVD,MAAO0D,GAAOuB,MACd/E,WAAY,QAEdsX,UAAW,CACTvX,SAAU,GACVD,MAAO0D,GAAOe,SACduQ,UAAW,OACX5B,WAAY,GACZqE,YAAa,IAEfC,kBAAmB,CACjB7E,cAAe,MACf/S,WAAY,SACZ+W,eAAgB,IAElBc,iBAAkB,CAChB3X,MAAO0D,GAAOe,SACdxE,SAAU,GACV+R,UAAW,EACXa,cAAe,MACf/S,WAAY,aC3KVyD,MAAEA,IAAUC,EAAWC,IAAI,UAE3BoZ,GAAoB,KACA5b,EAAS,IACPA,EAAS,IACHA,EAAS,IACSA,EAAS,IACnBA,GAAS,GACKA,GAAS,GAE/D,MAAOyb,EAAkBC,GAAuB1b,GAAS,GACJyK,KAKrD,MAAMiQ,MAAEA,GAAUI,KA+FlB,OACErL,EAACJ,EAAI,CAACnR,MAAOC,GAAOuR,UAClBrR,SAAA,CAAAL,EAAC4R,EAAK,CACJE,OAAQ,CACNC,IAAK,kFAEP7R,MAAOC,GAAOsX,OAEhBhG,EAACnR,EAAI,CAACJ,MAAOC,GAAOuX,oCACNgF,GAAOiB,YAAc,MAEnC3d,EAACM,GAAKJ,MAAOC,GAAOwX,gBAEbtX,SAAA,0EAEPoR,EAACJ,GAAKnR,MAAOC,GAAO0X,aAClBxX,SAAA,CAAAL,EAACC,EAAgB,CACfC,MAAO,CAACC,GAAO2X,IAAK2F,GAAoBtd,GAAO6X,WAC/CpY,QAAS,IAAM8d,GAAoB,GAEnCrd,SAAAL,EAACM,EACC,CAAAJ,MAAO,CAACC,GAAOgY,QAASsF,GAAoBtd,GAAOiY,oCAKvDpY,EAACC,GACCC,MAAO,CAACC,GAAO2X,KAAM2F,GAAoBtd,GAAO6X,WAChDpY,QAAS,IAAM8d,GAAoB,YAEnC1d,EAACM,EACC,CAAAJ,MAAO,CAACC,GAAOgY,SAAUsF,GAAoBtd,GAAOiY,eAG/C/X,SAAA,iBAKVL,EADAyd,EACCrH,GAEC+C,GAFkB,CAAA,KAKvB,EAKEhZ,GAASK,EAAWC,OAAO,CAC/BiR,UAAW,CACT6F,kBAAmB,GACnBC,WAAY,GACZ9W,gBAAiB+D,GAAOuB,MACxBnF,WAAY,UAEd4W,KAAM,CACJnT,MAAO,GACPD,OAAQ,GACR0O,UAAW,GACXnS,aAAc,IAEhByI,QAAS,CACPrI,SAAU,GACVC,WAAY,OACZF,MAAO0D,GAAOY,QACd0N,UAAW,IAEb2E,YAAa,CACX1W,SAAU,GACVC,WAAY,OACZF,MAAO0D,GAAOe,SACduN,UAAW,IAEb4E,gBAAiB,CACf3W,SAAU,GACVD,MAAO0D,GAAOe,SACduQ,UAAW,SACX6B,eAAgB,IAElBC,aAAc,CACZjE,cAAe,MACfgE,eAAgB,IAElBE,IAAK,CACHjF,KAAM,EACNkF,cAAe,EACflX,WAAY,UAEdmX,UAAW,CACTC,kBAAmB,EACnBC,kBAAmBzT,GAAOY,SAE5B8S,QAAS,CACPnX,SAAU,GACVD,MAAO0D,GAAOe,UAEhB4S,cAAe,CACbrX,MAAO0D,GAAOY,SAEhBuR,eAAgB,CACdhD,cAAe,MACf/S,WAAY,SACZH,gBAAiB+D,GAAOkB,UACxBhF,QAAS,GACTC,aAAc,EACdgX,eAAgB,GAChBtT,MAAOA,GAAQ,IAEjB6Q,MAAO,CACLtC,KAAM,EACNsB,WAAY,GACZpT,MAAO0D,GAAOe,UAEhB0R,mBAAoB,CAClBmB,UAAW,WACXtX,MAAO0D,GAAOY,QACd0N,UAAW,GACXG,aAAc,IAEhBiE,YAAa,CACXzW,gBAAiB+D,GAAOY,QACxB1E,QAAS,GACTC,aAAc,EACd0D,MAAOA,GAAQ,GACfzD,WAAY,UAEdyX,aAAc,CACZ5X,gBAAiB+D,GAAOY,QACxB1E,QAAS,GACTC,aAAc,EACd0D,MAAOA,GAAQ,GACfzD,WAAY,SACZkS,UAAW,IAEbuE,gBAAiB,CACftW,SAAU,GACVD,MAAO0D,GAAOuB,MACd/E,WAAY,QAEdsX,UAAW,CACTvX,SAAU,GACVD,MAAO0D,GAAOe,SACduQ,UAAW,OACX5B,WAAY,GACZqE,YAAa,IAEfC,kBAAmB,CACjB7E,cAAe,MACf/S,WAAY,SACZ+W,eAAgB,IAElBc,iBAAkB,CAChB3X,MAAO0D,GAAOe,SACdxE,SAAU,GACV+R,UAAW,EACXa,cAAe,MACf/S,WAAY,YC5RHgd,GAAkC,CAC7C,CACEla,GAAI,UACJ/B,SAAU,EACVkc,IAAK,WACLje,MAAO,mBACPkB,MAAO,MACPkQ,UAAW,UACXwB,KAAM,SACNZ,MAAO,2CACPkM,YAAa,OACbC,OAAQ,KACR1Z,MAAO,IACPD,OAAQ,IACR4Z,OAAQ,MACRC,YAAa,KACbC,cAAe,KACfC,YAAa,oDACbC,WAAY,MACZC,aAAc,IACdC,eAAgB,MAChBC,eAAgB,MAChBC,WAAY,SAEd,CACE9a,GAAI,UACJ/B,SAAU,EACVkc,IAAK,WACLje,MAAO,kBACPkB,MAAO,SACPkQ,UAAW,UACXwB,KAAM,QACNZ,MAAO,0CACPkM,YAAa,OACbC,OAAQ,KACR1Z,MAAO,IACPD,OAAQ,IACR4Z,OAAQ,MACRC,YAAa,KACbC,cAAe,KACfC,YAAa,mDACbC,WAAY,MACZC,aAAc,OACdC,eAAgB,MAChBC,eAAgB,QAChBC,WAAY,SAEd,CACE9a,GAAI,UACJ/B,SAAU,EACVkc,IAAK,WACLje,MAAO,kBACPkB,MAAO,QACPkQ,UAAW,UACXwB,KAAM,WACNZ,MAAO,0CACPkM,YAAa,MACbC,OAAQ,IACR1Z,MAAO,IACPD,OAAQ,IACR4Z,OAAQ,MACRC,YAAa,KACbC,cAAe,KACfC,YAAa,gDACbC,WAAY,OACZC,aAAc,MACdC,eAAgB,MAChBC,eAAgB,UAChBC,WAAY,UAKHC,GAAqC,CAChD/a,GAAI,gBACJ9D,MAAO,iCACP8e,aAAa,EACbC,gBAAgB,EAChBC,sBAAsB,EACtBC,eAAgB,iCAChBC,gBAAgB,EAChBC,eAAe,EACfC,6BAA6B,EAC7BC,cAAc,EACdC,YAAa,uBACbC,eAAgB,iBAChBC,mBAAmB,EACnBC,kBAAmB,GACnBC,eAAe,EACfC,2BAA2B,EAC3BzT,OAAQ,UACR0T,KAAM,2CAGKC,GAAmC,CAC9CvN,KAAM,WACNwN,UAAW,cACXC,UAAW,SACXC,KAAM,WACNC,MAAO,KACPC,IAAK,QACLC,QAAS,MACTC,MAAO,kBACPhS,MAAO,sBACPiS,gBAAgB,GAGLC,GAAwB,CACnCnC,OAAQ,KACR1Z,MAAO,IACPD,OAAQ,IACR8Z,cAAe,KACfF,OAAQ,MACRmC,UAAW,KACX9B,aAAc,IACd+B,SAAU,yBACVC,MAAM,GAGKC,GAAgC,CAC3C5c,GAAI,cACJ6c,UAAW,eACXxW,SAAU,YACVyW,MAAO,EACPC,aAAc,aACdC,MAAO9C,GACP+C,OAAQ,WACRC,cAAe,CAACnC,IAChBzb,MAAO,GACP6d,UAAW,GACXC,QAAS,MACTC,eAAgB,wCAChBC,aAAc,sCACdC,aAAcxB,GACdyB,WAAYzB,GACZ0B,OAAQjB,GACRtgB,MAAO,eACPwhB,KAAM,WACNC,YAAa,aACbC,YAAa,WACbC,qBAAsB,eACtB/B,KAAM,2BACNgC,OAAQ,OACRC,kBAAmB,uBACnBC,mBAAoB,uBACpBC,mBAAoB,uBACpBC,qBAAsB,uBACtBC,IAAK,EACLC,WAAY,IACZC,QAAS,IACTC,cAAe,GACfC,gBAAiB,GCxJLC,GAAsC,CAChD,CACExe,GAAI,UACJwO,KAAM,iBACN9O,MAAO,OACP2G,SAAU,WACVyW,MAAO,EACP2B,UAAW,2BACXnI,QAAQ,EACRpI,MAAO,yCACPwQ,SAAS,EACTC,WAAY,OACZC,KAAM,iBACN3gB,SAAU,IACVwc,YAAa,iGACboE,UAAW,cACXC,SAAU,cACVzQ,OAAQ,CACN,2CACA,4CAEF0Q,SAAU,CAAC,iBAAkB,eAC7BC,UAAW,CAAC,UAAW,SACvBC,KAAM,CAAC,cAAe,SAAU,QAChCC,MAAO,cACPC,MAAO,KACPC,MAAO,IACPC,SAAS,EACTzI,OAAQ,SACRxZ,MAAO,QACPsR,WAAY,UACZ4Q,UAAW,MACXC,SAAU,CAAC,YAAa,YAAa,aACrCpF,IAAK,WACLqF,cAAc,EACdC,iBAAkB,CAAE,EACpBC,SAAU,CACR,CACE1f,GAAI,WACJ9D,MAAO,mBACPgS,MAAO,0CACPQ,WAAY,UACZhP,MAAO,OACPif,WAAY,OACZlE,YAAa,+CACb8E,SAAU,CAAC,YAAa,aACxBI,UAAW,GACXC,YAAa,OACbC,WAAY,UACZC,YAAa,CACX,CACE5jB,MAAO,OACPue,YAAa,mBACb/a,MAAO,OACPif,WAAY,OACZgB,UAAW,MAIjB,CACE3f,GAAI,WACJ9D,MAAO,mBACPgS,MAAO,0CACPQ,WAAY,UACZhP,MAAO,OACPif,WAAY,OACZlE,YAAa,gDACb8E,SAAU,CAAC,YAAa,aACxBI,UAAW,GACXC,YAAa,OACbC,WAAY,UACZC,YAAa,CACX,CACE5jB,MAAO,QACPue,YAAa,oBACb/a,MAAO,OACPif,WAAY,OACZgB,UAAW,OAKnBI,aAAc,2BACdpR,UAAW,WACXqR,YAAa,GACbL,UAAW,IACXrH,QAAS,CACP,CACE2H,SAAU,WACV/jB,MAAO,iBACPgkB,QAAS,6DAEX,CACED,SAAU,aACV/jB,MAAO,uBACPgkB,QAAS,mDAGbC,OAAQ,CAAC,EAAG,EAAG,EAAG,GAClBrR,KAAM,SACNsR,MAAO,CAAC,QAAS,SAAU,SAC3B9F,OAAQ,IACR+F,UAAW,OCnGJC,GAAa,KACxB,MAAMjX,UAAEA,GAAcP,KAEtB,OAAIO,EAAUI,cAEVqE,EAACyS,EAAK,CACJC,cAAe,CACbC,aAAa,GACd/jB,SAAA,CAEDL,EAACkkB,EAAMG,OAAO,CAAAlS,KAAK,SAASzH,QAAS,CAAA,IACrC1K,EAACkkB,EAAMG,OAAO,CAAAlS,KAAK,QAAQzH,QAAS,CAAE4Z,aAAc,WACpDtkB,EAACkkB,EAAMG,OAAM,CAAClS,KAAK,iBAAiBzH,QAAS,CAAE4Z,aAAc,WAC7DtkB,EAACkkB,EAAMG,QAAOlS,KAAK,eAAezH,QAAS,CAAE4Z,aAAc,WAC3DtkB,EAACkkB,EAAMG,OAAO,CAAAlS,KAAK,iBAAiBzH,QAAS,CAAE4Z,aAAc,cAK/DtkB,EAACkkB,EAAK,CACJC,cAAe,CACbC,aAAa,GAGf/jB,SAAAL,EAACkkB,EAAMG,OAAM,CACXlS,KAAK,SACLzH,QAAS,CACP4Z,aAAc,sBAMvB,EAKY9jB,EAAWC,OAAO,CAAE,GCtCnC,MAAM8jB,GAAiBna,GACrB/B,GACA,CACEwE,UAAW,gCACXC,kBAAmB,QAErB,CACE,eAAgB,qBAMbxK,eAAekiB,GAAkBpV,EAAiBnB,GACvD,IAWE,aAVuBsW,GAAe/f,IAAI,eAAgB,CACxDqG,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAehD,GACf,eAAgB,uBAGJyB,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,8BAA+BA,GACvCA,CACP,CACH,CAIOT,eAAemiB,GAAiB9gB,GACrC,IAIE,aAHuB4gB,GAAe/f,IAAI,cAAe,CACvDqG,OAAQ,CAAElH,SAEImK,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,6BAA8BA,GACtCA,CACP,CACH,CAIO,MAAM2hB,GAAoBpiB,MAAOqiB,EAAkCvV,EAAiBnB,EAAed,UAC3FoX,GAAetY,KAAK,cAAe0Y,EAAY,CAC1D9Z,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAelC,EACf,eAAgB,sBAOTyX,GAAsBtiB,MAAOqiB,SAC3BJ,GAAepY,IAAI,kBAAkBwY,EAAWhhB,KAAMghB,GAIxDE,GAAsBviB,MAAOqB,SAC3B4gB,GAAenY,OAAO,cAAe,CAChDvB,OAAQ,CAAElH,QCxDDmhB,GAAoB3jB,OAAkDsG,GAEtEsd,GAAsB,KACjC,MAAMrY,EAAUC,EAAWmY,IAC3B,IAAKpY,EACH,MAAM,IAAIZ,MAAM,iEAElB,OAAOY,CAAO,EAIHsY,GAAqB,EAAG3kB,eACnC,MAAM2M,UAAEA,GAAcP,MACfwY,EAAaC,GAAkBljB,EAAiC,KAChEmjB,EAAoBC,GAAyBpjB,EAAsC,OACnFkO,EAAWC,GAAgBnO,GAAkB,IAC7Ce,EAAOqN,GAAYpO,EAAwB,MAgD5CqjB,EAAmB/iB,MAAOqiB,IAC9BxU,GAAa,GACb,UACQkV,EAAiBV,GACvBO,GAAgBI,GAAoBA,EAAgB9U,KAAIC,GAAKA,EAAE9M,KAAOghB,EAAWhhB,GAAKghB,EAAalU,KACpG,CAAC,MAAO1N,GACPC,QAAQD,MAAM,+BAAgCA,EAAMyI,UAAUsC,MAAM4C,SAAW3N,EAAM2N,SACrFN,EAASrN,EAAMyI,UAAUsC,MAAM4C,SAAW,uDAC3C,CAAS,QACRP,GAAa,EACd,GA2BH,OACEnQ,EAAC8kB,GAAkB1gB,SAAQ,CACzBb,MAAO,CACL0hB,cACAM,cAtFgBjjB,MAAOqiB,IAC3B,IAAK3X,GAAWE,KAAM,OAEtB,MAAMkC,EAAUpC,EAAUE,KAAKyD,gBAAkB,GAC3C1C,EAAQjB,EAAUE,KAAKe,OAAS,GAChCd,EAAQH,GAAWG,OAAS,GAElCgD,GAAa,GACb,UACQuU,GAAkBC,EAAYvV,EAASnB,EAAOd,GACpD+X,GAAgBI,GAAoB,IAAIA,EAAiBX,KACzD3hB,QAAQmB,IAAI,mBAAoBwgB,GAGhC7T,EAAOC,KAAK,IAEb,CAAC,MAAOhO,GACPC,QAAQD,MAAM,4BAA6BA,EAAMyI,UAAUsC,MAS3DsC,EAASrN,EAAMyI,UAAUsC,MAAQ,oDAClC,CAAS,QACRqC,GAAa,EACd,GA0DGqV,iBAvDmBljB,MAAOmjB,IAC9BtV,GAAa,GACb,UACQ0U,GAAoB,CAAElhB,GAAI8hB,IAChCP,GAAgBI,GAAoBA,EAAgBrhB,QAAO0gB,GAAcA,EAAWhhB,KAAO8hB,KAC5F,CAAC,MAAO1iB,GACPC,QAAQD,MAAM,+BAAgCA,EAAMyI,UAAUsC,MAAM4C,SAAW3N,EAAM2N,SACrFN,EAASrN,EAAMyI,UAAUsC,MAAM4C,SAAW,uDAC3C,CAAS,QACRP,GAAa,EACd,GA8CGkV,mBACAK,qBA/BuBpjB,UAC3B,GAAK0K,GAAWE,KAAhB,CAEAiD,GAAa,GACbC,EAAS,MACT,IACE,MAAMnC,EAAQjB,EAAUE,KAAKe,OAAS,GAChC0C,EAAiB3D,EAAUE,KAAKyD,gBAAkB,GAGlDgV,SADiBnB,GAAkB7T,EAAgB1C,IACrBH,KACpCoX,EAAeS,EAChB,CAAC,MAAO5iB,GACPC,QAAQD,MAAM,sCAAuCA,EAAMyI,UAAUsC,MAAM4C,SAAW3N,EAAM2N,SAC5FN,EAASrN,EAAMyI,UAAUsC,MAAM4C,SAAW,uDAC3C,CAAS,QACRP,GAAa,EACd,CAhB4B,CAgB5B,EAeGgV,qBACAS,iBAboBjB,IACxBS,EAAsBT,EAAW,EAa7BzU,YACAnN,SAGD1C,SAAAA,GAEH,ECnIEwlB,GAAYzb,GAChB/B,GACA,CACEwE,UAAW,2BACXC,kBAAmB,QAErB,CACE,eAAgB,qBAMbxK,eAAewjB,GAAa1W,EAAiBnB,GAClD,IAWE,aAVuB4X,GAAUrhB,IAAI,UAAW,CAC9CqG,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAehD,GACf,eAAgB,uBAGJyB,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,yBAA0BA,GAClCA,CACP,CACH,CAIOT,eAAeyjB,GAAYpiB,GAChC,IAIE,aAHuBkiB,GAAUrhB,IAAI,SAAU,CAC7CqG,OAAQ,CAAElH,SAEImK,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,wBAAyBA,GACjCA,CACP,CACH,CAIO,MAAMijB,GAAe1jB,MAAO2jB,EAAwB7W,EAAiBnB,EAAed,UAC5E0Y,GAAU5Z,KAAK,SAAUga,EAAO,CAC3Cpb,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAelC,EACf,eAAgB,sBAOT+Y,GAAiB5jB,MAAO2jB,SACtBJ,GAAU1Z,IAAI,aAAa8Z,EAAMtiB,KAAMsiB,GAIzCE,GAAiB7jB,MAAOqB,SACtBkiB,GAAUzZ,OAAO,SAAU,CACtCvB,OAAQ,CAAElH,QCxDDyiB,GAAejlB,OAA6CsG,GAE5D4e,GAAiB,KAC5B,MAAM3Z,EAAUC,EAAWyZ,IAC3B,IAAK1Z,EACH,MAAM,IAAIZ,MAAM,uDAElB,OAAOY,CAAO,EAGH4Z,GAAgB,EAAGjmB,eAC9B,MAAM2M,UAAEA,GAAcP,MACfsN,EAAQwM,GAAavkB,EAA4B,KACjDwkB,EAAeC,GAAoBzkB,EAAiC,OACpEkO,EAAWC,GAAgBnO,GAAkB,IAC7Ce,EAAOqN,GAAYpO,EAAwB,MAqD5C0kB,EAAcpkB,MAAO2jB,IACzB9V,GAAa,GACb,UACQuW,EAAYT,GAClBM,GAAWI,GAAeA,EAAWnW,KAAIC,GAAKA,EAAE9M,KAAOsiB,EAAMtiB,GAAKsiB,EAAQxV,KAC3E,CAAC,MAAO1N,GACPC,QAAQD,MAAM,0BAA2BA,EAAMyI,UAAUsC,MAAM4C,SAAW3N,EAAM2N,SAChFN,EAASrN,EAAMyI,UAAUsC,MAAM4C,SAAW,kDAC3C,CAAS,QACRP,GAAa,EACd,GA2BH,OACEnQ,EAAComB,GAAahiB,SAAQ,CACpBb,MAAO,CACLwW,SACA6M,SAtFWtkB,MAAO2jB,IACtB,IAAKjZ,GAAWE,KAAM,OAEtB,MAAMkC,EAAUpC,EAAUE,KAAKyD,gBAAkB,GAC3C1C,EAAQjB,EAAUE,KAAKe,OAAS,GAChCd,EAAQH,GAAWG,OAAS,GAElCgD,GAAa,GACb,UACQ6V,GAAaC,EAAO7W,EAASnB,EAAOd,GAC1CoZ,GAAWI,GAAe,IAAIA,EAAYV,KAC1CjjB,QAAQmB,IAAI,cAAe8hB,GAG3BnV,EAAOC,KAAK,IAEb,CAAC,MAAOhO,GACPC,QAAQD,MAAM,uBAAwBA,EAAMyI,UAAUsC,MAStDsC,EAASrN,EAAMyI,UAAUsC,MAAQ,+CAClC,CAAS,QACRqC,GAAa,EACd,GA0DG0W,YAvDcvkB,MAAOwkB,IACzB3W,GAAa,GACb,UACQgW,GAAe,CAAExiB,GAAImjB,IAC3BP,GAAWI,GAAeA,EAAW1iB,QAAOgiB,GAASA,EAAMtiB,KAAOmjB,KACnE,CAAC,MAAO/jB,GACPC,QAAQD,MAAM,0BAA2BA,EAAMyI,UAAUsC,MAAM4C,SAAW3N,EAAM2N,SAChFN,EAASrN,EAAMyI,UAAUsC,MAAM4C,SAAW,kDAC3C,CAAS,QACRP,GAAa,EACd,GA8CGuW,cACAK,gBA/BkBzkB,UACtB,GAAK0K,GAAWE,KAAhB,CAEAiD,GAAa,GACbC,EAAS,MACT,IACE,MAAMnC,EAAQjB,EAAUE,KAAKe,OAAS,GAChC0C,EAAiB3D,EAAUE,KAAKyD,gBAAkB,GAGlDqW,SADiBlB,GAAanV,EAAgB1C,IACrBH,KAC/ByY,EAAUS,EACX,CAAC,MAAOjkB,GACPC,QAAQD,MAAM,iCAAkCA,EAAMyI,UAAUsC,MAAM4C,SAAW3N,EAAM2N,SACvFN,EAASrN,EAAMyI,UAAUsC,MAAM4C,SAAW,kDAC3C,CAAS,QACRP,GAAa,EACd,CAhB4B,CAgB5B,EAeGqW,gBACAS,YAbehB,IACnBQ,EAAiBR,EAAM,EAanB/V,YACAnN,SAGD1C,SAAAA,GAEH,EClIG6mB,GAAe,EAAG7mB,cAErBL,EAAC+M,GACC,CAAA1M,SAAAL,EAAC8B,GAAY,CAAAzB,SACXL,EAAC+c,GACC,CAAA1c,SAAAL,EAACglB,GAAkB,CAAA3kB,SACjBL,EAAC6P,GACC,CAAAxP,SAAAL,EAACsmB,GAAa,CAAAjmB,SACXA,cAWJ8mB,GAAa,KAGxB,MAAMC,EAAcC,IAIpB,OACErnB,EAACknB,GACC,CAAA7mB,SAAAL,EAACsnB,EAAc,CAAA/jB,MALW,SAAhB6jB,EAAyBG,EAAYC,WAM7CxnB,EAACikB,UAGL,EC1CY,SAAAwD,GAAyBC,EAAWC,GAClD,OAAOA,CACT,CCMA,SAASC,GAAWC,GAIlB,OAAO7nB,EAAC8nB,EAAW,CAACrV,KAAM,GAAIvS,MAAO,CAAEgT,cAAe,MAAS2U,GACjE,UAEiBE,KACf,MAAMX,EAAcC,IAEpB,OACE5V,EAACuW,EAAI,CACH7D,cAAe,CACb8D,sBAAuBxjB,GAAO2iB,GAAe,SAASxiB,KAGtDwf,YAAaqD,GAAmB,GAAO,IAEzCpnB,SAAA,CAAAL,EAACgoB,EAAK3D,OAAM,CACVlS,KAAK,SACLzH,QAAS,CACP7K,MAAO,OACPqoB,WAAY,EAAGnnB,WAAYf,EAAC4nB,GAAU,CAACzV,KAAK,SAASpR,MAAOA,IAC5DqjB,aAAa,KAmBhBpkB,EAACgoB,EAAK3D,OACL,CAAAlS,KAAK,cACLzH,QAAS,CACP7K,MAAO,cAGPqoB,WAAa,EAAEzV,OAAM1R,WAAYf,EAACwS,GAASL,KAAK,YAAYM,KAAMA,EAAM1R,MAAOA,OAGlFf,EAACgoB,EAAK3D,OACL,CAAAlS,KAAK,OACLzH,QAAS,CACP7K,MAAO,OAEPqoB,WAAY,EAAGnnB,WAAYf,EAAC4nB,GAAU,CAACzV,KAAK,gBAAgBpR,MAAOA,OAIrEf,EAACgoB,EAAK3D,OACN,CAAAlS,KAAK,aACLzH,QAAS,CACP7K,MAAO,WACPukB,aAAa,EAEb8D,WAAY,EAAGnnB,WAAYf,EAAC4nB,GAAU,CAACzV,KAAK,OAAOpR,MAAOA,SAKpE,CC1EO,MAAMonB,GAAa,IAEpB1W,EAACyS,EAAK,CACJC,cAAe,CACbC,aAAa,GAGf/jB,SAAA,CAAAL,EAACkkB,EAAMG,OAAM,CACXlS,KAAK,UACLzH,QAAS,CACP4Z,aAAc,qBAGlBtkB,EAACkkB,EAAMG,OACL,CAAAlS,KAAK,QACLzH,QAAS,CACP4Z,aAAc,qBAGlBtkB,EAACkkB,EAAMG,OACL,CAAAlS,KAAK,WACLzH,QAAS,CACP4Z,aAAc,wBAUX9jB,EAAWC,OAAO,CAAE,GC/BnC,MAAMyO,GAAc9E,GAClB/B,GACA,CACEwE,UAAW,6BACXC,kBAAmB,QAErB,CACE,eAAgB,qBAMbxK,eAAe8lB,GAAsBhZ,EAAiBnB,GAC3D,IAWE,aAVuBiB,GAAY1K,IAAI,YAAa,CAClDqG,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAehD,GACf,eAAgB,uBAGJyB,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,2BAA4BA,GACpCA,CACP,CACH,CAIOT,eAAe+lB,GAAqB1kB,GACzC,IAIE,aAHuBuL,GAAY1K,IAAI,WAAY,CACjDqG,OAAQ,CAAElH,SAEImK,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,0BAA2BA,GACnCA,CACP,CACH,CAIO,MAAMulB,GAAwBhmB,MAAOkN,EAA4BJ,EAAiBnB,EAAed,UACzF+B,GAAYjD,KAAK,WAAYuD,EAAS,CACjD3E,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAelC,EACf,eAAgB,sBAOTob,GAA0BjmB,MAAOkN,SAC/BN,GAAY/C,IAAI,eAAeqD,EAAQ7L,KAAM6L,GAI/CgZ,GAA0BlmB,MAAOqB,SAC/BuL,GAAY9C,OAAO,WAAY,CAC1CvB,OAAQ,CAAElH,QC5DD8kB,GAAwBtnB,OAA+CsG,GAEvEihB,GAAoB,KAC/B,MAAMhc,EAAUC,EAAW8b,IAC3B,IAAK/b,EACH,MAAM,IAAIZ,MAAM,kEAElB,OAAOY,CAAO,EAGHic,GAAyB,EAAGtoB,eACvC,MAAOyP,EAAUC,GAAe/N,EAA8B,KACvDgO,EAAiBC,GAAsBjO,EAAmC,OAC1EkO,EAAWC,GAAgBnO,GAAkB,IAC7Ce,EAAOqN,GAAYpO,EAAwB,MAElDI,GAAU,KACRwmB,GAAoB,GACnB,IAEH,MAQMA,EAAqBtmB,UACzB6N,GAAa,GACbC,EAAS,MACT,IACE,MAAMnC,EAAQ,GAER2C,SADiBwX,GAAsBhf,GAAUW,iBAAkBkE,IACxCH,KACjCiC,EAAYa,EACb,CAAC,MAAO7N,GACPC,QAAQD,MAAM,oCAAqCA,GACnDqN,EAAS,oDACV,CAAS,QACRD,GAAa,EACd,GAOH,OACEnQ,EAACyoB,GAAsBrkB,SAAQ,CAC7Bb,MAAO,CACLuM,WACA+Y,WAhCcrZ,IAClBO,GAAaQ,GAAiB,IAAIA,EAAcf,IAAS,EAgCrDsZ,cA7BiB7X,IACrBlB,GAAaQ,GAAiBA,EAAatM,QAAOuL,GAAWA,EAAQ7L,KAAOsN,KAAW,EA6BnF2X,qBACA5Y,kBACAkB,cAZiB1B,IACrBS,EAAmBT,EAAQ,EAYvBU,YACAnN,SAGD1C,SAAAA,GAEH,ECzEE0oB,GAAmB3e,GACvB/B,GACA,CACEwE,UAAW,kCACXC,kBAAmB,QAErB,CACE,eAAgB,qBAMbxK,eAAe0mB,GAAoB5Z,EAAiBnB,GACzD,IAWE,aAVuB8a,GAAiBvkB,IAAI,iBAAkB,CAC5DqG,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAehD,GACf,eAAgB,uBAGJyB,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,gCAAiCA,GACzCA,CACP,CACH,CAIOT,eAAe2mB,GAAmBtlB,GACvC,IAIE,aAHuBolB,GAAiBvkB,IAAI,gBAAiB,CAC3DqG,OAAQ,CAAElH,SAEImK,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,+BAAgCA,GACxCA,CACP,CACH,CAIO,MAAMmmB,GAAsB5mB,MAAO6mB,EAA+B/Z,EAAiBnB,EAAed,UAC1F4b,GAAiB9c,KAAK,gBAAiBkd,EAAc,CAChEte,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAelC,EACf,eAAgB,sBAOTic,GAAwB9mB,MAAO6mB,SAC7BJ,GAAiB5c,IAAI,oBAAoBgd,EAAaxlB,KAAMwlB,GAI9DE,GAAwB/mB,MAAOqB,SAC7BolB,GAAiB3c,OAAO,gBAAiB,CACpDvB,OAAQ,CAAElH,QC7DR2lB,GAAsBnoB,OAAoDsG,GAEnE8hB,GAAkB,KAC7B,MAAM7c,EAAUC,EAAW2c,IAC3B,IAAK5c,EACH,MAAM,IAAIZ,MAAM,8DAElB,OAAOY,CAAO,EAGH8c,GAAuB,EAAGnpB,eACrC,MAAM2M,UAAEA,GAAcP,MACfiQ,EAAOM,GAAYhb,EAAiC,OACpDib,EAAeC,GAAoBlb,EAAiC,OACpEkO,EAAWC,GAAgBnO,GAAkB,IAC7Ce,EAAOqN,GAAYpO,EAAwB,MAsClD,OACEhC,EAACspB,GAAoBllB,SAAQ,CAC3Bb,MAAO,CACLmZ,QACAU,SAlCYC,IAChBL,EAASK,EAAS,EAkCdC,YA/Bc,KAClBN,EAAS,KAAK,EA+BVyM,gBA5BkBnnB,UAGtB6N,GAAa,GACbC,EAAS,MACT,IACE,MAAMO,EAAiB3D,GAAWE,MAAMyD,gBAAkB,GACpDnF,QAAiByd,GAAmBtY,GAE1CqM,EAASxR,EACV,CAAC,MAAOzI,GACPC,QAAQD,MAAM,iCAAkCA,EAAMyI,UAAUsC,MAAM4C,SAAW3N,EAAM2N,SACvFN,EAASrN,EAAMyI,UAAUsC,MAAM4C,SAAW,iDAC3C,CAAS,QACRP,GAAa,EACd,GAcG8M,gBACAM,YAZeb,IACnBQ,EAAiBR,EAAM,EAYnBxM,YACAnN,SAGD1C,SAAAA,GAEH,ECzESqpB,GAAevoB,OAA6CsG,GAE5DkiB,GAAW,KACtB,MAAMjd,EAAUC,EAAW+c,IAC3B,IAAKhd,EACH,MAAM,IAAIZ,MAAM,gDAElB,OAAOY,CAAO,EAGH4a,GAAgB,EAAGjnB,eAC9B,MAAMupB,EAAoBvC,KACnBwC,EAAOC,GAAY9nB,EAAoB,UAExC+nB,EAAuB,WAAVF,EAA2C,SAAtBD,EAAyC,SAAVC,EAMvE,OAJAznB,GAAU,KACR0nB,EAASC,EAAa,OAAS,QAAQ,GACtC,CAACA,IAGF/pB,EAAC0pB,GAAatlB,SAAQ,CAACb,MAAO,CAAEsmB,QAAOC,WAAUC,uBAC9C1pB,GAEH,EC7BSuM,GAAUxC,GACrB/B,GACA,CACEwE,UAAW,0BACXC,kBAAmB,QAErB,CACE,eAAgB,qBAKpBxK,eAAe0nB,KACb,aAAa3c,EAAYC,aAAa,sBACxC,OAIa2c,GAAS3nB,MAAO4K,IAC3B,MAAMC,QAAc6c,KACpB,aAAapd,GAAQX,KAAK,UAAWiB,EAAM,CACzC5B,QAAS,CACP+D,cAAe,UAAUlC,MAE3B,EAGS+c,GAAQ5nB,MAAO4K,IAC1B,MAAMC,QAAc6c,KACpB,aAAapd,GAAQX,KAAK,SAAUiB,EAAM,CACxC5B,QAAS,CACP+D,cAAe,UAAUlC,MAE3B,EAGSgd,GAAc7nB,UACzB,MAAM6K,QAAc6c,KACpB,aAAapd,GAAQpI,IAAI,SAAU,CACjC8G,QAAS,CACP+D,cAAe,UAAUlC,MAE3B,EAGSid,GAAoB9nB,MAAO8M,EAAiBnB,KACvD,IACE,MAAMd,QAAc6c,KACdxe,QAAiBoB,GAAQpI,IAAI,SAAU,CAC3CqG,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAe,UAAUlC,OAI7B,OADAnK,QAAQmB,IAAIqH,GACLA,CACR,CAAC,MAAOzI,GAEP,MADAC,QAAQD,MAAM,+BAAgCA,GACxCA,CACP,GAGUsnB,GAAgB/nB,MAAO4K,IAClC,MAAMC,QAAc6c,KACpB,aAAapd,GAAQT,IAAI,YAAYe,EAAKvJ,KAAMuJ,EAAM,CACpD5B,QAAS,CACP+D,cAAe,UAAUlC,MAE3B,EAGSmd,GAAgBhoB,OAASqB,SACpC,MAAMwJ,QAAc6c,KAEpB,OADAhnB,QAAQmB,IAAIR,SACCiJ,GAAQR,OAAO,QAAS,CACnCvB,OAAQ,CAAElH,MACV2H,QAAS,CACP+D,cAAe,UAAUlC,MAE3B,EClFEod,GAAangB,GACjB/B,GACA,CACEwE,UAAW,4BACXC,kBAAmB,QAErB,CACE,eAAgB,qBAMbxK,eAAekoB,GAAcpb,EAAiBnB,GACnD,IAWE,aAVuBsc,GAAW/lB,IAAI,WAAY,CAChDqG,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAehD,GACf,eAAgB,uBAGJyB,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,0BAA2BA,GACnCA,CACP,CACH,CAIOT,eAAemoB,GAAa9mB,GACjC,IAIE,aAHuB4mB,GAAW/lB,IAAI,UAAW,CAC/CqG,OAAQ,CAAElH,SAEImK,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,yBAA0BA,GAClCA,CACP,CACH,CAIO,MAAM2nB,GAAgBpoB,MAAOqoB,EAA0Bvb,EAAiBnB,EAAed,UAC/Eod,GAAWte,KAAK,UAAW0e,EAAQ,CAC9C9f,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAelC,EACf,eAAgB,sBAOTyd,GAAkBtoB,MAAOqoB,SACvBJ,GAAWpe,IAAI,cAAcwe,EAAOhnB,KAAMgnB,GAI5CE,GAAkBvoB,MAAOqB,SACvB4mB,GAAWne,OAAO,UAAW,CACxCvB,OAAQ,CAAElH,QCtERmnB,GAAY1gB,GAChB/B,GACA,CACEwE,UAAW,2BACXC,kBAAmB,QAErB,CACE,eAAgB,qBAMbxK,eAAeyoB,GAAa3b,EAAiBnB,GAClD,IAWE,aAVuB6c,GAAUtmB,IAAI,UAAW,CAC9CqG,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAehD,GACf,eAAgB,uBAGJyB,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,yBAA0BA,GAClCA,CACP,CACH,CAIOT,eAAe0oB,GAAYrnB,GAChC,IAIE,aAHuBmnB,GAAUtmB,IAAI,SAAU,CAC7CqG,OAAQ,CAAElH,SAEImK,IACjB,CAAC,MAAO/K,GAEP,MADAC,QAAQD,MAAM,wBAAyBA,GACjCA,CACP,CACH,CAIO,MAAMkoB,GAAe3oB,MAAO4oB,EAAwB9b,EAAiBnB,EAAed,UAC5E2d,GAAU7e,KAAK,SAAUif,EAAO,CAC3CrgB,OAAQ,CACNb,SAAUoF,EACVnB,MAAOA,GAET3C,QAAS,CACP+D,cAAelC,EACf,eAAgB,sBAOTge,GAAiB7oB,MAAO4oB,SACtBJ,GAAU3e,IAAI,aAAa+e,EAAMvnB,KAAMunB,GAIzCE,GAAiB9oB,MAAOqB,SACtBmnB,GAAU1e,OAAO,SAAU,CACtCvB,OAAQ,CAAElH,QC9DR0nB,GAAajhB,GACjB/B,GACA,CACE2B,SAAUZ,GAAUY,SACpBiE,MAAO,GACPpB,UAAW,6BACX2T,UAAW,wBACX1T,kBAAmB,QAErB,CACEuC,cAAe,QACf,eAAgB,qBAOPic,GAAahpB,eACX+oB,GAAW7mB,IAAI,YAIjB+mB,GAAsBjpB,MAAOkpB,IACxC,IAEE,aADuBH,GAAWpf,KAAK,yBAA0Buf,EAElE,CAAC,MAAOzoB,GAEP,MADAC,QAAQD,MAAM,iCAAkCA,GAC1CA,CACP,GAIU0oB,GAAuBnpB,MAAOopB,IACzC,IAEE,aADuBL,GAAWpf,KAAK,0BAA2B,CAAEyf,WAErE,CAAC,MAAO3oB,GAEP,MADAC,QAAQD,MAAM,SAAUA,EAAM2N,SACxB3N,CACP,GCjDU4oB,GAAS,CAClBC,gBAAiB,CAAE,0BACnBC,WAAY,CAAE,0BACdC,cAAe,CAAE,0BACjBC,cAAc,CAAE,0BAChBC,qBAAsB,CAAE,2BCTfC,GAAS,CAClBL,gBAAiB,cACjB1B,MAAO,SACPgC,SAAU,YACVpc,SAAU,aCHDqc,GAAe7pB,MAAO4I,EAAa3H,KAC9C,IACE,MAAM6oB,EAAYzpB,KAAKmB,UAAUP,SAC3B8J,EAAYe,aAAalD,EAAKkhB,EACrC,CAAC,MAAOrpB,GAEP,MADAC,QAAQD,MAAM,8BAA8BmI,MAASnI,GAC/CA,CACP,GAIUspB,GAAgB/pB,MAAO4I,IAClC,IACE,MAAMkhB,QAAkB/e,EAAYC,aAAapC,GACjD,OAAoB,MAAbkhB,EAAoBzpB,KAAKC,MAAMwpB,GAAa,IACpD,CAAC,MAAOrpB,GAEP,MADAC,QAAQD,MAAM,gCAAgCmI,MAASnI,GACjDA,CACP,GCrBUupB,GAAqBC,IAE9B,MAAMC,EAAqBD,EAAkBnV,QAAQ,MAAO,IAM5D,IAAIqV,EASJ,OANIA,EANiD,KAA9BD,EAAmBxO,OAMfwO,EAAmBpV,QAAQ,+BAAgC,kBAG3DoV,EAAmBpV,QAAQ,wBAAyB,cAGxEqV,CAAoB,ECZzB,SAAUC,GACd7E,GAEA,OACE7nB,EAACsR,EAAI,CACHqb,OAAO,YACH9E,EACJtW,KAAMsW,EAAMtW,KACZ3R,QAAUgtB,IACY,QAAhBC,EAASC,KAEXF,EAAEG,iBAEFC,EAAWC,iBAAiBpF,EAAMtW,MACnC,GAIT,CCtBc,MAAA2b,GAAmBC,GAEE,IAAhBA,ECEb,SAAUT,GACd7E,GAEA,OACE7nB,EAACsR,EAAI,CACHqb,OAAO,YACH9E,EACJtW,KAAMsW,EAAMtW,KACZ3R,QAAUgtB,IACY,QAAhBC,EAASC,KAEXF,EAAEG,iBAEFC,EAAWC,iBAAiBpF,EAAMtW,MACnC,GAIT,CCJgB,SAAA6b,GACdvF,EACAwF,GAEA,MAAMxD,EAAQxC,KAAoB,QAC5BiG,EAAiBzF,EAAMgC,GAE7B,OAAIyD,GAGK7oB,GAAOolB,GAAOwD,EAEzB,CAEM,SAAU/sB,GAAKunB,GACnB,MAAM3nB,MAAEA,EAAKqtB,WAAEA,EAAUC,UAAEA,KAAcC,GAAe5F,EAClD9mB,EAAQqsB,GAAc,CAAE1oB,MAAO6oB,EAAYnoB,KAAMooB,GAAa,QAEpE,OAAOxtB,EAAC0tB,EAAY,CAAAxtB,MAAO,CAAC,CAAEa,SAASb,MAAYutB,GACrD,CAEM,SAAUpc,GAAKwW,GACnB,MAAM3nB,MAAEA,EAAKqtB,WAAEA,EAAUC,UAAEA,KAAcC,GAAe5F,EAClDnnB,EAAkB0sB,GAAc,CAAE1oB,MAAO6oB,EAAYnoB,KAAMooB,GAAa,cAE9E,OAAOxtB,EAAC2tB,EAAY,CAAAztB,MAAO,CAAC,CAAEQ,mBAAmBR,MAAYutB,GAC/D,CCzCM,SAAUG,GAAS/F,GACvB,OAAO7nB,EAACM,GAAI,IAAKunB,EAAO3nB,MAAO,CAAC2nB,EAAM3nB,MAAO,CAAE+S,WAAY,eAC7D,CCIc,SAAU4a,IAAeC,KAAEA,IACvC,OACErc,EAACJ,GACC,CAAAhR,SAAA,CAAAoR,EAACJ,GAAI,CAACnR,MAAOC,GAAO4tB,oBAAmB1tB,SAAA,CACrCL,EAACM,GACC,CAAAJ,MAAOC,GAAO6tB,eACdT,WAAW,kBACXC,UAAU,wBAELntB,SAAA,sCAEPL,EAACqR,GACC,CAAAnR,MAAO,CAACC,GAAO8tB,uBAAwB9tB,GAAO+tB,oBAC9CV,UAAU,yBACVD,WAAW,mBACXltB,SAAAL,EAAC4tB,GAAQ,CAAAvtB,SAAEytB,MAGb9tB,EAACM,GACC,CAAAJ,MAAOC,GAAO6tB,eACdT,WAAW,kBACXC,UAAU,wBAELntB,SAAA,sFAGTL,EAACqR,GAAI,CAACnR,MAAOC,GAAOguB,cAAa9tB,SAC/BL,EAAC0sB,GACC,CAAAxsB,MAAOC,GAAOiuB,SACd7c,KAAK,yFACLlR,SAAAL,EAACM,GAAI,CAACJ,MAAOC,GAAOkuB,aAAcd,WAAY9oB,GAAOC,MAAME,KAAIvE,SAAA,iFAOzE,CAEA,MAAMF,GAASK,EAAWC,OAAO,CAC/BstB,oBAAqB,CACnBltB,WAAY,SACZiT,iBAAkB,IAEpBoa,mBAAoB,CAClBtW,eAAgB,GAElBqW,uBAAwB,CACtBrtB,aAAc,EACd2W,kBAAmB,GAErByW,eAAgB,CACdhtB,SAAU,GACVstB,WAAY,GACZvY,UAAW,UAEboY,cAAe,CACbpb,UAAW,GACXe,iBAAkB,GAClBjT,WAAY,UAEdutB,SAAU,CACRG,gBAAiB,IAEnBF,aAAc,CACZtY,UAAW,aCpEPzR,MAAAA,GAAOD,OAAAA,IAAWE,EAAWC,IAAI,UASnCsL,GAA2B,CAC/B,CAAEnM,GAAI,EAAGwO,KAAM,mBAAoB9O,MAAO,OAAQwO,MAAO,gCACzD,CAAElO,GAAI,EAAGwO,KAAM,kBAAmB9O,MAAO,OAAQwO,MAAO,mCACxD,CAAElO,GAAI,EAAGwO,KAAM,kBAAmB9O,MAAO,OAAQwO,MAAO,qCACxD,CAAElO,GAAI,EAAGwO,KAAM,WAAY9O,MAAO,OAAQwO,MAAO,iCACjD,CAAElO,GAAI,EAAGwO,KAAM,SAAU9O,MAAO,OAAQwO,MAAO,iCAC/C,CAAElO,GAAI,EAAGwO,KAAM,UAAW9O,MAAO,OAAQwO,MAAO,mCAG5C2c,GAAqB,KACzB,MAAMvJ,YAAEA,EAAWE,mBAAEA,EAAkBS,iBAAEA,EAAgB1V,UAAEA,EAASnN,MAAEA,GAAUgiB,KAM1E0J,EAAiD,QAA9BtJ,GAAoBtlB,MACzCiQ,GACAA,GAAS7L,QAAOuL,GAAWA,EAAQ2C,KAAKuc,cAAczf,SAASkW,GAAoBtlB,MAAM6uB,eAAiB,MAE9G,OACEjd,EAACJ,EAAI,CAACnR,MAAOC,GAAOuR,UAClBrR,SAAA,CAAAL,EAAC2uB,EACC,CAAA7gB,KAAMmX,EACN2J,YACA,EAAAC,gCAAgC,EAChCC,aAAe1rB,GAASA,EAAKO,GAC7BorB,WAAY,EAAG3rB,UACbpD,EAACC,EACC,CAAAC,MAAO,CACLC,GAAO6uB,eACP5rB,EAAKO,KAAOwhB,GAAoBxhB,IAAMxD,GAAO8uB,0BAE/CrvB,QAAS,IAAMgmB,EAAiBxiB,GAEhC/C,SAAAL,EAACM,EAAI,CAACJ,MAAO,CACXC,GAAO+uB,aACP9rB,EAAKO,KAAOwhB,GAAoBxhB,IAAMxD,GAAOgvB,wBAE5C9uB,SAAA+C,EAAKvD,UAIZuvB,sBAAuBjvB,GAAOkvB,kBAC9BnvB,MAAOC,GAAOmvB,eAGhB7d,EAACJ,EAAI,CAACnR,MAAOC,GAAOovB,eAClBlvB,SAAA,CAAAL,EAAC4R,EAAK,CACJE,OAAQ,CAAEC,IAAKrJ,IACfxI,MAAOC,GAAOqvB,aAEhB/d,EAACJ,EAAK,CAAAnR,MAAOC,GAAOsvB,mBAClBpvB,SAAA,CAAAL,EAACM,EAAK,CAAAJ,MAAOC,GAAOuvB,iDACpB1vB,EAACM,EAAI,CAACJ,MAAOC,GAAOwvB,cAAoCtvB,SAAA,mBACxDL,EAACM,EAAK,CAAAJ,MAAOC,GAAOyvB,cAAoCvvB,SAAA,yBAI5DL,EAACqR,EAAI,CAACnR,MAAOC,GAAO0vB,qBAAoBxvB,SACtCL,EAAC2uB,EACC,CAAA7gB,KAAM2gB,EACNqB,WAAY,EACZhB,aAAe1rB,GAASA,EAAKO,GAAGyH,WAChC2jB,WAAY,EAAG3rB,UACbpD,EAACqR,EAAI,CAACnR,MAAOC,GAAO4vB,YAAW1vB,SAC7BoR,EAACxR,EAAiB,CAAAL,QAAS,IAAMkR,EAAOC,KAAK,aAAa3N,EAAKO,MAActD,SAAA,CAC3EL,EAAC4R,EAAK,CAACE,OAAQ,CAAEC,IAAK3O,EAAKyO,OAAS3R,MAAOC,GAAO6vB,eAClDhwB,EAACM,GAAKJ,MAAOC,GAAO8vB,aAAY5vB,SAAG+C,EAAKC,QACxCrD,EAACM,EAAK,CAAAJ,MAAOC,GAAO+vB,YAAc7vB,SAAA+C,EAAK+O,YAI7Cid,sBAAuBjvB,GAAOgwB,iBAC9BC,mBAAoBpwB,EAACM,EAAI,CAACJ,MAAOC,GAAOkwB,aAAYhwB,SAAA,gCAI1D,EAGEF,GAASK,EAAWC,OAAO,CAC/BiR,UAAW,CACTmB,KAAM,EACNnS,gBAAiB,QAEnB2uB,kBAAmB,CACjBd,gBAAiB,IAEnBe,aAAc,CACZjrB,OAAQ,IAEV2qB,eAAgB,CACdzX,kBAAmB,GACnBgX,gBAAiB,EACjBza,iBAAkB,EAClBlT,aAAc,GACdF,gBAAiB,WAEnBuuB,yBAA0B,CACxBvuB,gBAAiB,QAEnBwuB,aAAc,CACZluB,SAAU,GACVD,MAAO,QAETouB,uBAAwB,CACtBpuB,MAAO,QAETwuB,eAAgB,CACd3X,eAAgB,GAChB/W,WAAY,UAEd2uB,WAAY,CACVlrB,MAAe,GAARA,GACPD,OAAiB,IAATA,GACRzD,aAAc,IAEhB6uB,mBAAoB,CAClB1c,UAAW,GACXlS,WAAY,UAEd6uB,WAAY,CACV1uB,SAAU,GACVC,WAAY,QAEd0uB,cAAe,CACb3uB,SAAU,GACVD,MAAO,QAET6uB,cAAe,CACb5uB,SAAU,GACVD,MAAO,WAET8uB,qBAAsB,CACpBhd,KAAM,EACN0E,kBAAmB,IAErBwY,YAAa,CACXld,KAAM,EACNyd,OAAQ,GACR5vB,gBAAiB,UACjBE,aAAc,GACdD,QAAS,IAEXqvB,aAAc,CACZ1rB,MAAO,OACPD,OAAQ,IACRzD,aAAc,IAEhBqvB,aAAc,CACZjvB,SAAU,GACVC,WAAY,OACZ2W,eAAgB,GAElBsY,YAAa,CACXlvB,SAAU,GACVD,MAAO,QAETovB,iBAAkB,CAChBpY,cAAe,IAEjBsY,aAAc,CACZta,UAAW,SACX/U,SAAU,GACVD,MAAO,OACPgS,UAAW,MC3KTwd,GAAe,KACJC,IAEf,MAAMxjB,UAAEA,EAASqB,SAAGA,GAAa5B,KAejC,OACEgF,EAACJ,EAAI,CAACnR,MAAOC,GAAOuR,UAEnBrR,SAAA,CAAAL,EAACqR,EAAM,CAAAnR,MAAOC,GAAOswB,eAIrBhf,EAACif,EAAW,CAAAtB,sBAAuBjvB,GAAO8U,QAC1C5U,SAAA,CAAAL,EAACM,EAAK,CAAAJ,MAAOC,GAAON,4BAEnBG,EAACqU,GAAa,CAAA,GAEZ5C,EAACJ,EAAI,CAACnR,MAAOC,GAAOwwB,QAClBtwB,SAAA,CAAAL,EAACM,EAAK,CAAAJ,MAAOC,GAAOywB,aAAYvwB,SAAA,YAEhCL,EAACsR,EAAK,CAAAC,KAAM,WAAqBC,SAC/B,EAAAnR,SAAAoR,EAACxR,EAAgB,CAACC,MAAOC,GAAO0wB,iBAC9B7wB,EAAC8wB,GAAa3e,KAAK,OAAOM,KAAM,GAAI1R,MAAM,UAC1Cf,EAACM,EAAI,CAACJ,MAAOC,GAAO4wB,WAAsC1wB,SAAA,wBAC1DL,EAACwS,EAAQ,CAACL,KAAK,kBAAkBM,KAAM,GAAI1R,MAAM,eAarDf,EAACsR,EAAI,CAACC,KAAM,cAAwBC,oBACpCC,EAACxR,GAAiBC,MAAOC,GAAO0wB,OAAMxwB,SAAA,CACpCL,EAACwS,EAAQ,CAACL,KAAK,wBAAwBM,KAAM,GAAI1R,MAAM,UACvDf,EAACM,EAAK,CAAAJ,MAAOC,GAAO4wB,WAAU1wB,SAAA,eAC9BL,EAACwS,EAAS,CAAAL,KAAK,kBAAkBM,KAAM,GAAI1R,MAAM,eAInDf,EAACsR,GAAKC,KAAM,aAAuBC,SAAO,EAAAnR,SAC1CoR,EAACxR,EAAgB,CAACC,MAAOC,GAAO0wB,OAC9BxwB,SAAA,CAAAL,EAACwS,EAAQ,CAACL,KAAK,wBAAwBM,KAAM,GAAI1R,MAAM,UACvDf,EAACM,GAAKJ,MAAOC,GAAO4wB,kCACpB/wB,EAACwS,EAAQ,CAACL,KAAK,kBAAkBM,KAAM,GAAI1R,MAAM,kBAqC7D0Q,EAACJ,EAAK,CAAAnR,MAAOC,GAAOwwB,QAAOtwB,SAAA,CACjBL,EAACM,EAAK,CAAAJ,MAAOC,GAAOywB,aAAgCvwB,SAAA,gBACpDL,EAACsR,EAAI,CAACC,KAAM,kBAA4BC,SACxC,EAAAnR,SAAAoR,EAACxR,EAAiB,CAAAC,MAAOC,GAAO0wB,OAAMxwB,SAAA,CACpCL,EAACwS,GAASL,KAAK,uBAAuBM,KAAM,GAAI1R,MAAM,UACtDf,EAACM,EAAK,CAAAJ,MAAOC,GAAO4wB,WAAU1wB,SAAA,mBAC9BL,EAACwS,EAAQ,CAACL,KAAK,kBAAkBM,KAAM,GAAI1R,MAAM,eAInDf,EAACsR,EAAK,CAAAC,KAAM,gBAA0BC,SAAO,EAAAnR,SAC7CoR,EAACxR,GAAiBC,MAAOC,GAAO0wB,iBAC9B7wB,EAACwS,EAAS,CAAAL,KAAK,sBAAsBM,KAAM,GAAI1R,MAAM,UACrDf,EAACM,EAAK,CAAAJ,MAAOC,GAAO4wB,WAA+B1wB,SAAA,iBACnDL,EAACwS,EAAQ,CAACL,KAAK,kBAAkBM,KAAM,GAAI1R,MAAM,kBAMrDf,EAACL,GACD,CAAAE,MAAM,UACND,QApHe0C,UACnB,GAAI+L,EACF,UACQA,IACNyC,EAAOsG,QAAQ,WAChB,CAAC,MAAOrU,GACPC,QAAQD,MAAM,iBAAkBA,EACjC,MAEDC,QAAQD,MAAM,iCACf,EA2GGjD,YAAaK,GAAO6wB,aACpBjxB,UAAWI,GAAO8wB,kBAItB,EAGE9wB,GAASK,EAAWC,OAAO,CAC/BiR,UAAW,CACTmB,KAAM,EACNnS,gBAAiB,WAEnB+vB,aAAc,CAEb,EACDxa,QAAS,CACP5R,OAAQ,EACR3D,gBAAiB,WAKnBb,MAAO,CACLmB,SAAU,GACVC,WAAY,OACZF,MAAO,OACPgV,UAAW,OACX6B,eAAgB,GAChBzD,WAAY,GACZ4D,cAAe,IAEjB9C,QAAS,CACPsC,kBAAmB,GACnBQ,cAAe,GACf9Q,YAAa,OACbC,aAAc,CAAE5C,MAAO,EAAGD,OAAQ,GAClC8C,cAAe,GACfC,aAAc,GACdC,UAAW,EACX0L,UAAW,IAGb4d,QAAS,CACPzd,aAAc,IAEhB0d,aAAc,CACZ5vB,SAAU,GACVC,WAAY,MACZF,MAAO,OACPmS,aAAc,IAEhB2d,OAAQ,CACNjd,cAAe,MACf/S,WAAY,SACZ0tB,gBAAiB,GACjBtW,kBAAmB,EACnBC,kBAAmB,WAErB6Y,WAAY,CACVle,KAAM,EACN7R,SAAU,GACVD,MAAO,OACPoT,WAAY,IAEd6c,aAAc,CACZtwB,gBAAiB,UACjBC,QAAS,GACTC,aAAc,GACdC,WAAY,SACZ8R,YAAa,EACbC,YAAa,OACbG,UAAW,IAEbke,WAAY,CACVlwB,MAAO,OACPC,SAAU,MC1MRkwB,GAAoB,KACxB,MAAO/e,EAAMiH,GAAWpX,EAAS,KAC1BiM,EAAOoI,GAAYrU,EAAS,KAC5BkM,EAAUoI,GAAetU,EAAS,KACnCgM,QAAEA,EAAOP,WAAEA,EAAUY,SAAEA,EAAQrB,UAAGA,GAAcP,KACdzK,EAAS,IAC9BoP,IACgBpP,GAAS,GAK5C,MAAMyU,EAAa/F,GAAoBgG,EAAMC,MAAM,QAASjG,EAAS,CAAC,CAAEnQ,KAAM,QAExE8b,EAAc/Z,UAClB,IACE,MAAM6L,QAAeH,EAASC,EAAOC,GACrC,GAAIC,EAAOpL,MACT0T,EAAUtI,EAAOJ,SACZ,CACL/K,QAAQmB,IAAI,oBAEZ,IACA2M,EAAOsG,QAAQ,QAEd,CAAC,MAAOC,GACPrU,QAAQD,MAAM,oBAAqBsU,EACpC,CACF,CACF,CAAC,MAAOtU,GACPC,QAAQD,MAAM,eAAgBA,GAC9B0T,EAAU,kCACX,GA0EH,OAGEhF,EAACJ,EAAK,CAAAnR,MAAOC,GAAOuR,UAASrR,SAAA,CACrBL,EAACkkB,EAAMG,OAAM,CAAE3Z,QAAS,CAAE7K,MAAO,WAGvCG,EAACqR,EAAK,CAAAnR,MAAOC,GAAOgxB,aAAY9wB,SAC9BL,EAAC4R,EAAK,CAACE,OAAQ,CAAEC,IAAK,uFAAyF7R,MAAOC,GAAOixB,QAE/H3f,EAACJ,GAAKnR,MAAOC,GAAOkxB,eAClBrxB,EAACsV,EAAU,CAAApV,MAAOC,GAAOgV,MAAO0B,YAAY,OAAOC,aAAcsC,EAAS7V,MAAO4O,IACjFnS,EAACsV,EAAS,CAACpV,MAAOC,GAAOgV,MAAO0B,YAAY,QAAQC,aAAcT,EAAU9S,MAAO0K,IACnFjO,EAACsV,GAAUpV,MAAOC,GAAOgV,MAAO0B,YAAY,WAAWhC,iBAAe,EAACiC,aAAcR,EAAa/S,MAAO2K,IACzGlO,EAACsxB,EAAO,CAAA1xB,QAASyc,EAAaxc,MAAM,YACpCG,EAACsxB,EAAM,CAAC1xB,QAtFS0C,UACrB,MAAM4K,EAAkB,CACtBvJ,GAAIgV,GAAa,GACjBxG,OACAlE,QACAC,WACAwL,UAAW,GACX/I,eAAgB,GAChBgJ,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,OAAQ,GACRlL,cAAe,GACfnL,KAAM,GACNsW,eAAgB,GAChBC,QAAQ,EACRC,KAAM,GACNC,SAAU,GACVC,gBAAgB,EAChBvN,UAAW,GACXwN,SAAU,GACVC,aAAc,GACdC,OAAQ,GACRC,cAAe,GACfC,aAAc,GACdC,cAAe,GACfC,iBAAkB,GAClBC,qBAAsB,GACtBC,cAAe,GACfC,YAAa,EACbC,iBAAkB,GAClBC,gBAAiB,GACjBC,uBAAwB,EACxBC,UAAW,GACXC,kBAAmB,GACnBC,aAAc,GACdC,kBAAmB,GACnBC,qBAAsB,GACtBC,sBAAuB,GACvBC,8BAA+B,GAC/BC,aAAc,GACdC,sBAAuB,EACvBC,gBAAiB,GACjBC,iBAAiB,EACjBC,uBAAuB,EACvBC,yBAAyB,EACzBC,aAAa,EACbC,aAAc,GACdC,QAAS,GACTC,aAAc,GACdC,WAAY,GACZC,iBAAkB,IAGpB,IACE,MAAMjO,QAAeV,EAAYP,GACjC,GAAIiB,EAAOpL,MAET,YADA0T,EAAUtI,GAGVnL,QAAQmB,IAAI,2BAEZkY,GAEH,CAAC,MAAOtZ,GACPC,QAAQD,MAAM,sBAAuBA,GACrC0T,EAAU,yCACX,GAkBoC5W,MAAM,mBACvCG,EAACsxB,GAAO1xB,QAASyO,EAAUxO,MAAM,gBAQrC,EAKEM,GAASK,EAAWC,OAAO,CAC/BiR,UAAW,CACT7Q,WAAY,SACZyD,MAAO,QAET6sB,aAAc,CACZhd,WAAY,EACZ9P,OAAQ,IACRC,MAAO,IACP1D,aAAc,EACd4W,WAAY,IAEd4Z,IAAK,CACH/sB,OAAQ,IACRC,MAAO,IACP1D,aAAc,KAEhBywB,KAAM,CACJ7Z,WAAY,GACZ+Z,IAAK,GACLjtB,MAAO,OAET6Q,MAAO,CACL9Q,OAAQ,GACRsO,YAAa,EACb/R,aAAc,EACdD,QAAS,GACTD,gBAAiB,WClJb4D,MAAAA,GAAKD,OAAEA,IAAWE,EAAWC,IAAI,UAGnCgtB,GAAiB,KAEaxvB,GAAS,GAC3C,MAAOyvB,EAAcC,GAAmB1vB,GAAS,IAC3C0a,MAAEA,GAAUI,MACZ9P,UAAEA,GAAcP,KAItB,OACEgF,EAACJ,EAAI,CAACnR,MAAOC,GAAOuR,UAASrR,SAAA,CAC3BL,EAAC2xB,EACC,CAAAC,SAAS,eACTC,aACA,EAAAnxB,gBAAgB,gBAGlBV,EAAC8xB,EACC,CAAAhgB,OAAQ,CACNC,IAAK,oFAEP7R,MAAOC,GAAO4xB,gBACd/e,WAAW,iBAEXvB,EAACJ,EAAK,CAAAnR,MAAOC,GAAO6xB,QAAO3xB,SAAA,CACzBoR,EAACJ,EAAI,CAACnR,MAAOC,GAAO2V,OAClBzV,SAAA,CAAAL,EAACM,EAAK,CAAAJ,MAAOC,GAAO8xB,SAAQ5xB,SAAGqc,GAAOiB,aACtC3d,EAACM,EAAK,CAAAJ,MAAOC,GAAO+xB,QAAO7xB,SAAA,6DAK7BoR,EAACJ,EAAI,CAACnR,MAAOC,GAAOgyB,gBAClB9xB,SAAA,CAAAoR,EAACxR,EACC,CAAAC,MAAOC,GAAOiyB,cACdxyB,QAAS,KACPoD,QAAQmB,IAAI6I,GAAWI,eACvB0D,EAAOC,KAAK,SAAkB,EAC/B1Q,SAAA,CAEDL,EAACwS,EAAQ,CAACL,KAAK,iBAAiBM,KAAM,GAAI1R,MAAM,UAChDf,EAACM,EAAK,CAAAJ,MAAOC,GAAOkyB,kBAAiBhyB,SAAA,qBACrCL,EAACwS,GAASL,KAAK,gBAAgBM,KAAM,GAAI1R,MAAM,aAGjD0Q,EAACxR,EACC,CAAAC,MAAOC,GAAOmyB,gBACd1yB,QAAS,IAAMkR,EAAOC,KAAK,aAE3B1Q,SAAA,CAAAL,EAACwS,EAAS,CAAAL,KAAK,qBAAqBM,KAAM,GAAI1R,MAAM,UACpDf,EAACM,EAAI,CAACJ,MAAOC,GAAOoyB,mDACpBvyB,EAACwS,EAAS,CAAAL,KAAK,gBAAgBM,KAAM,GAAI1R,MAAM,qBAOvDf,EAACwyB,EAAK,CACJC,cAAc,QACdC,aAAa,EACbC,QAASlB,EACTmB,eAAgB,IAAMlB,GAAgB,GAAMrxB,SAE5CL,EAACqR,EAAI,CAACnR,MAAOC,GAAO0yB,eAAcxyB,SAChCoR,EAACJ,EAAK,CAAAnR,MAAOC,GAAO2yB,aAClBzyB,SAAA,CAAAL,EAACC,EACC,CAAAC,MAAOC,GAAO4yB,YACdnzB,QAAS,IAAM8xB,GAAgB,GAE/BrxB,SAAAL,EAACwS,EAAS,CAAAL,KAAK,gBAAgBM,KAAM,GAAI1R,MAAM,YAEjDf,EAACkxB,GAAiB,CAAA,YAK1B,EAQE/wB,GAASK,EAAWC,OAAO,CAC/BuyB,iBAAkB,CAChBngB,KAAM,EACN/R,eAAgB,SAChBD,WAAY,SACZH,gBAAiB,WAEnBgR,UAAW,CACTmB,KAAM,EACN/R,eAAgB,SAChBD,WAAY,SACZH,gBAAiB,WAEnBqxB,gBAAiB,CACflf,KAAM,EACNvO,MAAO,OACPD,OAAQ,OACRvD,eAAgB,SAChBD,WAAY,UAEdmxB,QAAS,CACPnf,KAAM,EACN/R,eAAgB,gBAChBD,WAAY,SACZH,gBAAiB,qBACjB8W,WAAY,GACZO,cAAe,GACfzT,MAAOA,IAETwR,OAAQ,CACNjV,WAAY,UAEdoxB,SAAU,CACRjxB,SAAU,GACVC,WAAY,OACZF,MAAO,SAETmxB,QAAS,CACPlxB,SAAU,GACVD,MAAO,QACPgV,UAAW,SACXwB,kBAAmB,GACnBxE,UAAW,IAEbof,gBAAiB,CACf7tB,MAAO,OACPzD,WAAY,UAEduxB,cAAe,CACbxe,cAAe,MACf/S,WAAY,SACZH,gBAAiB,QACjB6tB,gBAAiB,GACjBhX,kBAAmB,GACnB3W,aAAc,GACd0D,MAAO,MACPxD,eAAgB,gBAChBoS,aAAc,GACdjM,YAAa,OACbC,aAAc,CAAE5C,MAAO,EAAGD,OAAQ,GAClC8C,cAAe,GACfC,aAAc,EACdC,UAAW,GAEbgrB,kBAAmB,CACjBtxB,MAAO,QACPC,SAAU,GACVC,WAAY,QAEdqxB,gBAAiB,CACf1e,cAAe,MACf/S,WAAY,SACZH,gBAAiB,QACjB6tB,gBAAiB,GACjBhX,kBAAmB,GACnB3W,aAAc,GACd0D,MAAO,MACPxD,eAAgB,iBAElByxB,oBAAqB,CACnBxxB,MAAO,QACPC,SAAU,GACVC,WAAY,QAEdgyB,iBAAkB,CAChBpgB,KAAM,EACN/R,eAAgB,SAChBD,WAAY,UAEdqyB,YAAa,CACXlyB,SAAU,GACVD,MAAO,QAET8xB,eAAgB,CACdhgB,KAAM,EACN/R,eAAgB,SAChBD,WAAY,SACZH,gBAAiB,sBAEnBoyB,aAAc,CACZxuB,MAAO,MACP3D,QAAS,GACTD,gBAAiB,QACjBE,aAAc,GACdyG,UAAW,IAEb0rB,YAAa,CACX1a,UAAW,cCjNT8a,GAAwD,EAAGlN,YAC/D,MAAMgB,YAAEA,GAAgBZ,MACjBta,EAAQqnB,GAAapxB,EAASikB,EAAMvF,cAU3C,OAJAte,GAAU,KACRgxB,EAAUnN,EAAMvF,aAAa,GAC5B,CAACuF,EAAMvF,eAGR1gB,EAACsR,EAAI,CAACC,KAAM,kCAAkC0U,EAAMtiB,KAAe6N,SAAO,EAAAnR,SACxEL,EAACC,EAAgB,CAACC,MAAOC,GAAOkzB,KAAMzzB,QAVjB,KACvBqnB,EAAYhB,EAAM,EAUd5lB,SAAAoR,EAACJ,EAAK,CAAAnR,MAAOC,GAAO+L,KAAI7L,SAAA,CACtBL,EAACwS,EAAS,CAAAL,KAAK,MAAMM,KAAM,GAAI1R,MAAO0D,GAAOY,QAASnF,MAAOC,GAAOmzB,OACpE7hB,EAACJ,EAAK,CAAAnR,MAAOC,GAAO8R,QAAO5R,SAAA,CACzBL,EAACM,GAAKJ,MAAOC,GAAOgS,KAAI9R,SAAG4lB,EAAM9E,WAAWhP,OAC5CnS,EAACM,EAAI,CAACJ,MAAOC,GAAOkD,MAAQhD,SAAAsH,GAAkBse,EAAMhjB,SACpDwO,EAACnR,GAAKJ,MAAOC,GAAOozB,KAAkBlzB,SAAA,CAAA,cAAA4lB,EAAMvE,wBAE9C1hB,EAACqR,EAAK,CAAAnR,MAAOC,GAAOqzB,gBAAenzB,SACjCL,EAACM,GAAKJ,MAAO,CAACC,GAAO4L,OAAQ0nB,GAAe1nB,IAAW1L,SAAA0L,YAK/D,EAGE0nB,GAAkB1nB,IACtB,OAAQA,GACN,IAAK,gBACH,OAAO5L,GAAOuzB,mBAChB,IAAK,kBACH,OAAOvzB,GAAOwzB,oBAChB,IAAK,YACH,OAAOxzB,GAAOyzB,cAChB,QACE,OAAOzzB,GAAO0zB,cACjB,EAKG1zB,GAASK,EAAWC,OAAO,CAC/B4yB,KAAM,CACJ3yB,gBAAiB+D,GAAOuB,MACxBpF,aAAc6F,GAAMG,OACpBsM,aAAczM,GAAMG,OACpBjG,QAAS8F,GAAMG,OACfK,YAAaxC,GAAOwB,MACpBiB,aAAc,CAAE5C,MAAO,EAAGD,OAAQ,GAClC8C,cAAe,GACfC,aAAc,EACdC,UAAW,GAEb6E,KAAM,CACJ0H,cAAe,MACf/S,WAAY,UAEdyyB,KAAM,CACJQ,aAAcrtB,GAAMG,QAEtBqL,QAAS,CACPY,KAAM,GAERV,KAAM,CACJc,WAAY,OACZjS,SAAUyF,GAAMG,OAChB7F,MAAO0D,GAAOY,SAEhBhC,MAAO,CACL4P,WAAY,UACZjS,SAAUyF,GAAMG,OAChB7F,MAAO0D,GAAOY,SAEhBkuB,KAAM,CACJtgB,WAAY,UACZjS,SAAUyF,GAAME,MAChB5F,MAAO0D,GAAOmB,MAEhB4tB,gBAAiB,CACf1yB,eAAgB,SAChBD,WAAY,UAEdkL,OAAQ,CACNkH,WAAY,OACZjS,SAAUyF,GAAME,MAChB4nB,gBAAiB9nB,GAAME,MACvB4Q,kBAAmB9Q,GAAMG,OACzBhG,aAAc6F,GAAMI,OAEtB6sB,mBAAoB,CAClBhzB,gBAAiB+D,GAAOY,QACxBtE,MAAO0D,GAAOuB,OAEhB2tB,oBAAqB,CACnBjzB,gBAAiB+D,GAAO2B,OACxBrF,MAAO0D,GAAOwB,OAEhB2tB,cAAe,CACblzB,gBAAiB+D,GAAOgB,MACxB1E,MAAO0D,GAAOwB,OAEhB4tB,cAAe,CACbnzB,gBAAiB+D,GAAOyB,KACxBnF,MAAO0D,GAAOuB,SClHL+tB,GAAgBvzB,EAAWC,OAAO,CAC3CuzB,OAAS,CACLnzB,WAAY,SACZyD,MAAO,QAEXoN,UAAW,CAEPmB,KAAM,EACNnS,gBAAiB,UCCnBuzB,GAAW,EAAG7wB,WAChB,MAAMzB,mBAAEA,EAAkBN,UAAEA,EAASC,iBAAGA,EAAgBC,SAAEA,GAAYoL,EAAWzL,IACjDc,EAASoB,EAAKxB,UACf6K,KACWzK,EAAS,SAqDrD,OAEIyP,EAACJ,EAAI,CAACnR,MAAOC,GAAOuR,UAElBrR,SAAA,CAAAL,EAAC4R,EAAM,CAAA1R,MAAOC,GAAOixB,IAAKtf,OAAQ,CAACC,IAAK3O,EAAKyO,MAASzO,EAAKyO,MAAQzI,GAAUU,eAC7E2H,EAACJ,EAAK,CAAAnR,MAAOC,GAAO+zB,YAAW7zB,SAAA,CAC3BL,EAACM,GAAKJ,MAAOC,GAAON,MAAKQ,SAAG+C,EAAK+O,OACjCV,EAACnR,GAAKJ,MAAOC,GAAOkD,MAAKhD,SAAA,CAAGsH,GAAkBvE,EAAKC,OAAM,MAAKD,EAAKxB,YAO/E6P,EAACJ,GAAKnR,MAAOC,GAAO2jB,OAAMzjB,SAAA,CAClBL,EAACC,EAAgB,CAACL,QAAS,KA9D3ByB,EAAU+B,EA8DgC,EACxC/C,SAAAL,EAACm0B,EAAe,CAAChiB,KAAK,OAAOM,KAAM,OAGrCzS,EAACM,EAAI,CAACJ,MAAOC,GAAOi0B,WAAa/zB,SAAA+C,EAAKxB,WAEtC5B,EAACC,EAAgB,CAAEL,QAAS,KA9DN,IAAlBwD,EAAKxB,SAEPoB,QAAQmB,IAAI,eAGVnB,QAAQmB,IAAI,YACZ7C,EAAiB8B,GAwDuB,WAC1CpD,EAACm0B,EAAgB,CAAAj0B,MAAO,CAACa,MAAyB,IAAlBqC,EAAKxB,SAAiB,OAAQ,SAAUuQ,KAAK,QAAQM,KAAM,aAY7FzS,EAACC,EAAiB,CAAAL,QAAS,IAAM+B,EAAmByB,GAAK/C,SACrDL,EAACwS,EAAQ,CAACL,KAAK,gBAAgBM,KAAMhM,GAAMK,OAAQ/F,MAAO0D,GAAOwB,UAGrEjG,EAACqR,EAAI,CAAA,KAKV,EAKGlR,GAASK,EAAWC,OAAO,CAC7BiR,UAAW,CACVkG,eAAgB,GAChBhE,cAAe,OAEhBwd,IAAM,CACJ/sB,OAAQ,IACRC,MAAO,MACP1D,aAAc,IAEhBszB,YAAa,CACTrhB,KAAM,EACNiB,iBAAkB,IAEtBjU,MAAO,CACHmB,SAAU,GACVD,MAAO,WAEXsC,MAAO,CACHtC,MAAO,UACP6W,eAAgB,EAChB5W,SAAU,IAEdqzB,oBAAqB,CACjBzgB,cAAe,OAGnB0gB,OAAQ,CACJjwB,OAAQ,GACRC,MAAO,GACP1D,aAAc,GACdF,gBAAiB,WAGrB6zB,WAAY,CACR7zB,gBAAiB,QACjB2D,OAAQ,GACRC,MAAO,GACP1D,aAAc,GACdE,eAAgB,SAChBD,WAAY,UAGhB2zB,SAAU,CACNxzB,SAAU,GACVC,WAAY,OAEhB6iB,OAAS,CACL2Q,IAAKhuB,GAAMI,MACX+M,cAAe,MACf9S,eAAgB,aAChBD,WAAY,UAIduzB,WAAY,CACVrzB,MAAO0D,GAAOmB,KACdqN,WAAY,SACXsE,kBAAmB9Q,GAAMC,UCvJrBguB,GAA+C7M,IAC1D,MAAO8M,EAAOC,GAAY5yB,GAAS,IAC5B6yB,EAAcC,GAAmB9yB,EAAS,KAC3C+yB,uBAAEA,EAAsBC,0BAAEA,GAA8BC,KACxDvY,MAAEA,GAAUI,MACZ1b,MAAEA,EAAKG,SAAEA,EAAQE,cAAEA,EAAaD,SAAEA,EAAQE,WAAEA,EAAUE,SAAEA,EAAQD,mBAAEA,EAAkBE,UAAEA,EAASP,iBAAEA,GAAoBqL,EAAWzL,IAEtIg0B,EACEC,EAAMznB,aAAY,KAChB1K,QAAQmB,IAAI,kBACZixB,GAAO,GACN,KAGL,MAAMA,EAAQ9yB,UACZ,IACE,UAAYyyB,IAKV,YAJAre,EAAMC,MACJ,SACmB,YAAhBkW,EAASC,GAAmB,SAAW,SAA1C,0BAKJ,MAAMuI,EAAc,CAClBC,OAAQpI,GAAgBrF,EAAMyN,QAC9B5tB,SAAU,MACV6tB,aAAcrI,GAAgBrF,EAAM2N,gBACpChV,UAAY,wBACZiV,SAAU/Y,GAAOiB,YAAc,IAG3BnS,QAAiB+f,GAAoB8J,GAC3CP,EAAgBtpB,EAASqpB,cACzB7xB,QAAQmB,IAAI,kBAAkBqH,EAASqpB,gBACvCD,GAAS,EACV,CAAC,MAAO7xB,GACPC,QAAQD,MAAM,sBAAuBA,GACrC2T,EAAMC,MAAM,cAAe,6CAC5B,GAiDH,OACE3W,EAACqR,EAAI,CAAAhR,SACLL,EAACqR,EAAK,CAAAnR,MAAOC,GAAOuR,UAElBrR,SAAAL,EAAC01B,EAAc,CACbC,eAAgB9N,EAAM8N,eACtBC,mBAAoBxsB,GAAUa,YAAW5J,SAEzCL,EAAC61B,EAAiB,CAChBj2B,QAvDI0C,UACV,GAAKqyB,EAAL,CAIAC,GAAS,GAET,IACE,MAAM7xB,MAAEA,SAAgBiyB,EAA0BH,EAAc,CAC9DiB,SAAU,CACRC,UAAW30B,EAAMoP,KAAIpN,IAAS,CAC5BwR,MAAO8H,GAAOiB,YAAcvU,GAAUC,QACtCisB,OAAQU,OAAO5yB,EAAKC,OACpB4yB,YAAaC,EAAYC,YAAYC,cAEvCC,oBAAqB,KACrBC,aAAc,OAEhBC,UAAW,CACTC,SAAS,EACTC,aAAc,mBACdJ,oBAAqB,KACrBC,aAAc,MACdI,qBAAsB,CACpB7uB,OAAQquB,EAAYS,qBAAqBC,KACzCC,uBAAuB,EACvBC,YAAY,MAKd/zB,GACF6xB,GAAS,GACTle,EAAMC,MAAM,eAAe5T,EAAMg0B,OAAQh0B,EAAM2N,SAC/C1N,QAAQmB,IAAI,eAAepB,EAAMg0B,OAAQh0B,EAAM2N,WAE/CgG,EAAMC,MAAM,UAAW,0CACvB3T,QAAQmB,IAAI,UAAW,0CAE1B,CAAC,MAAOpB,GACPC,QAAQD,MAAM,iBAAkBA,GAChC2T,EAAMC,MAAM,gBAAiB,8CAC7Bie,GAAS,EACV,CAxCA,CAwCA,EAaKoC,UAAWrC,EACXz0B,MAAOC,GAAO82B,UACdr2B,aAAc,EACdygB,KAAM6U,EAAYgB,WAAWC,WAOnC,EAKEh3B,GAASK,EAAWC,OAAO,CAC/BiR,UAAW,CACTmB,KAAM,EACN/R,eAAgB,SAChBD,WAAY,UAEdo2B,UAAW,CACT3yB,MAAO,OACPD,OAAQ,GACRzD,aAAc,KClHZw2B,GAAe,KAEnB,MAAMh2B,MAAEA,EAAKG,SAAEA,EAAQE,cAAEA,EAAaD,SAAEA,EAAQE,WAAEA,EAAUE,SAAEA,EAAQD,mBAAEA,EAAkBE,UAAEA,EAASP,iBAAEA,GAAoBqL,EAAWzL,KAE/Hm2B,EAAoBC,GAAyBt1B,GAAS,GAe7D,OACEhC,EAACqR,EAAI,CAACnR,MAAOC,GAAOuR,UAGjBrR,SAAAe,EAAM4c,QAAU,EAEbhe,EAAAu3B,EAAA,CAAAl3B,SACAL,EAACqR,GAAKnR,MAAO6zB,GAAcC,OACzB3zB,SAAAL,EAACM,EAAI,CAAAD,SAAA,qCAMjBoR,EACQ8lB,EAAA,CAAAl3B,SAAA,CAAAL,EAAC2uB,EACD,CAAA7gB,KAAM1M,EACNo2B,8BAA8B,EAC9B1I,aAAc,CAAC2I,EAAGhX,IAAUA,EAAMrV,WAClCssB,oBACE13B,EAAKu3B,EAAA,CAAA,GAEPnI,sBAAuB,CACrBrX,cAAe,KAEjBgX,WAAY,EAAE3rB,UAEZpD,EAACi0B,IAAS7wB,KAAMA,EAAMu0B,kBAAmBh2B,EAAoB01B,mBAAoBA,IAEnFO,oBACC53B,UAKTA,EAACqR,EACD,CAAAhR,SAAAoR,EAAA8lB,EAAA,CAAAl3B,SAAA,CACUoR,EAACJ,EAAI,CAACnR,MAAOC,GAAO03B,eAEpBx3B,SAAA,CAAAoR,EAACJ,EAAI,CAAEnR,MAAOC,GAAO23B,cACnBz3B,SAAA,CAAAL,EAACM,EAAI,CAACJ,MAAOC,GAAOI,KAAmBF,SAAA,WACvCL,EAACM,EAAI,CAACJ,MAAOC,GAAOI,KAAIF,SAAGsH,GAAkBpG,QAG/CkQ,EAACJ,EAAM,CAAAnR,MAAOC,GAAO23B,cAAaz3B,SAAA,CAChCL,EAACM,GAAKJ,MAAOC,GAAOI,KAAIF,SAAA,cACxBL,EAACM,EAAK,CAAAJ,MAAOC,GAAOI,KAAIF,SAAGsH,GAAkBlG,QAE/CgQ,EAACJ,EAAM,CAAAnR,MAAOC,GAAO23B,cACnBz3B,SAAA,CAAAL,EAACM,EAAK,CAAAJ,MAAOC,GAAOI,uBACpBP,EAACM,EAAI,CAACJ,MAAOC,GAAOI,KAAOF,SAAAsH,GAAkBnG,WASjDxB,EAACqR,GAAKnR,MAAOC,GAAO8V,UAElBxE,EAACJ,EAAM,CAAAnR,MAAOC,GAAO23B,cAAaz3B,SAAA,CAChCL,EAACM,EAAK,CAAAJ,MAAOC,GAAOI,KAAIF,SAAA,iBACxBL,EAACM,EAAK,CAAAJ,MAAO,CAACC,GAAOI,KAAO,CAACQ,MAAO,QAASE,WAAY,QAAWZ,SAAAsH,GAAkBjG,aAK5F1B,EAACqR,EAAK,CAAAnR,MAAO,CAACsX,WAAY,IAAGnX,SAC3BL,EAAC00B,IACEiB,eAAgBvsB,GAAUe,mBAE3BmrB,OAAQ/zB,EACRi0B,eAAgB/zB,MAKpBzB,EAACqR,EAAI,CAACnR,MAAO,CAAC6X,cAAe,UAWhC,EAKG5X,GAASK,EAAWC,OAAO,CAE/Bs3B,gBAAiB,CACf7kB,aAAc,IAEhBxB,UAAW,CACTmB,KAAQ,EACRlS,QAAS,IAEXk3B,eAAgB,CACd9kB,UAAW,IAEb+kB,cAAe,CACblkB,cAAe,MACf9S,eAAgB,gBAChBgT,iBAAkB,GAClB8D,eAAgB,IAElBrX,KAAM,CACJQ,MAAO,UACPC,SAAU,IAEZiV,QAAS,CACPtD,YAAa,EACbC,YAAa,UACbhS,aAAc,GACdgX,eAAgB,IAElBogB,kBAAmB,CACjBt3B,gBAAiB,QACjB4D,MAAO,OACPsT,eAAgB,GAChBhX,aAAc,IAEhBq3B,WAAY,CACVj3B,SAAU,GACVD,MAAO,QACPgV,UAAW,SACXpV,QAAS,GACTM,WAAY,SC/KVi3B,GAAwC,EAAGt4B,UAASq4B,iBACxD,MAAOE,EAAWC,GAAgBp2B,GAAS,GAU3C,OACEhC,EAACq4B,GAAQ,CACPC,KAAM,CACJnxB,cAAe,GAEjBoxB,QAAS,CACPpxB,cAAegxB,EAAY,GAAM,GAEnCK,WAAY,CACVnX,KAAM,SACNoX,SAAU,KAEZv4B,MAAOC,GAAOu4B,KAEdr4B,SAAAL,EAACC,EAAgB,CACfC,MAAOC,GAAOw4B,UACd/4B,QAxBc,KAClBw4B,GAAa,GACbx4B,IAGAg5B,YAAW,IAAMR,GAAa,IAAQ,IAAI,EAqBtC/3B,SAAAL,EAACM,EAAI,CAACJ,MAAOC,GAAO04B,uBAAgBZ,OAGxC,EAKE93B,GAASK,EAAWC,OAAO,CAC/Bi4B,KAAM,CACJzxB,YAAa,QACbC,aAAc,CAAE5C,MAAO,EAAGD,OAAQ,GAClC+C,aAAc,IAEhBuxB,UAAW,CACTj4B,gBAAiB,UACjBiS,YAAa,EACbC,YAAa,UACbhS,aAAc,GACd2tB,gBAAiB,GACjB1tB,WAAY,SACZkS,UAAW,IAKb8lB,cAAe,CACb93B,MAAO,UACPC,SAAU,GACVC,WAAY,UCxDV63B,GAAmDjR,IACb7lB,EAAwB,MAC1BA,EAAwB,MAChE,MAAMX,UAAEA,GAAcsL,EAAWzL,KAC3B8O,gBAAEA,GAAoBJ,MAErBuoB,EAAWC,GAAgBp2B,GAAS,GAYrCoc,EAAcpO,GAAiBoO,aAAe,GAEpD,OACEpe,EAACqR,EAAI,CAACnR,MAAO,CAAEQ,gBAAiB,SAASL,SACvCoR,EAACif,EAAW,CAAAtB,sBAAuBjvB,GAAOuR,UACxCrR,SAAA,CAAAoR,EAACJ,EAAI,CAACnR,MAAOC,GAAOwR,eAActR,SAAA,CAChCL,EAAC4R,EACC,CAAAE,OAAQ,CAAEC,IAAK/B,GAAiBgC,OAAO,IACvC9R,MAAOC,GAAO6vB,eAEhBve,EAACJ,EAAI,CAACnR,MAAOC,GAAO44B,YAAW14B,SAAA,CAC7BL,EAACM,EAAK,CAAAJ,MAAOC,GAAO64B,aAAe34B,SAAA2P,GAAiBmC,OACpDnS,EAACM,EAAK,CAAAJ,MAAOC,GAAO84B,gBAAkB54B,SAAA+d,UAI1Cpe,EAACqR,EAAK,CAAAnR,MAAOC,GAAOwwB,QACnBtwB,SAAAoR,EAACJ,EAAI,CAACnR,MAAOC,GAAO+4B,YAAW74B,SAAA,CAC7BL,EAACM,EAAK,CAAAJ,MAAOC,GAAO8T,aAAe5T,SAAA2P,GAAiBmC,OACpDnS,EAACM,EAAK,CAAAJ,MAAOC,GAAOg5B,gBAAkB94B,SAAA+d,EAAYJ,OAAS,GAAKI,EAAYgb,MAAM,EAAG,IAAM,MAAQhb,SAKtGpe,EAACqR,EAAI,CAACnR,MAAOC,GAAOwwB,QAAOtwB,SACzBoR,EAACJ,EAAK,CAAAnR,MAAOC,GAAOk5B,aAClBh5B,SAAA,CAAAL,EAACM,EAAI,CAACJ,MAAOC,GAAOm5B,WAAUj5B,SAAA,UAC9BL,EAACM,EAAI,CAACJ,MAAOC,GAAO8V,QAAO5V,SAAA,MAC3BoR,EAACJ,EAAI,CAACnR,MAAOC,GAAOo5B,UAASl5B,SAAA,CAC3BL,EAACM,EAAK,CAAAJ,MAAOC,GAAOkD,MAAQhD,SAAAsH,GAAkBqI,GAAiB3M,OAAS,OACxErD,EAACM,EAAI,CAACJ,MAAOC,GAAOie,YAAW/d,SAC5B+d,YAOTpe,EAACw5B,GAAc,CAAA55B,QAhDD,KACdoQ,IACF3O,EAAU2O,GACVooB,GAAa,GAGbQ,YAAW,IAAMR,GAAa,IAAQ,KACvC,EAyCwCH,WAAY,oBAGrD,EAKE93B,GAASK,EAAWC,OAAO,CAC/BiR,UAAW,CACT+nB,SAAU,EACV/4B,gBAAiB,UACjBC,QAAS,IAEXgR,eAAgB,CACdwB,SAAU,YAEZ6c,aAAc,CACZ1rB,MAAO,OACPD,OAAQ,IACRzD,aAAc,GACdsS,aAAc,IAEhB6lB,YAAa,CACX5lB,SAAU,WACVshB,IAAK,GACLiF,KAAM,GACNrmB,MAAO,IAGT6lB,YAAa,CACXhmB,aAAc,IAEhBe,aAAc,CACZjT,SAAU,GACVC,WAAY,OACZF,MAAO,WAETo4B,gBAAiB,CACfn4B,SAAU,GACVD,MAAO,UACPgS,UAAW,GAEbimB,aAAc,CACZh4B,SAAU,GACVC,WAAY,OACZF,MAAO,UACPmS,aAAc,GAEhB+lB,gBAAiB,CACfj4B,SAAU,GACVD,MAAO,WAET4vB,QAAS,CACPhe,YAAa,EACbC,YAAa,UACbhS,aAAc,GACdD,QAAS,GACTuS,aAAc,IAEhB0d,aAAc,CACZ5vB,SAAU,GACVC,WAAY,OACZF,MAAO,UACPmS,aAAc,IAEhBymB,aAAc,CACZ/lB,cAAe,OAEjBgmB,YAAa,CACXt1B,MAAO,GACPD,OAAQ,GACRzD,aAAc,GACd4X,YAAa,GACb7F,YAAa,EACbC,YAAa,WAEfinB,oBAAqB,CACnBlnB,YAAa,EACbC,YAAa,WAEfymB,aAAc,CACZzlB,cAAe,MACf/S,WAAY,UAEdy4B,WAAY,CACVt4B,SAAU,GACVC,WAAY,OACZF,MAAO,UACPyX,YAAa,IAEfvC,QAAS,CACPjV,SAAU,GACVD,MAAO,UACP+S,iBAAkB,IAEpBylB,UAAW,CACT1mB,KAAM,GAERxP,MAAO,CACLrC,SAAU,GACVC,WAAY,OACZF,MAAO,UACPmS,aAAc,GAEhBkL,YAAa,CACXpd,SAAU,GACVD,MAAO,UACP+4B,SAAU,QAEZnB,UAAW,CACTj4B,gBAAiB,UACjBiS,YAAa,EACbC,YAAa,UACbhS,aAAc,GACd2tB,gBAAiB,GACjB1tB,WAAY,SACZkS,UAAW,IAEb8lB,cAAe,CACb93B,MAAO,UACPC,SAAU,GACVC,WAAY,UCvKV84B,GAA0ClS,IAC9C,MAAM7a,UAAEA,GAAcP,MAGhBqD,SAAEA,EAAQE,gBAAEA,EAAekB,cAAEA,EAAahB,UAAEA,EAASnN,MAAEA,GAAU6M,KAMvE,OACE5P,EAACqR,EAAI,CAACnR,MAAOC,GAAOuR,UAASrR,SAC1B6P,EACClQ,EAACg6B,EAAkB,CAAAvnB,KAAK,QAAQ1R,MAAO0D,GAAOY,UAC5CtC,EACF/C,EAACqR,EAAI,CAACnR,MAAOC,GAAO85B,eAAc55B,SAChCoR,EAACnR,EAAI,CAACJ,MAAOC,GAAO+5B,UAAS75B,SAAA,CAAA,uBAAuB0C,OAGtD/C,EAAAu3B,EAAA,CAAAl3B,SACEL,EAAC2uB,EAAQ,CACPG,aAAe1rB,GAA4BA,EAAKO,GAAGyH,WACnD0C,KAAMgC,EACNif,WAAY,EAAG3rB,UACbpD,EAACC,EAAgB,CAACL,QAAS,KAjBrCsR,EAiB+D9N,EAAK,EACxD/C,SAAAL,EAACmR,GAAe,CAAC3B,QAASpM,MAG9BwrB,YAAU,EACVQ,sBAAuB,CAAE+K,UAAW1zB,GAAMG,aAYlD,EAKEzG,GAASK,EAAWC,OAAO,CAC/BiR,UAAW,CACTqB,UAAWtM,GAAMG,OACjBuN,WAAY,IAEd8lB,eAAgB,CACdn5B,eAAgB,SAChBD,WAAY,UAEdq5B,UAAW,CACTn5B,MAAO0D,GAAO0B,IACdnF,SAAUyF,GAAMG,QAElBwzB,yBAA0B,CACxBrnB,UAAWtM,GAAMG,OACjBjG,QAAS8F,GAAMG,OACflG,gBAAiB+D,GAAOoB,MACxBjF,aAAc6F,GAAME,OAEtB0zB,oBAAqB,CACnBr5B,SAAUyF,GAAMI,MAChB5F,WAAY,UCrFVq5B,GAAqB,KACzB,MAAM5d,MAAEA,GAAUI,KAIlB,OACErL,EAACJ,EAAI,CAACnR,MAAOC,GAAOuR,UAChBrR,SAAA,CAAAL,EAACM,EAAK,CAAAJ,MAAOC,GAAOo6B,MAAQl6B,SAAAqc,GAAOiB,aACnC3d,EAACM,EAAI,CAACJ,MAAO,CAACC,GAAOq6B,MAAO,CAAEznB,UAAW,EAAGhS,MAAO0D,GAAOwB,QAAQ5F,SAAA,oBAEvE,EA2BGF,GAASK,EAAWC,OAAO,CAC7BiR,UAAW,CACPpN,MAAO,OACP6P,WAAY,IAEdomB,MAAO,CACLxnB,UAAW,EACXhS,MAAO0D,GAAOmB,KACd5E,SAAU,IAEZw5B,MAAO,CACLznB,UAAW,EACXhS,MAAO0D,GAAOwB,MACdjF,SAAU,GACVC,WAAY,KAEdw5B,MAAO,CACL1nB,UAAW,EACXhS,MAAO0D,GAAOwB,MACdjF,SAAU,IAEZ05B,gBAAiB,CACfznB,WAAY,OACZjS,SAAUyF,GAAMM,QAAS,EACzBgM,UAAW,EACXhS,MAAQ,OACN+S,iBAAkB,OCvDtBxP,MAAEA,IAAUC,EAAWC,IAAI,UAE3Bm2B,GAA8B,KAClC,MAAMC,EAAgBC,EAAO,IAAIC,EAASC,MAAM,IAAIC,SAI5Cte,MAAQyM,GAAiBrM,KAC3Bme,EAAwB,CAC5B9R,GAAcnX,OAAOkpB,oBAAsB9xB,GAAUO,uBACrDwf,GAAcnX,OAAOmpB,4BAA8B/xB,GAAUQ,uBAC7Duf,GAAcnX,OAAOwI,eAAiBpR,GAAUS,0BAGlD,OACE4H,EAACJ,GAAKnR,MAAOA,GAAMwR,oBACjB1R,EAACqR,GAAKnR,MAAOA,GAAMk7B,sBACjBp7B,EAAC86B,EAASnM,UACR7gB,KAAMmtB,EACNrM,cACAC,gCAAgC,EAChCwM,SAAUP,EAASQ,MACjB,CAAC,CAAEC,YAAa,CAAEC,cAAe,CAAEC,EAAGb,MACtC,CAAEc,iBAAiB,IAErBC,eAAe,EACf7M,aAAc,CAAC2I,EAAGhX,IAAUA,EAAMrV,WAClC2jB,WAAY,EAAG3rB,UAEXpD,EAACqR,EAAK,CAAAnR,MAAOA,GAAMyR,eAActR,SAC/BL,EAAC4R,EAAK,CAAC1R,MAAOA,GAAM2R,MAAOC,OAAQ,CAAEC,IAAK3O,GAAcgG,GAAUU,qBAM5E9J,EAACqR,EAAI,CAACnR,MAAOA,GAAM07B,gBAAev7B,SAChCL,EAAC2uB,EAAQ,CACPC,YACA,EAAA9gB,KAAMmtB,EACNnM,aAAc,CAAC2I,EAAGhX,IAAUA,EAAMrV,WAClC2jB,WAAY,EAAGtO,YACb,MAAMob,EAAa,EAChBpb,EAAQ,GAAKnc,GACdmc,EAAQnc,IACPmc,EAAQ,GAAKnc,IAKVw3B,EAAWlB,EAAcmB,YAAY,CACzCF,aACAG,YAHuB,CAAC,EAAG,EAAG,GAI9BC,YAAa,UAETl7B,EAAQ65B,EAAcmB,YAAY,CACtCF,aACAG,YATuB,CAAC,OAAQ,OAAQ,QAUxCC,YAAa,UAEf,OACEj8B,EAACqR,EAAI,CAAEnR,MAAO,CAACA,GAAMg8B,aAAc,CAAEC,iBAAmB,UAEtD97B,SAAAL,EAACo8B,GAAS,CAACr7B,MAAOA,EAAOs7B,MAAOP,KAIlC,QAKV,EAGEM,GAA4C,EAAGC,QAAOt7B,WAExDf,EAAC86B,EAASzpB,KAAI,CACZnR,MAAO,CAACA,GAAMo8B,UAAW,CAAE57B,gBAAiBK,EAAOw7B,UAAW,CAAC,CAAEF,cAKjEn8B,GAAQM,EAAWC,OAAO,CAC9BiR,UAAW,CACTmB,KAAM,GAERuoB,aAAc,CACZvoB,KAAM,GAER+oB,gBAAiB,CACf/oB,KAAM,EACNvO,SACAxD,eAAgB,aAChBD,WAAY,SACZsS,SAAU,WACXC,OAAQ,IAETzB,eAAgB,CACd7Q,eAAgB,WAEhBD,WAAY,SACZyD,UAEFuN,MAAO,CACLvN,MAAO,MACPD,OAAQ,IACRzD,aAAc,IAEhB07B,UAAW,CACTh4B,MAAO,EACPD,OAAQ,EACRzD,aAAc,EACd+R,YAAa,GAGfupB,aAAc,CACb53B,MAAO,GACP3D,QAAS,MCzHN67B,GAAgB,KAClB,MAAM9f,MAAEA,GAAUI,KAEpB,OACE9c,EAACqR,EAAI,CAACnR,MAAOC,GAAOuR,mBAChBD,EAACJ,EAAK,CAAAnR,MAAOC,GAAO2V,OAAMzV,SAAA,CACtBL,EAACM,EAAK,CAAAJ,MAAOC,GAAOs8B,YAAWp8B,SAAGqc,GAAOggB,YAAc,KACvD18B,EAACsR,EAAI,CAACC,KAAM0a,GAAOnc,SAAmB0B,SACtC,EAAAnR,SAAAL,EAACC,EAEO,CAAAI,SAAAL,EAACwS,EAAQ,CAACL,KAAK,OAAOM,KAAMhM,GAAMK,OAAQ/F,MAAO0D,GAAOY,kBAMzE,EAKGlF,GAASK,EAAWC,OAAO,CAC7BiR,UAAW,CACPqB,UAAWtM,GAAMG,OAEjBkN,iBAAkB,IAEtBgC,OAAQ,CACJlC,cAAe,MACf9S,eAAgB,iBAGpB27B,YAAa,CACVx7B,WAAY,OACXD,SAAUyF,GAAMK,OAAQ,KC3B1B61B,GAAgB,IAElB38B,EAACqR,EACD,CAAAhR,SAAAoR,EAACJ,EAAK,CAAAnR,MAAOC,GAAOuR,UAASrR,SAAA,CAC3BL,EAACqR,GAAKnR,MAAOC,GAAOy8B,cAClBv8B,SAAAL,EAACsV,EAAS,CACRpV,MAAOC,GAAO08B,YACdhmB,YAAY,kBACZimB,qBAAqB,cAIzB98B,EAACqR,EAAI,CAACnR,MAAOC,GAAO48B,cAClB18B,SAAAL,EAACC,EACC,CAAAI,SAAAL,EAACwS,EACC,CAAAL,KAAK,kBACLM,KAAM,GACN1R,MAAM,QACNb,MAAOC,GAAO68B,sBAYpB78B,GAASK,EAAWC,OAAO,CAC/BiR,UAAW,CACTkC,cAAe,OAGjBqpB,YAAa,CACXj8B,SAAU,GACVD,MAAO,UACPmS,aAAc,IAEhB0pB,cAAe,CACbhpB,cAAe,MACf/S,WAAY,SACZqS,aAAc,GAEdN,YAAa,OACbD,YAAa,EACb/R,aAAc,GACd2W,kBAAmB,GACnBgX,gBAAiB,GACjBjqB,MAAO,OAETu4B,YAAa,CACXhqB,KAAM,EACN7R,SAAU,GACVD,MAAO,QAETg8B,cAAe,CAEbnpB,cAAe,MACf/S,WAAY,SACZqS,aAAc,GACdiB,WAAY,GAGZvB,YAAa,OACbD,YAAa,EACb/R,aAAc,GACd2W,kBAAmB,GACnBgX,gBAAiB,IAEnByO,WAAY,CACV3nB,YAAa,EACbye,aAAc,GAWhBpf,MAAO,CACLP,WAAY,GACZpB,UAAW,KCrFTmqB,GAAgB,IAKdzrB,EAACif,EAAU,CACT8G,8BAA8B,EAC9Bt3B,MAAO,CACLQ,gBAAiB,QACjB8W,WAAY,IAGbnX,SAAA,CACCL,EAACs6B,GAAkB,CAAA,GACnBt6B,EAAC28B,GAAgB,CAAA,GACjB38B,EAAC26B,OACD36B,EAACw8B,GAAa,CAAA,GACfx8B,EAAC+5B,GAAW,CAAApS,QAAQ,IACpB3nB,EAACqR,EAAK,CAAAnR,MAAO,CAAC6X,cAAe,UAazBvX,EAAWC,OAAO,CAC/BV,UAAW,CACPkT,WAAY,OACZjS,SAAU,IAEdm8B,cAAe,CACXrpB,iBAAkB,GAClBf,UAAWtM,GAAME,OAErBy2B,OAAQ,CACJxpB,cAAe,MACf9S,eAAgB,gBAChBD,WAAY,UAEhBw8B,SAAU,CACNpqB,WAAY,WACZjS,SAAUyF,GAAMG,OAChB7F,MAAO0D,GAAOmB,MAElB03B,UAAW,CACPnqB,SAAU,WACVC,OAAQ,GACR9O,MAAO,GACPD,OAAQ,GACRzD,aAAc,EACdC,WAAY,SACZH,gBAAiB,QACjBI,eAAgB,SAChBy8B,OAAQ,KAEZC,WAAY,CACRvqB,WAAY,UACZhS,WAAY,MACZD,SAAU,GACVD,MAAO0D,GAAO4B,cC/Ed,MAAAo3B,GAAgB,IAElBz9B,EAACqR,EAAI,CAAAhR,SACHL,EAACM,EAAI,CAAAD,SAAA,oBAOIG,EAAWC,OAAO,CAAE,GCFjB8D,EAAWC,IAAI,UAE3B,MAAAk5B,GAAsB,KAC1B,MAAM1wB,UAAEA,GAAcP,MACfkxB,EAAYC,GAAiB57B,EAAS,KACtC67B,EAAeC,GAAoB97B,EAA8B,IAExDgL,GAAWE,MAAOF,EAAUE,KAAKyD,eACnC3D,GAAWE,MAAOF,EAAUE,KAAKe,MAE/C,MAAM6B,SAAEA,GAAaF,KAEfmuB,EAAgBx9B,IACpB,IACEq9B,EAAcr9B,GACd,MAAMy9B,EAAUluB,EAAS7L,QAAQuL,GAC/BA,EAAQ2C,KAAKuc,cAAczf,SAAS1O,EAAKmuB,iBAE3CoP,EAAiBE,EAClB,CAAC,MAAOj7B,GACPC,QAAQmB,IAAI,yBAA0BpB,EACvC,GAGH,OACE0O,EAACwsB,EAAY,CAAC/9B,MAAO,CAAE2S,KAAM,aAC3BpB,EAACJ,EAAK,CAAAnR,MAAOC,GAAO+9B,gBAAe79B,SAAA,CACjCL,EAACC,EACC,CAAAI,SAAAL,EAACwS,EACC,CAAAL,KAAK,iBACLM,KAAMhM,GAAMK,OACZ5G,MAAOC,GAAOg+B,eAIlBn+B,EAACqR,EAAI,CAACnR,MAAOC,GAAOi+B,cAClB/9B,SAAAL,EAACsV,EACC,CAAApV,MAAOC,GAAO08B,YACdt5B,MAAOo6B,EACP7mB,aAAcinB,EACdlnB,YAAY,+BAIhB7W,EAACqR,YACCrR,EAACC,GAAiBC,MAAOC,GAAOk+B,UAAWz+B,QAAS,IAAMm+B,EAAaJ,GAAWt9B,SAChFL,EAACs+B,EAAO,CAACnsB,KAAK,SAASM,KAAM,GAAI1R,MAAO0D,GAAOsB,kBAMrD/F,EAAC2uB,EACC,CAAAG,aAAe1rB,GAA4BA,EAAKO,GAAGyH,WACnD0C,KAAqB,KAAf6vB,GAAyD,IAAzBE,EAAc7f,OAA1BlO,EAAoD+tB,EAC9E9O,WAAY,EAAG3rB,UACbpD,EAACqR,EAAI,CAACnR,MAAOC,GAAOo+B,WAClBl+B,SAAAL,EAACkU,GAAa,IAAK9Q,MAGvB0sB,WAAY,EACZ0O,mBAAoBr+B,GAAOs+B,IAC3BrP,sBAAuB,CAAE7X,kBAAmB,QAGhD,EAKSpX,GAASK,EAAWC,OAAO,CACtC89B,WAAY,CACV1rB,KAAM,EACNyd,OAAQ,GAEVmO,IAAK,CACH39B,eAAgB,iBAElBo9B,gBAAiB,CACftqB,cAAe,MACf9S,eAAgB,SAChB+S,aAAc,SACdC,iBAAkBrN,GAAME,MACxBjG,gBAAiB+D,GAAOa,UACxB1E,aAAc6F,GAAMG,OACpBgR,eAAgBnR,GAAMG,OACtBvC,OAAQ,IAEV85B,WAAY,CACVrqB,iBAAkB,GAClB/S,MAAO0D,GAAOmB,KACdmN,UAAWtM,GAAME,OAEnBy3B,cAAc,CACZvrB,KAAM,EACNnS,gBAAiB+D,GAAOa,UACxBkT,YAAa/R,GAAME,MACnB/F,aAAc6F,GAAME,OAEtBk2B,YAAa,CACX5pB,WAAY,UACZ3O,MAAO,OACPD,OAAQ,OACRkT,kBAAmB9Q,GAAME,OAE3B03B,UAAW,CACT/5B,MAAO,GACPD,OAAQ,OACRzD,aAAc6F,GAAMG,OACpB9F,eAAgB,SAChBD,WAAY,SACZH,gBAAiB+D,GAAOY"}